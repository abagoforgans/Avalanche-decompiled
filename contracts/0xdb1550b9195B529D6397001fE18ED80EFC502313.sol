contract main {




// =====================  Runtime code  =====================


#
#  - uniswapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - sub_6ef42ac9(?)
#  - sub_93290d8e(?)
#  - sub_946c1711(?)
#  - sub_c7324128(?)
#
const curvePool = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd

const usdt = 0xc7198437980c041c805a1edcba50c1ce5db95118

const usdc = 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664

const joeRouter = 0x60ae616a2155ee3d9a68541ba4544862310933d4

const pangolinRouter = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106

const mim = 0x130966628846bfd36ff31a822705796e8cb8c18d

const dai = 0xd586e7f844cea2f87f50152665bcbc2c279d8d70


address adminAddress;
mapping of uint8 stor1;
array of address routers;

function routers(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < routers.length
    return routers[arg1]
}

function admin() {
    return adminAddress
}

function _fallback() payable {
    revert
}

function transferAdmin(address arg1) {
    require calldata.size - 4 >= 32
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    adminAddress = arg1
}

function addOperator(address arg1) {
    require calldata.size - 4 >= 32
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    stor1[address(arg1)] = 1
}

function withdrawEther(uint256 arg1, address arg2) {
    require calldata.size - 4 >= 64
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    call arg2 with:
       value arg1 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with 0, 'withdraw failed'
}

function sub_0d359102(?) {
    require calldata.size - 4 >= 32
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    mem[(32 * arg1.length) + 128] = 0
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    idx = 0
    while idx < routers.length:
        require routers.length
        mem[0] = 2
        routers[routers.length] = 0
        routers.length--
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg1.length:
        require idx < arg1.length
        routers.length++
        mem[0] = 2
        routers[routers.length] = mem[(32 * idx) + 140 len 20]
        idx = idx + 1
        continue 
}

function withdrawToken(address arg1, uint256 arg2, address arg3) {
    require calldata.size - 4 >= 96
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    if not ext_code.size(arg1):
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg3) << 64, 0, Mask(224, 32, arg2) >> 32
    mem[324 len 0] = 0
    call arg1 with:
         gas gas_remaining wei
        args Mask(224, 32, arg2) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), address(arg3) << 64, 0, arg2
        if not unknown_0xa9059cbb(?????), address(arg3) << 64:
            revert with 0, 32, 42, 0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function sub_9bfc4f15(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if adminAddress != msg.sender:
        revert with 0, 'only admin'
    idx = 0
    while idx < ('cd', 4).length:
        s = 0
        while s < ('cd', 36).length:
            require idx < ('cd', 4).length
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
            staticcall address(cd[((32 * idx) + cd[4] + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, address(cd[((32 * s) + cd[36] + 36)])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[mem[64] + 122 len 10]
            _101 = mem[64]
            mem[mem[64] + 36] = address(cd[((32 * s) + cd[36] + 36)])
            mem[mem[64] + 68] = -1
            _102 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_102 + 32] = 0x95ea7b300000000000000000000000000000000000000000000000000000000 or mem[_102 + 36 len 28]
            mem[64] = _101 + 164
            mem[_101 + 100] = 32
            mem[_101 + 132] = 'SafeERC20: low-level call failed'
            if not ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                revert with 0, 'Address: call to non-contract'
            _108 = mem[_102]
            u = _102 + 32
            v = mem[64]
            t = mem[_102]
            while t >= 32:
                mem[v] = mem[u]
                u = u + 32
                v = v + 32
                t = t - 32
                continue 
            mem[mem[64] + floor32(mem[_102])] = mem[_102 + floor32(mem[_102]) + -(mem[_102] % 32) + 64 len mem[_102] % 32] or Mask(8 * -(mem[_102] % 32) + 32, -(8 * -(mem[_102] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_102])])
            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _108 + _101 + -mem[64] + 160]
            if not return_data.size:
                if ext_call.success:
                    if mem[96]:
                        require mem[96] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[mem[64] + 110 len 22]
                    s = s + 1
                    continue 
                if mem[96]:
                    revert with memory
                      from 128
                       len mem[96]
                _151 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                mem[mem[64] + 36] = mem[_101 + 100]
                _153 = mem[_101 + 100]
                idx = 0
                while idx < _153:
                    mem[idx + _151 + 68] = mem[idx + _101 + 132]
                    idx = idx + 32
                    continue 
                if not _153 % 32:
                    revert with memory
                      from mem[64]
                       len _153 + _151 + -mem[64] + 68
                mem[floor32(_153) + _151 + 68] = mem[floor32(_153) + _151 + -(_153 % 32) + 100 len _153 % 32]
                revert with memory
                  from mem[64]
                   len floor32(_153) + _151 + -mem[64] + 100
            _148 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_148] = return_data.size
            mem[_148 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if ext_call.success:
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[_148 + 32]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[mem[64] + 110 len 22]
                s = s + 1
                continue 
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            _155 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = mem[_101 + 100]
            _157 = mem[_101 + 100]
            idx = 0
            while idx < _157:
                mem[idx + _155 + 68] = mem[idx + _101 + 132]
                idx = idx + 32
                continue 
            if not _157 % 32:
                revert with memory
                  from mem[64]
                   len _157 + _155 + -mem[64] + 68
            mem[floor32(_157) + _155 + 68] = mem[floor32(_157) + _155 + -(_157 % 32) + 100 len _157 % 32]
            revert with memory
              from mem[64]
               len floor32(_157) + _155 + -mem[64] + 100
        idx = idx + 1
        continue 
}

function joeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, 'wrong sender'
    require arg4.length >= 160
    require cd[(arg4 + 100)] <= 4294967296
    require cd[(arg4 + 100)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= 4294967296 and cd[(arg4 + 100)] + (32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 68 <= arg4.length + 36
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = this.address
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not cd[(arg4 + 164)]:
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    _36 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 36)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        _52 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        _47 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            _76 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                _119 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                else:
                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _67 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _108 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _71 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _113 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 68)]))
            staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 68)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(cd[(arg4 + 68)]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 68)]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                call address(cd[(arg4 + 36)]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(cd[(arg4 + 36)]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(cd[(arg4 + 36)]))
        staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                    _41 = mem[192]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 68)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    call address(cd[(arg4 + 68)]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                        _63 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        _58 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            _96 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _87 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _131 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _91 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _136 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 36)]))
            staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = -1
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 36)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                if not ext_code.size(address(cd[(arg4 + 68)])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                call address(cd[(arg4 + 68)]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 392 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}

function swapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, 'wrong sender'
    require arg4.length >= 160
    require cd[(arg4 + 100)] <= 4294967296
    require cd[(arg4 + 100)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= 4294967296 and cd[(arg4 + 100)] + (32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 68 <= arg4.length + 36
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = this.address
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not cd[(arg4 + 164)]:
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    _36 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 36)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        _52 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        _47 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            _76 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                _119 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                else:
                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _67 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _108 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _71 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _113 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 68)]))
            staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 68)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(cd[(arg4 + 68)]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 68)]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                call address(cd[(arg4 + 36)]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(cd[(arg4 + 36)]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(cd[(arg4 + 36)]))
        staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                    _41 = mem[192]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 68)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    call address(cd[(arg4 + 68)]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                        _63 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        _58 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            _96 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _87 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _131 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _91 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _136 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 36)]))
            staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = -1
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 36)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                if not ext_code.size(address(cd[(arg4 + 68)])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                call address(cd[(arg4 + 68)]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 392 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}

function pancakeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, 'wrong sender'
    require arg4.length >= 160
    require cd[(arg4 + 100)] <= 4294967296
    require cd[(arg4 + 100)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= 4294967296 and cd[(arg4 + 100)] + (32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 68 <= arg4.length + 36
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = this.address
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not cd[(arg4 + 164)]:
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    _36 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 36)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        _52 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        _47 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            _76 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                _119 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                else:
                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _67 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _108 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _71 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _113 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 68)]))
            staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 68)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(cd[(arg4 + 68)]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 68)]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                call address(cd[(arg4 + 36)]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(cd[(arg4 + 36)]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(cd[(arg4 + 36)]))
        staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                    _41 = mem[192]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 68)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    call address(cd[(arg4 + 68)]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                        _63 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        _58 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            _96 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _87 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _131 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _91 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _136 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 36)]))
            staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = -1
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 36)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                if not ext_code.size(address(cd[(arg4 + 68)])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                call address(cd[(arg4 + 68)]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 392 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}

function pangolinCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, 'wrong sender'
    require arg4.length >= 160
    require cd[(arg4 + 100)] <= 4294967296
    require cd[(arg4 + 100)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= 4294967296 and cd[(arg4 + 100)] + (32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 68 <= arg4.length + 36
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = this.address
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not cd[(arg4 + 164)]:
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    _36 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 36)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        _52 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        _47 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            _76 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                _119 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                else:
                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _67 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _108 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _71 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _113 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 68)]))
            staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 68)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(cd[(arg4 + 68)]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 68)]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                call address(cd[(arg4 + 36)]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(cd[(arg4 + 36)]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(cd[(arg4 + 36)]))
        staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                    _41 = mem[192]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 68)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    call address(cd[(arg4 + 68)]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                        _63 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        _58 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            _96 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _87 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _131 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _91 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _136 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 36)]))
            staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = -1
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 36)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                if not ext_code.size(address(cd[(arg4 + 68)])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                call address(cd[(arg4 + 68)]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 392 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}

function waultSwapCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, 'wrong sender'
    require arg4.length >= 160
    require cd[(arg4 + 100)] <= 4294967296
    require cd[(arg4 + 100)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= 4294967296 and cd[(arg4 + 100)] + (32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 68 <= arg4.length + 36
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = this.address
    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not cd[(arg4 + 164)]:
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    _36 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 36)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        _52 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        _47 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            _76 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                _119 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                else:
                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _67 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _108 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 36)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            _71 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                _113 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 68)]))
            staticcall address(cd[(arg4 + 68)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 68)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(cd[(arg4 + 68)]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 68)]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(cd[(arg4 + 36)]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 0] = 0
                call address(cd[(arg4 + 36)]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(cd[(arg4 + 36)]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 36)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(cd[(arg4 + 36)]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 36)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(cd[(arg4 + 36)]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 36)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(cd[(arg4 + 36)]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 36)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(cd[(arg4 + 36)]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(cd[(arg4 + 36)]))
        staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                    _41 = mem[192]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                    if not ext_code.size(address(cd[(arg4 + 68)])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                    call address(cd[(arg4 + 68)]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                        _63 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        _58 = mem[192]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            _96 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 1
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                else:
                    if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _87 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _131 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 0
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            _91 = mem[192]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                _136 = mem[192]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 132] = 2
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(cd[(arg4 + 132)]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(cd[(arg4 + 36)]))
            staticcall address(cd[(arg4 + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 250 len 10]
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 196] = -1
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 128] = 68
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(cd[(arg4 + 36)])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 0] = 0
            call address(cd[(arg4 + 36)]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        revert with memory
                          from 128
                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 402 len 22]
                require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                if not ext_code.size(address(cd[(arg4 + 68)])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 456 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                call address(cd[(arg4 + 68)]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 392 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            revert with memory
                              from 128
                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                            call address(cd[(arg4 + 68)]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 36)]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        if not ext_code.size(address(cd[(arg4 + 68)])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                        call address(cd[(arg4 + 68)]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 36)]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                if not ext_code.size(address(cd[(arg4 + 68)])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                call address(cd[(arg4 + 68)]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(cd[(arg4 + 36)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(cd[(arg4 + 68)]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                    if not ext_code.size(address(cd[(arg4 + 68)])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                    call address(cd[(arg4 + 68)]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(cd[(arg4 + 68)]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                        if not ext_code.size(address(cd[(arg4 + 68)])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                        call address(cd[(arg4 + 68)]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(cd[(arg4 + 68)]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                            if not ext_code.size(address(cd[(arg4 + 68)])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(cd[(arg4 + 132)]), mem[160 len 28]
                                            call address(cd[(arg4 + 68)]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(arg4 + cd[(arg4 + 100)] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(arg4 + cd[(arg4 + 100)] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}

function sub_81279c7e(?) {
    require calldata.size - 4 >= 128
    require cd[100] <= 4294967296
    require cd[100] + 36 <= calldata.size
    require ('cd', 100).length <= 4294967296 and cd[100] + ('cd', 100).length + 36 <= calldata.size
    if address(cd[4]) != this.address:
        revert with 0, 'wrong sender'
    require ('cd', 100).length >= 160
    require ('cd', 100)[2] <= 4294967296
    require ('cd', 100)[2] + 68 <= ('cd', 100).length + 36
    require cd[(cd[100] + ('cd', 100)[2] + 36)] <= 4294967296 and ('cd', 100)[2] + (32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 68 <= ('cd', 100).length + 36
    mem[128 len 32 * cd[(cd[100] + ('cd', 100)[2] + 36)]] = call.data[cd[100] + ('cd', 100)[2] + 68 len 32 * cd[(cd[100] + ('cd', 100)[2] + 36)]]
    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = this.address
    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
    if not ('cd', 100)[4]:
        require ext_code.size(address(('cd', 100)[1]))
        staticcall address(('cd', 100)[1]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                    _36 = mem[160]
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _36, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                    if not ext_code.size(address(('cd', 100)[0])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                        _52 = mem[160]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _52, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                        if not ext_code.size(address(('cd', 100)[0])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                    else:
                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _79 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _79, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                        else:
                            _82 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _82, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                        _47 = mem[160]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _47, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                        if not ext_code.size(address(('cd', 100)[0])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                            _76 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _76, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(('cd', 100)[0]):
                                _119 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _119, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                            else:
                                _116 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _116, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                else:
                    if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            _67 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _67, 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                _108 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _108, 0
                            else:
                                if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _152 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _152, 0
                                else:
                                    _155 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _155, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                        if not ext_code.size(address(('cd', 100)[0])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            _71 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _71, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                _113 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _113, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                            else:
                                if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _159 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _159, 0
                                else:
                                    _162 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _162, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = mem[128]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
            call address(('cd', 100)[0]) with:
                 gas gas_remaining wei
                args Mask(480, -256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        revert with memory
                          from 128
                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(('cd', 100)[1]))
            staticcall address(('cd', 100)[1]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 250 len 10]
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(('cd', 100)[1])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call address(('cd', 100)[1]).0xe094fcd with:
                 gas gas_remaining wei
                args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        revert with memory
                          from 128
                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not cd[(cd[100] + ('cd', 100)[2] + 36)]:
                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                            else:
                                if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                        else:
                            if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[0])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(('cd', 100)[0]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[0])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                else:
                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 402 len 22]
                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                            else:
                                if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                        else:
                            if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(('cd', 100)[1]):
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[0])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                                    else:
                                        if 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664 == address(('cd', 100)[0]):
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 0] = 0
                call address(('cd', 100)[0]) with:
                     gas gas_remaining wei
                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                            revert with memory
                              from 128
                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            call address(('cd', 100)[0]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(('cd', 100)[0]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[160], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[160], 0
                                else:
                                    if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[160], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[160], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[0])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                            call address(('cd', 100)[0]) with:
                                 gas gas_remaining wei
                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[160], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[0])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                    call address(('cd', 100)[0]) with:
                                         gas gas_remaining wei
                                        args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[160], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[0])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                        call address(('cd', 100)[0]) with:
                                             gas gas_remaining wei
                                            args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                            call address(('cd', 100)[0]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[160], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[0])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                            call address(('cd', 100)[0]) with:
                                                 gas gas_remaining wei
                                                args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[160], 0
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[160], 0
                                    else:
                                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[160], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[160], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 0 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[0])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, mem[128 len 28]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 0] = 0
                                call address(('cd', 100)[0]) with:
                                     gas gas_remaining wei
                                    args Mask(480, -256, mem[128 len 28]) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
    else:
        require ext_code.size(address(('cd', 100)[0]))
        staticcall address(('cd', 100)[0]).0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            require 2 < cd[(cd[100] + ('cd', 100)[2] + 36)]
            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                    _41 = mem[192]
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args 0, 0, _41, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    _147 = mem[160]
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                    if not ext_code.size(address(('cd', 100)[1])):
                        revert with 0, 'Address: call to non-contract'
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _147) >> 32
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                    call address(('cd', 100)[1]) with:
                         gas gas_remaining wei
                        args Mask(224, 32, _147) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                        _63 = mem[192]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 1
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 1, _63, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        _192 = mem[160]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                        if not ext_code.size(address(('cd', 100)[1])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _192) >> 32
                        call address(('cd', 100)[1]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _192) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                    else:
                        if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            _99 = mem[192]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _99, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            _226 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _226) >> 32
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _226) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                        else:
                            _102 = mem[192]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 2
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 2, _102, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            _227 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _227) >> 32
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _227) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
            else:
                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        _58 = mem[192]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                        require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 1, 0, _58, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        _189 = mem[160]
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                        if not ext_code.size(address(('cd', 100)[1])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _189) >> 32
                        call address(('cd', 100)[1]) with:
                             gas gas_remaining wei
                            args Mask(224, 32, _189) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            _96 = mem[192]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 1
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 1, _96, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            _222 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _222) >> 32
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _222) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                        else:
                            if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                _139 = mem[192]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, _139, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                _274 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _274) >> 32
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _274) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                            else:
                                _142 = mem[192]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 1
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 2
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 2, _142, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                _275 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _275) >> 32
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _275) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                else:
                    if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                            _87 = mem[192]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, _87, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            _217 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _217) >> 32
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _217) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                _131 = mem[192]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, _131, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                _264 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _264) >> 32
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _264) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                            else:
                                if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _174 = mem[192]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, _174, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    _309 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _309) >> 32
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _309) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                                else:
                                    _177 = mem[192]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 0
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, _177, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    _310 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _310) >> 32
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _310) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                    else:
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                            _91 = mem[192]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                            require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 2, 0, _91, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            _219 = mem[160]
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _219) >> 32
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, _219) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                _136 = mem[192]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 1
                                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 1, _136, 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                _270 = mem[160]
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _270) >> 32
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, _270) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                            else:
                                if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    _181 = mem[192]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, _181, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    _315 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _315) >> 32
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _315) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
                                else:
                                    _184 = mem[192]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 0x3df0212400000000000000000000000000000000000000000000000000000000
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 132] = 2
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 2
                                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 2, _184, 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    _316 = mem[160]
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = unknown_0xa9059cbb(?????), address(('cd', 100)[3]) << 64, 0, Mask(224, 32, _316) >> 32
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, _316) << 224, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        revert with memory
                          from 128
                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 402 len 22]
            else:
                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 403 len 22]
        else:
            require ext_code.size(address(('cd', 100)[0]))
            staticcall address(('cd', 100)[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 250 len 10]
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164] = 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 196] = -1
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 128] = 68
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 164 len 28] = 0xaea2e71b631fa93683bcf256a8689dfa
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 160 len 4] = approve(address arg1, uint256 arg2)
            if not ext_code.size(address(('cd', 100)[0])):
                revert with 0, 'Address: call to non-contract'
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 292 len 64] = approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 0] = 0
            call address(('cd', 100)[0]).0xe094fcd with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 0xaea2e71b631fa93683bcf256, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 356 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        revert with memory
                          from 128
                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                    revert with 0, 'SafeERC20: low-level call failed'
                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 402 len 22]
                require 2 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args 0, 0, mem[192], 0
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 1, mem[192], 0
                        else:
                            if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 2, mem[192], 0
                else:
                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 1, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 1, mem[192], 0
                            else:
                                if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 2, mem[192], 0
                    else:
                        if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 1, mem[192], 0
                                else:
                                    if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 2, mem[192], 0
                        else:
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 2, 0, mem[192], 0
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 1, mem[192], 0
                                else:
                                    if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 0, mem[192], 0
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 2, mem[192], 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                if not ext_code.size(address(('cd', 100)[1])):
                    revert with 0, 'Address: call to non-contract'
                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 456 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                call address(('cd', 100)[1]) with:
                     gas gas_remaining wei
                    args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 392 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 520 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                            revert with memory
                              from 128
                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 566 len 22]
                else:
                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 488]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
            else:
                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    require 2 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                            if not ext_code.size(address(('cd', 100)[1])):
                                revert with 0, 'Address: call to non-contract'
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                            call address(('cd', 100)[1]) with:
                                 gas gas_remaining wei
                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        revert with memory
                                          from 128
                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                            else:
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                        else:
                            if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                    else:
                                        if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                else:
                    require return_data.size >= 32
                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + 324]:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 403 len 22]
                    require 2 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                    require ext_code.size(0xaea2e71b631fa93683bcf256a8689dfa0e094fcd)
                    if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[0]):
                        if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args 0, 0, mem[192], 0
                        else:
                            if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 0, 1, mem[192], 0
                            else:
                                if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                else:
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 2, mem[192], 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                        if not ext_code.size(address(('cd', 100)[1])):
                            revert with 0, 'Address: call to non-contract'
                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                        call address(('cd', 100)[1]) with:
                             gas gas_remaining wei
                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                    revert with memory
                                      from 128
                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                        else:
                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    else:
                        if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[0]):
                            if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args 1, 0, mem[192], 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                if not ext_code.size(address(('cd', 100)[1])):
                                    revert with 0, 'Address: call to non-contract'
                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                call address(('cd', 100)[1]) with:
                                     gas gas_remaining wei
                                    args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            revert with memory
                                              from 128
                                               len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                        require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                else:
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                            else:
                                if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 1, 1, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 0, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                    else:
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 1, 2, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        else:
                            if address(('cd', 100)[0]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 0, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            else:
                                if 0x130966628846bfd36ff31a822705796e8cb8c18d == address(('cd', 100)[1]):
                                    call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                         gas gas_remaining wei
                                        args 2, 0, mem[192], 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                    if not ext_code.size(address(('cd', 100)[1])):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                    call address(('cd', 100)[1]) with:
                                         gas gas_remaining wei
                                        args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                revert with memory
                                                  from 128
                                                   len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                            require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                    else:
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    if 0xc7198437980c041c805a1edcba50c1ce5db95118 == address(('cd', 100)[1]):
                                        call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                             gas gas_remaining wei
                                            args 2, 1, mem[192], 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                        if not ext_code.size(address(('cd', 100)[1])):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                        call address(('cd', 100)[1]) with:
                                             gas gas_remaining wei
                                            args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    revert with memory
                                                      from 128
                                                       len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                        else:
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    else:
                                        if address(('cd', 100)[1]) != 0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 0, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len 22]
                                        else:
                                            call 0xaea2e71b631fa93683bcf256a8689dfa0e094fcd.exchange(int128 arg1, int128 arg2, uint256 arg3, uint256 arg4) with:
                                                 gas gas_remaining wei
                                                args 2, 2, mem[192], 0
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require 1 < cd[(cd[100] + ('cd', 100)[2] + 36)]
                                            if not ext_code.size(address(('cd', 100)[1])):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 457 len 64] = 0, address(('cd', 100)[3]), mem[160 len 28]
                                            call address(('cd', 100)[1]) with:
                                                 gas gas_remaining wei
                                                args mem[160], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 393 len 28], mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 521 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                        revert with memory
                                                          from 128
                                                           len cd[(cd[100] + ('cd', 100)[2] + 36)]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if cd[(cd[100] + ('cd', 100)[2] + 36)]:
                                                    require cd[(cd[100] + ('cd', 100)[2] + 36)] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 567 len 22]
                                            else:
                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(32 * cd[(cd[100] + ('cd', 100)[2] + 36)]) + (2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
}



}
