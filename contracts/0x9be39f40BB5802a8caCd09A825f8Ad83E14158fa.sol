contract main {




// =====================  Runtime code  =====================


#
#  - sub_2bca6a17(?)
#  - sub_459a48e6(?)
#  - sub_ab3c1e33(?)
#  - sub_b0cf1251(?)
#
const sub_5c6da06d(?) = 0xcb716962b61b1daeee3bb7b00a62fa5970a0403f71f5411336b278056d07c3a7

const sub_b25e1b44(?) = 100 * 10^6

const sub_d6cd151c(?) = 0x89cb0400c70c94e944e4f761ae265ecbbb35b0c2e5324bc54cda0b66eda126d4

const sub_d8acba8b(?) = 600

const sub_e09de54c(?) = 0xfc6276b984367518703ab50269bddb0e5d9b019fc1d96a6c62062a9706049e41

const sub_f1a640f8(?) = 8

const CONTROLLER_ROLE = 0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357

const LIQUIDATOR_ROLE = 0x5e17fc5225d4a099df75359ce1f405503ca79498a8dc46a7d583235a0ee45c16

const DEFAULT_ADMIN_ROLE = 0

const DEPOSITOR_ROLE = 0x8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9

const BRIDGE_ROLE = 0x52ba824bfabc2bcfcdf7f0edbb486ebb05e1836c90e78047efeb949990f72e5f

const OPERATOR_ROLE = 0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929

const VERSION = 16


uint8 stor0;
uint8 stor0; offset 8
uint256 stor0; offset 8
array of struct roleAdmin;
address sub_006f4daaAddress;
mapping of struct sub_55603fc7;
address vaultAddress;
address sub_bb2ea881Address;
address treasuryAddress;
address controllerAddress;
uint256 totalBorrowed;
uint256 sub_ef09db69;
address sub_b99584e4Address;
address sub_4d6f2572Address;
address bonusPoolAddress;

function sub_006f4daa(?) payable {
    return sub_006f4daaAddress
}

function getRoleAdmin(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_512
}

function bonusPool() payable {
    return bonusPoolAddress
}

function totalBorrowed() payable {
    return totalBorrowed
}

function sub_4d6f2572(?) payable {
    return sub_4d6f2572Address
}

function sub_55603fc7(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    return sub_55603fc7[address(arg1)][9][address(arg2)].field_0
}

function treasury() payable {
    return treasuryAddress
}

function getRoleMember(bytes32 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 >= roleAdmin[arg1].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0xfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64,
                    mem[198 len 30]
    return roleAdmin[arg1][arg2].field_0
}

function hasRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    return bool(roleAdmin[arg1][1][address(arg2)].field_0)
}

function sub_b47dfa49(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0
}

function sub_b99584e4(?) payable {
    return sub_b99584e4Address
}

function sub_bb2ea881(?) payable {
    return sub_bb2ea881Address
}

function sub_bc53b762(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_55603fc7[address(arg1)].field_680
}

function getRoleMemberCount(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_0
}

function getInterestRate(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return sub_55603fc7[address(arg1)].field_768
}

function tokens(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require sub_55603fc7[arg1].field_672 < 6
    return sub_55603fc7[arg1].field_0, 
           sub_55603fc7[arg1].field_256,
           sub_55603fc7[arg1].field_512,
           sub_55603fc7[arg1].field_512,
           sub_55603fc7[arg1].field_680,
           sub_55603fc7[arg1].field_512,
           sub_55603fc7[arg1].field_512,
           sub_55603fc7[arg1].field_768,
           bool(sub_55603fc7[arg1].field_808),
           sub_55603fc7[arg1].field_1024,
           sub_55603fc7[arg1].field_1280,
           sub_55603fc7[arg1].field_1536,
           sub_55603fc7[arg1].field_1792
}

function sub_ef09db69(?) payable {
    return sub_ef09db69
}

function controller() payable {
    return controllerAddress
}

function vault() payable {
    return vaultAddress
}

function _fallback() payable {
    revert
}

function setTreasury(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    require arg1
    treasuryAddress = arg1
}

function sub_f56e67ed(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    sub_55603fc7[address(arg1)].field_1792 = arg2
}

function setOracle(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    sub_55603fc7[address(arg1)].field_256 = arg2
}

function setBonusPool(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    bonusPoolAddress = arg1
}

function setController(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    controllerAddress = arg1
}

function sub_180548cd(?) payable {
    require calldata.size - 4 >= 32
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    if arg1 >= 10 * 10^18:
        revert with 0, 'Threshold too high'
    sub_ef09db69 = arg1
}

function setInterestWallet(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    if not arg1:
        revert with 0, 'Cannot set to 0 address'
    sub_b99584e4Address = arg1
}

function sub_63323ddd(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    if not address(arg1):
        revert with 0, 'Cannot be 0 address'
    sub_006f4daaAddress = address(arg1)
}

function sub_d08bec84(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    if not address(arg1):
        revert with 0, 'Cannot set to 0 address'
    sub_4d6f2572Address = address(arg1)
}

function sub_c337465d(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == uint16(arg2)
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    if uint16(arg2) <= 100:
        revert with 0, 'Incorrect LiquidationRatio'
    if uint16(arg2) >= 10000:
        revert with 0, 'Incorrect LiquidationRatio'
    sub_55603fc7[address(arg1)].field_696 = uint16(arg2)
}

function sub_02e2c56c(?) payable {
    require calldata.size - 4 >= 32
    if arg1 <= 0:
        revert with 0, 'Why are you burning 0'
    require ext_code.size(sub_bb2ea881Address)
    call sub_bb2ea881Address.burn(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args msg.sender, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit 0x434a3809: arg1, msg.sender
}

function sub_341ba9e9(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == uint16(arg2)
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    if uint16(arg2) <= 100:
        revert with 0, 'Incorrect Min CollateralRatio'
    if uint16(arg2) >= 50000:
        revert with 0, 'Incorrect Min CollateralRatio'
    sub_55603fc7[address(arg1)].field_680 = uint16(arg2)
}

function sub_28274d25(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 < 6
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    require arg3 <= 5
    sub_55603fc7[address(arg1)].field_672 = Mask(96, 0, arg3)
    sub_55603fc7[address(arg1)].field_512 = address(arg2)
    require arg3 < 6
    emit 0xd4a71c5c: address(arg1), address(arg2), arg3
}

function sub_ddc68467(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not sub_55603fc7[address(arg1)].field_256:
        revert with 0, 'No oracle configured'
    require ext_code.size(sub_55603fc7[address(arg1)].field_256)
    staticcall sub_55603fc7[address(arg1)].field_256.0xeed04d6a with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function getPriceFromOracle(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not sub_55603fc7[address(arg1)].field_256:
        revert with 0, 'No oracle configured'
    require ext_code.size(sub_55603fc7[address(arg1)].field_256)
    staticcall sub_55603fc7[address(arg1)].field_256.getAssetPrice(address arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function grantRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    47,
                    0x73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e,
                    mem[211 len 17]
    if not roleAdmin[arg1][1][address(arg2)].field_0:
        roleAdmin[arg1].field_0++
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = arg2
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_160 = 0
        roleAdmin[arg1][1][address(arg2)].field_0 = roleAdmin[arg1].field_0
        emit RoleGranted(arg1, arg2, msg.sender);
}

function renounceRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if arg2 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    47,
                    0x77416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c,
                    mem[211 len 17]
    if roleAdmin[arg1][1][address(arg2)].field_0:
        require roleAdmin[arg1].field_0 - 1 < roleAdmin[arg1].field_0
        require roleAdmin[arg1][1][address(arg2)].field_0 - 1 < roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        require roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function revokeRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    48,
                    0x65416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b,
                    mem[212 len 16]
    if roleAdmin[arg1][1][address(arg2)].field_0:
        require roleAdmin[arg1].field_0 - 1 < roleAdmin[arg1].field_0
        require roleAdmin[arg1][1][address(arg2)].field_0 - 1 < roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        require roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function sub_94460fa2(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(msg.sender)].field_0:
        revert with 0, 'Not an Operator'
    if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
        sub_55603fc7[address(arg1)][9][address(arg2)].field_0 = 0
    else:
        if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
            sub_55603fc7[address(arg1)][9][address(arg2)].field_0 = 0
        else:
            if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            sub_55603fc7[address(arg1)][9][address(arg2)].field_0 = sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
}

function sub_0e6b3175(?) payable {
    require calldata.size - 4 >= 288
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 < 6
    require arg4 == address(arg4)
    require arg5 == address(arg5)
    require arg6 == uint16(arg6)
    require arg7 == uint16(arg7)
    require arg9 == bool(arg9)
    if controllerAddress != msg.sender:
        revert with 0, 'Not a Controller'
    if uint16(arg6) <= 100:
        revert with 0, 'Incorrect MinCollateralRatio'
    if uint16(arg6) >= 10000:
        revert with 0, 'Incorrect MinCollateralRatio'
    if uint16(arg7) <= 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Liquidation Ratio cannot be lower than 100'
    if arg8 <= 0:
        revert with 0, 'Mint capacity cannot be 0'
    sub_55603fc7[address(arg1)].field_0 = address(arg2)
    require arg3 <= 5
    sub_55603fc7[address(arg1)].field_672 = Mask(96, 0, arg3)
    sub_55603fc7[address(arg1)].field_1792 = arg8
    sub_55603fc7[address(arg1)].field_256 = address(arg4)
    sub_55603fc7[address(arg1)].field_512 = address(arg5)
    sub_55603fc7[address(arg1)].field_672 = sub_55603fc7[address(arg1)].field_672
    sub_55603fc7[address(arg1)].field_680 = uint16(arg6)
    sub_55603fc7[address(arg1)].field_696 = uint16(arg7)
    sub_55603fc7[address(arg1)].field_712 = 0
    sub_55603fc7[address(arg1)].field_808 = Mask(216, 0, bool(arg9))
    emit 0xa111dac8: address(arg1), address(arg2), arg6 << 240, arg8, address(arg4), address(arg5)
}

function initialize(address arg1, address arg2, address arg3, address arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    if not uint8(stor0.field_8):
        if ext_code.size(this.address):
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            46,
                            0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                            mem[210 len 18]
        if not uint8(stor0.field_8):
            uint8(stor0.field_0) = 1
            uint8(stor0.field_8) = 1
            Mask(248, 0, stor0.field_8) = 0
    sub_bb2ea881Address = arg1
    vaultAddress = arg4
    treasuryAddress = arg3
    if not roleAdmin[0][1][address(arg2)].field_0:
        roleAdmin[0].field_0++
        roleAdmin[0][roleAdmin[0].field_0].field_0 = arg2
        roleAdmin[0][roleAdmin[0].field_0].field_160 = 0
        roleAdmin[0][1][address(arg2)].field_0 = roleAdmin[0].field_0
        emit RoleGranted(0, arg2, msg.sender);
    if not roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(arg2)].field_0:
        roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929].field_0++
        roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929].field_0].field_0 = arg2
        roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929].field_0].field_160 = 0
        roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929][1][address(arg2)].field_0 = roleAdmin[0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929].field_0
        emit RoleGranted(0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929, arg2, msg.sender);
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function sub_ec87d369(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not sub_55603fc7[address(arg1)].field_768:
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
        if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_1280:
            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    return -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
            else:
                if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    return ((sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0)
    else:
        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        return -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        return ((sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0)
        else:
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        return -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                else:
                    if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        return (((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0)
    return 0
}

function sub_1c729764(?) payable {
    require calldata.size - 4 >= 256
    require arg1 == address(arg1)
    require calldata.size - 36 >= 224
    if arg7 > 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0:
        revert with 0, 32, 34, 0x7445434453413a20696e76616c6964207369676e6174757265202773272076616c75, mem[514 len 30]
    if arg5 != 27:
        if arg5 != 28:
            revert with 0, 32, 34, 0x6445434453413a20696e76616c6964207369676e6174757265202776272076616c75, mem[514 len 30]
    mem[540] = arg7
    signer = erecover(sha3(Mask(224, 32, '\x19Ethereum Signed Message:\n32') >> 32, sha3(0x1600bf08d1337d577792a0881e38d4abc6230d20f11ff45f4cf989f65996d6bb, arg2, arg3 << 216, arg4 << 216, address(arg8), address(arg1))), arg5 << 248, arg6, arg7) 
    if not erecover.result:
        revert with ext_call.return_data[0 len return_data.size]
    if not address(signer):
        revert with 0, 'ECDSA: invalid signature'
    if address(signer) != sub_006f4daaAddress:
        revert with 0, 'Data not from trusted signer'
    if arg4 % 1099511627776 > block.timestamp:
        revert with 0, 'Price timestamp invalid'
    if block.timestamp - (arg4 % 1099511627776) > 600:
        revert with 0, 'Price timestamp invalid'
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0xbbf80fc0 with:
            gas gas_remaining wei
           args address(arg1), msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        return 0
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0x183991f4 with:
            gas gas_remaining wei
           args address(arg1), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if sub_55603fc7[address(arg1)].field_680 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require sub_55603fc7[address(arg1)].field_680
        if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 >= 0 / sub_55603fc7[address(arg1)].field_680:
            return 0
        if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 > 0 / sub_55603fc7[address(arg1)].field_680:
            revert with 0, 'SafeMath: subtraction overflow'
        if not sub_55603fc7[address(arg1)].field_768:
            if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
                revert with 0, 'SafeMath: subtraction overflow'
            if block.timestamp - sub_55603fc7[address(arg1)].field_712:
                if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
        else:
            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
                revert with 0, 'SafeMath: subtraction overflow'
            if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
                if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 'SafeMath: addition overflow'
                if sub_55603fc7[address(arg1)].field_1280:
                    if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                    else:
                        if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
            else:
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 'SafeMath: addition overflow'
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                    if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                    else:
                        if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
        if 0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
            return 0
        if 0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0)
    if arg2 * ext_call.return_data[0] / ext_call.return_data[0] != arg2:
        revert with 0, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
    if not arg2 * ext_call.return_data[0] / 100 * 10^6:
        if sub_55603fc7[address(arg1)].field_680 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require sub_55603fc7[address(arg1)].field_680
        if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 >= 0 / sub_55603fc7[address(arg1)].field_680:
            return 0
        if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 > 0 / sub_55603fc7[address(arg1)].field_680:
            revert with 0, 'SafeMath: subtraction overflow'
        if not sub_55603fc7[address(arg1)].field_768:
            if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
                revert with 0, 'SafeMath: subtraction overflow'
            if block.timestamp - sub_55603fc7[address(arg1)].field_712:
                if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
        else:
            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
                revert with 0, 'SafeMath: subtraction overflow'
            if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
                if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 'SafeMath: addition overflow'
                if sub_55603fc7[address(arg1)].field_1280:
                    if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                    else:
                        if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
            else:
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 'SafeMath: addition overflow'
                if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                    if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                    else:
                        if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                return 0
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
        if 0 >= (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
            return 0
        if 0 > (0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((0 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0)
    if 100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / arg2 * ext_call.return_data[0] / 100 * 10^6 != 100:
        revert with 0, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
    if sub_55603fc7[address(arg1)].field_680 <= 0:
        revert with 0, 'SafeMath: division by zero'
    require sub_55603fc7[address(arg1)].field_680
    if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 >= 100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680:
        return 0
    if sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 > 100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680:
        revert with 0, 'SafeMath: subtraction overflow'
    if not sub_55603fc7[address(arg1)].field_768:
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
        if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_1280:
            if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        return 0
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
            else:
                if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        return 0
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
    else:
        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
            revert with 0, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
        else:
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if -sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
                else:
                    if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= sub_ef09db69:
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            return 0
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0 - ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0) / 10^18) + sub_55603fc7[address(arg1)][9][address(msg.sender)].field_0)
    if 0 >= (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
        return 0
    if 0 > (100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0:
        revert with 0, 'SafeMath: subtraction overflow'
    return ((100 * arg2 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)].field_680) - sub_55603fc7[address(arg1)][8][address(msg.sender)].field_0)
}

function sub_fc6d7278(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not sub_55603fc7[address(arg1)].field_768:
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
        if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
            revert with 0, 'SafeMath: addition overflow'
        if not sub_55603fc7[address(arg1)].field_1280:
            if not sub_55603fc7[address(arg1)].field_768:
                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
            else:
                if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                else:
                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                            return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                   arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
        else:
            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if not sub_55603fc7[address(arg1)].field_768:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                            return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                    else:
                        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                else:
                    if not sub_55603fc7[address(arg1)].field_768:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                    else:
                        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
            else:
                if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if not sub_55603fc7[address(arg1)].field_768:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                            return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                   (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                    else:
                        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                       (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                else:
                    if not sub_55603fc7[address(arg1)].field_768:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                    else:
                        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
    else:
        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)].field_768:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                else:
                    if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                    else:
                        if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                       arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                                else:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                    else:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                       (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                                else:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                    else:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
        else:
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                if not sub_55603fc7[address(arg1)].field_768:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                else:
                    if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                    else:
                        if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                       arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, -sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                                else:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                    else:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
                else:
                    if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                       ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                           ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0
                                else:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + (arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18)
                    else:
                        if not sub_55603fc7[address(arg1)].field_768:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                            else:
                                if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 / (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 != arg3:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 < arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18 >= sub_ef09db69:
                                        return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 
                                               arg3 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18
    return sub_55603fc7[address(arg1)][8][address(arg2)].field_0, 0
}

function sub_a59366dd(?) payable {
    require calldata.size - 4 >= 288
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require calldata.size - 68 >= 224
    if arg8 > 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0:
        revert with 0, 32, 34, 0x7445434453413a20696e76616c6964207369676e6174757265202773272076616c75, mem[514 len 30]
    if arg6 != 27:
        if arg6 != 28:
            revert with 0, 32, 34, 0x6445434453413a20696e76616c6964207369676e6174757265202776272076616c75, mem[514 len 30]
    mem[540] = arg8
    signer = erecover(sha3(Mask(224, 32, '\x19Ethereum Signed Message:\n32') >> 32, sha3(0x1600bf08d1337d577792a0881e38d4abc6230d20f11ff45f4cf989f65996d6bb, arg3, arg4 << 216, arg5 << 216, address(arg9), address(arg1))), arg6 << 248, arg7, arg8) 
    if not erecover.result:
        revert with ext_call.return_data[0 len return_data.size]
    if not address(signer):
        revert with 0, 'ECDSA: invalid signature'
    if address(signer) != sub_006f4daaAddress:
        revert with 0, 'Data not from trusted signer'
    if arg5 % 1099511627776 > block.timestamp:
        revert with 0, 'Price timestamp invalid'
    if block.timestamp - (arg5 % 1099511627776) > 600:
        revert with 0, 'Price timestamp invalid'
    require arg4 == arg4 % 1099511627776
    if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
        return 0
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0xbbf80fc0 with:
            gas gas_remaining wei
           args address(arg1), address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0x183991f4 with:
            gas gas_remaining wei
           args address(arg1), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not sub_55603fc7[address(arg1)].field_768:
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
        if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
            revert with 0, 'SafeMath: addition overflow'
        if not sub_55603fc7[address(arg1)].field_1280:
            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                revert with 0, 'SafeMath: addition overflow'
            if not ext_call.return_data[0]:
                if not sub_55603fc7[address(arg1)].field_696:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                   0
                else:
                    if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                   0
            else:
                if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                if not sub_55603fc7[address(arg1)].field_696:
                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
        else:
            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                else:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                else:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
    else:
        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
            revert with 0, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not sub_55603fc7[address(arg1)].field_1280:
                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    revert with 0, 'SafeMath: addition overflow'
                if not ext_call.return_data[0]:
                    if not sub_55603fc7[address(arg1)].field_696:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                else:
                    if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if not sub_55603fc7[address(arg1)].field_696:
                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
        else:
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    revert with 0, 'SafeMath: addition overflow'
                if not ext_call.return_data[0]:
                    if not sub_55603fc7[address(arg1)].field_696:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                else:
                    if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if not sub_55603fc7[address(arg1)].field_696:
                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               arg3 * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   arg3 * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       arg3 * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                    if not 100 * arg3 * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not arg3 * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / arg3 * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 545 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * arg3 * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           arg3 * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
    revert
}

function sub_3966a28b(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not sub_55603fc7[address(arg1)].field_256:
        revert with 0, 'No oracle configured'
    require ext_code.size(sub_55603fc7[address(arg1)].field_256)
    staticcall sub_55603fc7[address(arg1)].field_256.getAssetPrice(address arg1) with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not sub_55603fc7[address(arg1)].field_256:
        revert with 0, 'No oracle configured'
    require ext_code.size(sub_55603fc7[address(arg1)].field_256)
    staticcall sub_55603fc7[address(arg1)].field_256.0xeed04d6a with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
        return 0
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0xbbf80fc0 with:
            gas gas_remaining wei
           args address(arg1), address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(vaultAddress)
    staticcall vaultAddress.0x183991f4 with:
            gas gas_remaining wei
           args address(arg1), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not sub_55603fc7[address(arg1)].field_768:
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if 0 / block.timestamp - sub_55603fc7[address(arg1)].field_712:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
        if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
            revert with 0, 'SafeMath: addition overflow'
        if not sub_55603fc7[address(arg1)].field_1280:
            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                revert with 0, 'SafeMath: addition overflow'
            if not ext_call.return_data[0]:
                if not sub_55603fc7[address(arg1)].field_696:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                   0
                else:
                    if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                   0
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                if not sub_55603fc7[address(arg1)].field_696:
                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
        else:
            if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                else:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                    revert with 0, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                else:
                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if not sub_55603fc7[address(arg1)].field_696:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                           0
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not sub_55603fc7[address(arg1)].field_696:
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
    else:
        if 10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / sub_55603fc7[address(arg1)].field_768 != 10 * 10^18:
            revert with 0, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
        if (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 < 500 * 10^6:
            revert with 0, 'SafeMath: addition overflow'
        if sub_55603fc7[address(arg1)].field_712 > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - sub_55603fc7[address(arg1)].field_712:
            if sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not sub_55603fc7[address(arg1)].field_1280:
                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    revert with 0, 'SafeMath: addition overflow'
                if not ext_call.return_data[0]:
                    if not sub_55603fc7[address(arg1)].field_696:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if not sub_55603fc7[address(arg1)].field_696:
                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0 / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
        else:
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) / block.timestamp - sub_55603fc7[address(arg1)].field_712 != (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9:
                revert with 0, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
            if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280 < sub_55603fc7[address(arg1)].field_1280:
                revert with 0, 'SafeMath: addition overflow'
            if not (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    revert with 0, 'SafeMath: addition overflow'
                if not ext_call.return_data[0]:
                    if not sub_55603fc7[address(arg1)].field_696:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                       0
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if not sub_55603fc7[address(arg1)].field_696:
                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                    else:
                        if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                            revert with 0, 
                                        32,
                                        33,
                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                        else:
                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    else:
                                        if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                   100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                   ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                    ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
            else:
                if not sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / -sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                else:
                    if (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 != (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9) + sub_55603fc7[address(arg1)].field_1280:
                        revert with 0, 
                                    32,
                                    33,
                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                    if sub_55603fc7[address(arg1)][9][address(arg2)].field_0 > (block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 >= sub_ef09db69:
                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ((block.timestamp * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) - (sub_55603fc7[address(arg1)].field_712 * (10 * 10^18 * sub_55603fc7[address(arg1)].field_768 / 8760 * 24 * 3600) + 500 * 10^6 / 10^9 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) + (sub_55603fc7[address(arg1)].field_1280 * sub_55603fc7[address(arg1)][8][address(arg2)].field_0) / 10^18) - sub_55603fc7[address(arg1)][9][address(arg2)].field_0 + sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('add', ('div', ('add', ('mul', 'timestamp', ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', -1, ('field', 712, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('div', ('add', 500000000, ('div', ('mul', 10000000000000000000, ('field', 768, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))), 31536000)), 1000000000), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('mul', ('field', 1280, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))), 1000000000000000000), ('mul', -1, ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 9, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))), ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152))))))))
                    else:
                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 < sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if not sub_55603fc7[address(arg1)].field_696:
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                               0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                               0
                        else:
                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                            if not sub_55603fc7[address(arg1)].field_696:
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                            else:
                                if 10^6 * sub_55603fc7[address(arg1)].field_696 / sub_55603fc7[address(arg1)].field_696 != 10^6:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                        if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        else:
                                            if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                       100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                       ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                        ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                else:
                                    if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                    if not 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
                                    else:
                                        if 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 10^6:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                            if not ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6:
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           0 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            else:
                                                if 100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 != 100:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(6 * ceil32(return_data.size)) + 197 len 31]
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if sub_55603fc7[address(arg1)][8][address(arg2)].field_0:
                                                    return 100 * 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0 <= 10^6 * sub_55603fc7[address(arg1)].field_696, 
                                                           100 * ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6 / sub_55603fc7[address(arg1)][8][address(arg2)].field_0,
                                                           ext_call.return_data[0] * ext_call.return_data[0] / 100 * 10^6
                                            ('iszero', ('field', 0, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg2')), ('array', 8, ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'sub_55603fc7', 152)))))))
    revert
}



}
