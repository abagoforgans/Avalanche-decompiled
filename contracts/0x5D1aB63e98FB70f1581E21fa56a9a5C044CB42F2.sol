contract main {




// =====================  Runtime code  =====================


#
#  - sub_10bd2093(?)
#
address stor0;
mapping of uint8 stor1;
uint8 sub_362b426d;
array of struct stor3;

function sub_362b426d(?) payable {
    if sub_362b426d >= 3:
        revert with 'NH{q', 33
    return sub_362b426d
}

function isAuthorized(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor1[address(arg1)])
}

function _fallback() payable {
    revert
}

function sub_88435d84(?) payable {
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_362b426d = 0
}

function changeOwner(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor0 = arg1
}

function sub_513f08e2(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == bool(arg2)
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor1[address(arg1)] = uint8(bool(arg2))
}

function withdrawBnb(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value arg1 wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdraw(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_4a971f7a(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if floor32(('cd', 4).length) + 97 > test266151307() or floor32(('cd', 4).length) + 97 < 96:
        revert with 'NH{q', 65
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = cd[4] + 36
    s = 128
    while idx < cd[4] + (32 * ('cd', 4).length) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    require cd[36] == bool(cd[36])
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 'NH{q', 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 1
        stor1[mem[(32 * idx) + 140 len 20]] = uint8(bool(cd[36]))
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function sub_8b066598(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size + -cd[4] - 4 >= 352
    require ('cd', 4).length == bool(('cd', 4).length)
    mem[96] = ('cd', 4).length
    require ('cd', 4)[0] == ('cd', 4)[0]
    mem[128] = ('cd', 4)[0]
    require ('cd', 4)[1] == ('cd', 4)[1]
    mem[160] = ('cd', 4)[1]
    require ('cd', 4)[2] == address(('cd', 4)[2])
    mem[192] = ('cd', 4)[2]
    require ('cd', 4)[3] <= test266151307()
    require cd[4] + ('cd', 4)[3] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[3] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449 < 448:
        revert with 'NH{q', 65
    mem[448] = cd[(cd[4] + ('cd', 4)[3] + 4)]
    require cd[4] + ('cd', 4)[3] + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[3] + 36
    s = 480
    while idx < cd[4] + ('cd', 4)[3] + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[224] = 448
    require ('cd', 4)[4] <= test266151307()
    require cd[4] + ('cd', 4)[4] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[4] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450 < 449:
        revert with 'NH{q', 65
    mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449] = cd[(cd[4] + ('cd', 4)[4] + 4)]
    require cd[4] + ('cd', 4)[4] + (32 * cd[(cd[4] + ('cd', 4)[4] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[4] + 36
    s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 481
    while idx < cd[4] + ('cd', 4)[4] + (32 * cd[(cd[4] + ('cd', 4)[4] + 4)]) + 36:
        require cd[idx] == cd[idx]
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[256] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449
    require ('cd', 4)[5] == ('cd', 4)[5]
    mem[288] = ('cd', 4)[5]
    require ('cd', 4)[6] <= test266151307()
    require cd[4] + ('cd', 4)[6] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[6] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451 < 450:
        revert with 'NH{q', 65
    mem[64] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451
    mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450] = cd[(cd[4] + ('cd', 4)[6] + 4)]
    require cd[4] + ('cd', 4)[6] + (32 * cd[(cd[4] + ('cd', 4)[6] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[6] + 36
    s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 482
    while idx < cd[4] + ('cd', 4)[6] + (32 * cd[(cd[4] + ('cd', 4)[6] + 4)]) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[320] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450
    require ('cd', 4)[7] == ('cd', 4)[7]
    mem[352] = ('cd', 4)[7]
    require ('cd', 4)[8] == ('cd', 4)[8]
    mem[384] = ('cd', 4)[8]
    require ('cd', 4)[9] == ('cd', 4)[9]
    mem[416] = ('cd', 4)[9]
    mem[0] = msg.sender
    mem[32] = 1
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if block.number < ('cd', 4)[8]:
        revert with 0, 'B'
    if block.timestamp < ('cd', 4)[9]:
        revert with 0, 'T'
    idx = 0
    while idx < cd[(cd[4] + ('cd', 4)[6] + 4)]:
        if idx >= mem[mem[320]]:
            revert with 'NH{q', 50
        _135 = mem[(32 * idx) + mem[320] + 32]
        _152 = mem[352]
        s = 0
        while s < _152:
            if idx >= mem[mem[256]]:
                revert with 'NH{q', 50
            _155 = mem[(32 * idx) + mem[256] + 32]
            _156 = mem[288]
            _157 = mem[224]
            _158 = mem[64]
            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _155
            mem[mem[64] + 36] = _156
            mem[mem[64] + 68] = 160
            _159 = mem[_157]
            mem[mem[64] + 164] = mem[_157]
            idx = 0
            t = _157 + 32
            u = mem[64] + 196
            while idx < _159:
                mem[u] = mem[t + 12 len 20]
                _152 = mem[352]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_158 + 100] = address(_135)
            mem[_158 + 132] = block.timestamp
            call address(('cd', 4)[2]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _158 + (32 * _159) + -mem[64] + 192]
            if not ext_call.success:
            _170 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _172 = mem[_170]
            require mem[_170] <= test266151307()
            require _170 + mem[_170] + 31 < _170 + return_data.size
            _173 = mem[_170 + mem[_170]]
            if mem[_170 + mem[_170]] > test266151307():
                revert with 'NH{q', 65
            if _170 + ceil32(return_data.size) + floor32(mem[_170 + mem[_170]]) + 1 > test266151307() or floor32(mem[_170 + mem[_170]]) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _170 + ceil32(return_data.size) + floor32(mem[_170 + mem[_170]]) + 1
            mem[_170 + ceil32(return_data.size)] = _173
            require _172 + (32 * _173) + 32 <= return_data.size
            idx = _170 + _172 + 32
            t = _170 + ceil32(return_data.size) + 32
            while idx < _170 + _172 + (32 * _173) + 32:
                require mem[idx] == mem[idx]
                mem[t] = mem[idx]
                _152 = mem[352]
                idx = idx + 32
                t = t + 32
                continue 
            if s == -1:
                revert with 'NH{q', 17
            _152 = mem[352]
            s = s + 1
            continue 
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function sub_f27a157b(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] == cd[4]
    require cd[36] <= test266151307()
    require calldata.size + -cd[36] - 4 >= 352
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if cd[4] != stor3.length:
        if cd[4] >= stor3.length:
            revert with 'NH{q', 50
        require ('cd', 36).length == bool(('cd', 36).length)
        stor3[cd[4]].field_0 = uint8(bool(('cd', 36).length))
        require ('cd', 36)[0] == ('cd', 36)[0]
        stor3[cd[4]].field_256 = ('cd', 36)[0]
        require ('cd', 36)[1] == ('cd', 36)[1]
        stor3[cd[4]].field_512 = ('cd', 36)[1]
        require ('cd', 36)[2] == address(('cd', 36)[2])
        stor3[cd[4]].field_768 = address(('cd', 36)[2])
        require ('cd', 36)[3] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[3] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[3] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[3] + 4)])
        if cd[(cd[36] + ('cd', 36)[3] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[cd[4]].field_1024 = cd[(cd[36] + ('cd', 36)[3] + 4)]
        if cd[(cd[36] + ('cd', 36)[3] + 4)] < stor3[cd[4]].field_1024:
            idx = cd[(cd[36] + ('cd', 36)[3] + 4)]
            while idx < stor3[cd[4]].field_1024:
                stor[idx + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 4)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[3] + 36
        while idx < cd[(cd[36] + ('cd', 36)[3] + 4)]:
            require cd[t] == address(cd[t])
            stor[s + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 4)].field_0 = address(cd[t])
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[4] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[4] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[4] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[4] + 4)])
        if cd[(cd[36] + ('cd', 36)[4] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[cd[4]].field_1280 = cd[(cd[36] + ('cd', 36)[4] + 4)]
        if cd[(cd[36] + ('cd', 36)[4] + 4)] < stor3[cd[4]].field_1280:
            idx = cd[(cd[36] + ('cd', 36)[4] + 4)]
            while idx < stor3[cd[4]].field_1280:
                stor[idx + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 5)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[4] + 36
        while idx < cd[(cd[36] + ('cd', 36)[4] + 4)]:
            require cd[t] == cd[t]
            stor[s + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 5)].field_0 = cd[t]
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[5] == ('cd', 36)[5]
        stor3[cd[4]].field_1536 = ('cd', 36)[5]
        require ('cd', 36)[6] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[6] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[6] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[6] + 4)])
        if cd[(cd[36] + ('cd', 36)[6] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[cd[4]].field_1792 = cd[(cd[36] + ('cd', 36)[6] + 4)]
        if cd[(cd[36] + ('cd', 36)[6] + 4)] < stor3[cd[4]].field_1792:
            idx = cd[(cd[36] + ('cd', 36)[6] + 4)]
            while idx < stor3[cd[4]].field_1792:
                stor[idx + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 7)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[6] + 36
        while idx < cd[(cd[36] + ('cd', 36)[6] + 4)]:
            require cd[t] == address(cd[t])
            stor[s + sha3((11 * cd[4]) + ('name', 'stor3', 3) + 7)].field_0 = address(cd[t])
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[7] == ('cd', 36)[7]
        stor3[cd[4]].field_2048 = ('cd', 36)[7]
        require ('cd', 36)[8] == ('cd', 36)[8]
        stor3[cd[4]].field_2304 = ('cd', 36)[8]
        require ('cd', 36)[9] == ('cd', 36)[9]
        stor3[cd[4]].field_2560 = ('cd', 36)[9]
    else:
        stor3.length++
        require ('cd', 36).length == bool(('cd', 36).length)
        stor3[stor3.length].field_0 = uint8(bool(('cd', 36).length))
        require ('cd', 36)[0] == ('cd', 36)[0]
        stor3[stor3.length].field_256 = ('cd', 36)[0]
        require ('cd', 36)[1] == ('cd', 36)[1]
        stor3[stor3.length].field_512 = ('cd', 36)[1]
        require ('cd', 36)[2] == address(('cd', 36)[2])
        stor3[stor3.length].field_768 = address(('cd', 36)[2])
        require ('cd', 36)[3] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[3] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[3] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[3] + 4)])
        if cd[(cd[36] + ('cd', 36)[3] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[stor3.length].field_1024 = cd[(cd[36] + ('cd', 36)[3] + 4)]
        if cd[(cd[36] + ('cd', 36)[3] + 4)] < stor3[stor3.length].field_1024:
            idx = cd[(cd[36] + ('cd', 36)[3] + 4)]
            while idx < stor3[stor3.length].field_1024:
                stor[idx + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 4)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[3] + 36
        while idx < cd[(cd[36] + ('cd', 36)[3] + 4)]:
            require cd[t] == address(cd[t])
            stor[s + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 4)].field_0 = address(cd[t])
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[4] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[4] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[4] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[4] + 4)])
        if cd[(cd[36] + ('cd', 36)[4] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[stor3.length].field_1280 = cd[(cd[36] + ('cd', 36)[4] + 4)]
        if cd[(cd[36] + ('cd', 36)[4] + 4)] < stor3[stor3.length].field_1280:
            idx = cd[(cd[36] + ('cd', 36)[4] + 4)]
            while idx < stor3[stor3.length].field_1280:
                stor[idx + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 5)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[4] + 36
        while idx < cd[(cd[36] + ('cd', 36)[4] + 4)]:
            require cd[t] == cd[t]
            stor[s + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 5)].field_0 = cd[t]
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[5] == ('cd', 36)[5]
        stor3[stor3.length].field_1536 = ('cd', 36)[5]
        require ('cd', 36)[6] < calldata.size + -cd[36] - 35
        require cd[(cd[36] + ('cd', 36)[6] + 4)] <= test266151307()
        require cd[36] + ('cd', 36)[6] + 36 <= calldata.size - (32 * cd[(cd[36] + ('cd', 36)[6] + 4)])
        if cd[(cd[36] + ('cd', 36)[6] + 4)] > 18446744073709551616:
            revert with 'NH{q', 65
        stor3[stor3.length].field_1792 = cd[(cd[36] + ('cd', 36)[6] + 4)]
        if cd[(cd[36] + ('cd', 36)[6] + 4)] < stor3[stor3.length].field_1792:
            idx = cd[(cd[36] + ('cd', 36)[6] + 4)]
            while idx < stor3[stor3.length].field_1792:
                stor[idx + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 7)].field_0 = 0
                idx = idx + 1
                continue 
        idx = 0
        s = 0
        t = cd[36] + ('cd', 36)[6] + 36
        while idx < cd[(cd[36] + ('cd', 36)[6] + 4)]:
            require cd[t] == address(cd[t])
            stor[s + sha3((11 * stor3.length) + ('name', 'stor3', 3) + 7)].field_0 = address(cd[t])
            idx = idx + 1
            s = s + 1
            t = t + 32
            continue 
        require ('cd', 36)[7] == ('cd', 36)[7]
        stor3[stor3.length].field_2048 = ('cd', 36)[7]
        require ('cd', 36)[8] == ('cd', 36)[8]
        stor3[stor3.length].field_2304 = ('cd', 36)[8]
        require ('cd', 36)[9] == ('cd', 36)[9]
        stor3[stor3.length].field_2560 = ('cd', 36)[9]
    if stor0 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_362b426d = 0
}

function sub_fc25542e(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    mem[96] = 0
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[224] = 96
    mem[256] = 96
    mem[288] = 0
    mem[320] = 96
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    if arg1 >= stor3.length:
        revert with 'NH{q', 50
    mem[448] = bool(stor3[arg1].field_0)
    mem[480] = stor3[arg1].field_256
    mem[512] = stor3[arg1].field_512
    mem[544] = stor3[arg1].field_768
    mem[800] = stor3[arg1].field_1024
    if not stor3[arg1].field_1024:
        mem[576] = 800
        mem[(32 * stor3[arg1].field_1024) + 832] = stor3[arg1].field_1280
        if not stor3[arg1].field_1280:
            if stor3[arg1].field_1792:
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 864 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896] = 32
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 928] = bool(stor3[arg1].field_0)
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 960] = stor3[arg1].field_256
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 992] = stor3[arg1].field_512
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1024] = stor3[arg1].field_768
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1056] = 352
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1280] = stor3[arg1].field_1024
            idx = 0
            s = 832
            t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312
            while idx < stor3[arg1].field_1024:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1088] = (32 * stor3[arg1].field_1024) + 384
            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312] = stor3[arg1].field_1280
            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344 len 32 * stor3[arg1].field_1280] = mem[(32 * stor3[arg1].field_1024) + 864 len 32 * stor3[arg1].field_1280]
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1120] = stor3[arg1].field_1536
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1152] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 416
            mem[(64 * stor3[arg1].field_1024) + (64 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344] = stor3[arg1].field_1792
            idx = 0
            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896
            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (32 * mem[(32 * stor3[arg1].field_1024) + 832]) + 1376
            while idx < stor3[arg1].field_1792:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1184] = stor3[arg1].field_2048
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1216] = stor3[arg1].field_2304
            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1248] = stor3[arg1].field_2560
            return memory
              from (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896
               len (96 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 480
        mem[(32 * stor3[arg1].field_1024) + 864] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
        idx = (32 * stor3[arg1].field_1024) + 864
        s = 0
        while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 832 > idx:
            mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
            idx = idx + 32
            s = s + 1
            continue 
    else:
        mem[832] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_0
        idx = 832
        s = 0
        while (32 * stor3[arg1].field_1024) + 800 > idx:
            mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[576] = 800
        mem[(32 * stor3[arg1].field_1024) + 832] = stor3[arg1].field_1280
        if stor3[arg1].field_1280:
            mem[(32 * stor3[arg1].field_1024) + 864] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
            idx = (32 * stor3[arg1].field_1024) + 864
            s = 0
            while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 832 > idx:
                mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
                idx = idx + 32
                s = s + 1
                continue 
    mem[608] = (32 * stor3[arg1].field_1024) + 832
    mem[640] = stor3[arg1].field_1536
    mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 864] = stor3[arg1].field_1792
    if not stor3[arg1].field_1792:
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896] = 32
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 928] = bool(stor3[arg1].field_0)
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 960] = stor3[arg1].field_256
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 992] = stor3[arg1].field_512
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1024] = stor3[arg1].field_768
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1056] = 352
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1280] = stor3[arg1].field_1024
        idx = 0
        s = 832
        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312
        while idx < stor3[arg1].field_1024:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1088] = (32 * stor3[arg1].field_1024) + 384
        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312] = stor3[arg1].field_1280
        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344 len 32 * stor3[arg1].field_1280] = mem[(32 * stor3[arg1].field_1024) + 864 len 32 * stor3[arg1].field_1280]
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1120] = stor3[arg1].field_1536
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1152] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 416
        mem[(64 * stor3[arg1].field_1024) + (64 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344] = stor3[arg1].field_1792
        idx = 0
        s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896
        t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (32 * mem[(32 * stor3[arg1].field_1024) + 832]) + 1376
        while idx < stor3[arg1].field_1792:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1184] = stor3[arg1].field_2048
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1216] = stor3[arg1].field_2304
        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1248] = stor3[arg1].field_2560
        return memory
          from (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896
           len (96 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 480
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896
    s = 0
    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 864 > idx:
        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
        idx = idx + 32
        s = s + 1
        continue 
    mem[672] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 864
    mem[704] = stor3[arg1].field_2048
    mem[736] = stor3[arg1].field_2304
    mem[768] = stor3[arg1].field_2560
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 896] = 32
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 928] = bool(stor3[arg1].field_0)
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 960] = stor3[arg1].field_256
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 992] = stor3[arg1].field_512
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1024] = stor3[arg1].field_768
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1056] = 352
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1280] = stor3[arg1].field_1024
    idx = 0
    s = 832
    t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312
    while idx < stor3[arg1].field_1024:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1088] = (32 * stor3[arg1].field_1024) + 384
    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1312] = stor3[arg1].field_1280
    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344 len 32 * stor3[arg1].field_1280] = mem[(32 * stor3[arg1].field_1024) + 864 len 32 * stor3[arg1].field_1280]
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1120] = stor3[arg1].field_1536
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1152] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 416
    mem[(64 * stor3[arg1].field_1024) + (64 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1344] = stor3[arg1].field_1792
    idx = 0
    s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 896
    t = mem[64] + (32 * mem[800]) + (32 * mem[(32 * stor3[arg1].field_1024) + 832]) + 480
    while idx < stor3[arg1].field_1792:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1184] = mem[704]
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1216] = mem[736]
    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 1248] = mem[768]
    return memory
      from mem[64]
       len (64 * stor3[arg1].field_1024) + (64 * stor3[arg1].field_1280) + (64 * stor3[arg1].field_1792) + -mem[64] + 1376
}

function sub_f2eac4f0(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size + -cd[4] - 4 >= 352
    require ('cd', 4).length == bool(('cd', 4).length)
    mem[96] = ('cd', 4).length
    require ('cd', 4)[0] == ('cd', 4)[0]
    mem[128] = ('cd', 4)[0]
    require ('cd', 4)[1] == ('cd', 4)[1]
    mem[160] = ('cd', 4)[1]
    require ('cd', 4)[2] == address(('cd', 4)[2])
    mem[192] = ('cd', 4)[2]
    require ('cd', 4)[3] <= test266151307()
    require cd[4] + ('cd', 4)[3] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[3] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449 < 448:
        revert with 'NH{q', 65
    mem[448] = cd[(cd[4] + ('cd', 4)[3] + 4)]
    require cd[4] + ('cd', 4)[3] + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[3] + 36
    s = 480
    while idx < cd[4] + ('cd', 4)[3] + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[224] = 448
    require ('cd', 4)[4] <= test266151307()
    require cd[4] + ('cd', 4)[4] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[4] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450 < 449:
        revert with 'NH{q', 65
    mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449] = cd[(cd[4] + ('cd', 4)[4] + 4)]
    require cd[4] + ('cd', 4)[4] + (32 * cd[(cd[4] + ('cd', 4)[4] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[4] + 36
    s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 481
    while idx < cd[4] + ('cd', 4)[4] + (32 * cd[(cd[4] + ('cd', 4)[4] + 4)]) + 36:
        require cd[idx] == cd[idx]
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[256] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + 449
    require ('cd', 4)[5] == ('cd', 4)[5]
    mem[288] = ('cd', 4)[5]
    require ('cd', 4)[6] <= test266151307()
    require cd[4] + ('cd', 4)[6] + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4)[6] + 4)] > test266151307():
        revert with 'NH{q', 65
    if floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451 > test266151307() or floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451 < 450:
        revert with 'NH{q', 65
    mem[64] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451
    mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450] = cd[(cd[4] + ('cd', 4)[6] + 4)]
    require cd[4] + ('cd', 4)[6] + (32 * cd[(cd[4] + ('cd', 4)[6] + 4)]) + 36 <= calldata.size
    idx = cd[4] + ('cd', 4)[6] + 36
    s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 482
    while idx < cd[4] + ('cd', 4)[6] + (32 * cd[(cd[4] + ('cd', 4)[6] + 4)]) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    mem[320] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + 450
    require ('cd', 4)[7] == ('cd', 4)[7]
    mem[352] = ('cd', 4)[7]
    require ('cd', 4)[8] == ('cd', 4)[8]
    mem[384] = ('cd', 4)[8]
    require ('cd', 4)[9] == ('cd', 4)[9]
    mem[416] = ('cd', 4)[9]
    mem[0] = msg.sender
    mem[32] = 1
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if block.number < ('cd', 4)[8]:
        revert with 0, 'B'
    if block.timestamp < ('cd', 4)[9]:
        revert with 0, 'T'
    if sub_362b426d > 2:
        revert with 'NH{q', 33
    if sub_362b426d == 1:
        revert with 0, 'Woot: rpmn!'
    if sub_362b426d > 2:
        revert with 'NH{q', 33
    if sub_362b426d == 2:
        mem[0] = msg.sender
        mem[32] = 1
        if bool(stor1[address(msg.sender)]) != 1:
            revert with 0, 'Wut?'
        if block.number < ('cd', 4)[8]:
            revert with 0, 'B'
        if block.timestamp < ('cd', 4)[9]:
            revert with 0, 'T'
        idx = 0
        while idx < cd[(cd[4] + ('cd', 4)[6] + 4)]:
            if idx >= mem[mem[320]]:
                revert with 'NH{q', 50
            _382 = mem[(32 * idx) + mem[320] + 32]
            _525 = mem[352]
            s = 0
            while s < _525:
                if idx >= mem[mem[256]]:
                    revert with 'NH{q', 50
                _542 = mem[(32 * idx) + mem[256] + 32]
                _543 = mem[288]
                _544 = mem[224]
                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _542
                mem[mem[64] + 36] = _543
                mem[mem[64] + 68] = 160
                _548 = mem[_544]
                mem[mem[64] + 164] = mem[_544]
                idx = 0
                t = _544 + 32
                u = mem[64] + 196
                while idx < _548:
                    mem[u] = mem[t + 12 len 20]
                    _525 = mem[352]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = address(_382)
                mem[mem[64] + 132] = block.timestamp
                call address(('cd', 4)[2]).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _542, _543, 160, address(_382), block.timestamp, mem[mem[64] + 164 len (32 * _548) + 32]
                if not ext_call.success:
                _659 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _663 = mem[_659]
                require mem[_659] <= test266151307()
                require _659 + mem[_659] + 31 < _659 + return_data.size
                _664 = mem[_659 + mem[_659]]
                if mem[_659 + mem[_659]] > test266151307():
                    revert with 'NH{q', 65
                if _659 + ceil32(return_data.size) + floor32(mem[_659 + mem[_659]]) + 1 > test266151307() or floor32(mem[_659 + mem[_659]]) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _659 + ceil32(return_data.size) + floor32(mem[_659 + mem[_659]]) + 1
                mem[_659 + ceil32(return_data.size)] = _664
                require _663 + (32 * _664) + 32 <= return_data.size
                idx = _659 + _663 + 32
                t = _659 + ceil32(return_data.size) + 32
                while idx < _659 + _663 + (32 * _664) + 32:
                    require mem[idx] == mem[idx]
                    mem[t] = mem[idx]
                    _525 = mem[352]
                    idx = idx + 32
                    t = t + 32
                    continue 
                if s == -1:
                    revert with 'NH{q', 17
                _525 = mem[352]
                s = s + 1
                continue 
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
    else:
        if 0 >= cd[(cd[4] + ('cd', 4)[3] + 4)]:
            revert with 'NH{q', 50
        _275 = mem[480]
        if cd[(cd[4] + ('cd', 4)[3] + 4)] < 1:
            revert with 'NH{q', 17
        if cd[(cd[4] + ('cd', 4)[3] + 4)] - 1 >= cd[(cd[4] + ('cd', 4)[3] + 4)]:
            revert with 'NH{q', 50
        _296 = mem[(32 * cd[(cd[4] + ('cd', 4)[3] + 4)] - 1) + 480]
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 455] = this.address
        staticcall address(_275).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + 451] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 451] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 455] = ('cd', 4)[0]
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 487] = 0
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 519] = 160
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 615] = cd[(cd[4] + ('cd', 4)[3] + 4)]
        idx = 0
        s = 480
        t = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 647
        while idx < cd[(cd[4] + ('cd', 4)[3] + 4)]:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 551] = this.address
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 583] = block.timestamp
        require ext_code.size(address(('cd', 4)[2]))
        call address(('cd', 4)[2]).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args ('cd', 4)[0], 0, 160, address(this.address), block.timestamp, cd[(cd[4] + ('cd', 4)[3] + 4)], mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 647 len 32 * cd[(cd[4] + ('cd', 4)[3] + 4)]]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 455] = this.address
        staticcall address(_296).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + ceil32(return_data.size) + 451] = ext_call.return_data[0]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if cd[(cd[4] + ('cd', 4)[3] + 4)] > test266151307():
            revert with 'NH{q', 65
        mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451] = cd[(cd[4] + ('cd', 4)[3] + 4)]
        if not cd[(cd[4] + ('cd', 4)[3] + 4)]:
            idx = 0
            while idx < cd[(cd[4] + ('cd', 4)[3] + 4)]:
                if idx >= cd[(cd[4] + ('cd', 4)[3] + 4)]:
                    revert with 'NH{q', 50
                if cd[(cd[4] + ('cd', 4)[3] + 4)] < 1:
                    revert with 'NH{q', 17
                if cd[(cd[4] + ('cd', 4)[3] + 4)] - 1 < idx:
                    revert with 'NH{q', 17
                if cd[(cd[4] + ('cd', 4)[3] + 4)] + -idx - 1 >= mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]:
                    revert with 'NH{q', 50
                mem[(32 * cd[(cd[4] + ('cd', 4)[3] + 4)] + -idx - 1) + floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 483] = mem[(32 * idx) + 492 len 20]
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                continue 
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 487] = address(('cd', 4)[2])
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 519] = ext_call.return_data[0]
            call address(_296).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(('cd', 4)[2]), ext_call.return_data[0]
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 487] = ext_call.return_data[0]
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 519] = 0
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 551] = 160
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 647] = mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]
            idx = 0
            s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 483
            t = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 679
            while idx < mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 583] = this.address
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 615] = block.timestamp
            require ext_code.size(address(('cd', 4)[2]))
            call address(('cd', 4)[2]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + (32 * mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]) + -mem[64] + 675]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            staticcall address(_275).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            _667 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _670 = mem[_667]
            require mem[_667] == mem[_667]
            if ext_call.return_data[0] < mem[_667]:
                revert with 'NH{q', 17
            mem[mem[64]] = ext_call.return_data[0]
            mem[mem[64] + 32] = ext_call.return_data[0] - _670
            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _670
            if ext_call.return_data[0] - _670 > mem[160]:
                revert with 0, 'Rpwf'
            sub_362b426d = 2
            mem[0] = msg.sender
            mem[32] = 1
            if bool(stor1[address(msg.sender)]) != 1:
                revert with 0, 'Wut?'
            if block.number < mem[384]:
                revert with 0, 'B'
            if block.timestamp < mem[416]:
                revert with 0, 'T'
            _691 = mem[192]
            _746 = mem[mem[320]]
            idx = 0
            while idx < _746:
                if idx >= mem[mem[320]]:
                    revert with 'NH{q', 50
                _753 = mem[(32 * idx) + mem[320] + 32]
                _788 = mem[352]
                s = 0
                while s < _788:
                    if idx >= mem[mem[256]]:
                        revert with 'NH{q', 50
                    _794 = mem[(32 * idx) + mem[256] + 32]
                    _795 = mem[288]
                    _796 = mem[224]
                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _794
                    mem[mem[64] + 36] = _795
                    mem[mem[64] + 68] = 160
                    _802 = mem[_796]
                    mem[mem[64] + 164] = mem[_796]
                    idx = 0
                    t = _796 + 32
                    u = mem[64] + 196
                    while idx < _802:
                        mem[u] = mem[t + 12 len 20]
                        _746 = mem[mem[320]]
                        _788 = mem[352]
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = address(_753)
                    mem[mem[64] + 132] = block.timestamp
                    call address(_691).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _794, _795, 160, address(_753), block.timestamp, mem[mem[64] + 164 len (32 * _802) + 32]
                    if not ext_call.success:
                    _824 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _827 = mem[_824]
                    require mem[_824] <= test266151307()
                    require _824 + mem[_824] + 31 < _824 + return_data.size
                    _830 = mem[_824 + mem[_824]]
                    if mem[_824 + mem[_824]] > test266151307():
                        revert with 'NH{q', 65
                    if _824 + ceil32(return_data.size) + floor32(mem[_824 + mem[_824]]) + 1 > test266151307() or floor32(mem[_824 + mem[_824]]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _824 + ceil32(return_data.size) + floor32(mem[_824 + mem[_824]]) + 1
                    mem[_824 + ceil32(return_data.size)] = _830
                    require _827 + (32 * _830) + 32 <= return_data.size
                    idx = _824 + _827 + 32
                    t = _824 + ceil32(return_data.size) + 32
                    while idx < _824 + _827 + (32 * _830) + 32:
                        require mem[idx] == mem[idx]
                        mem[t] = mem[idx]
                        _746 = mem[mem[320]]
                        _788 = mem[352]
                        idx = idx + 32
                        t = t + 32
                        continue 
                    if s == -1:
                        revert with 'NH{q', 17
                    _746 = mem[mem[320]]
                    _788 = mem[352]
                    s = s + 1
                    continue 
                if idx == -1:
                    revert with 'NH{q', 17
                _746 = mem[mem[320]]
                idx = idx + 1
                continue 
        else:
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 483 len 32 * cd[(cd[4] + ('cd', 4)[3] + 4)]] = call.data[calldata.size len 32 * cd[(cd[4] + ('cd', 4)[3] + 4)]]
            idx = 0
            while idx < cd[(cd[4] + ('cd', 4)[3] + 4)]:
                if idx >= cd[(cd[4] + ('cd', 4)[3] + 4)]:
                    revert with 'NH{q', 50
                if cd[(cd[4] + ('cd', 4)[3] + 4)] < 1:
                    revert with 'NH{q', 17
                if cd[(cd[4] + ('cd', 4)[3] + 4)] - 1 < idx:
                    revert with 'NH{q', 17
                if cd[(cd[4] + ('cd', 4)[3] + 4)] + -idx - 1 >= mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]:
                    revert with 'NH{q', 50
                mem[(32 * cd[(cd[4] + ('cd', 4)[3] + 4)] + -idx - 1) + floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 483] = mem[(32 * idx) + 492 len 20]
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                continue 
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 487] = address(('cd', 4)[2])
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 519] = ext_call.return_data[0]
            call address(_296).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(('cd', 4)[2]), ext_call.return_data[0]
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 483] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 487] = ext_call.return_data[0]
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 519] = 0
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 551] = 160
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 647] = mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]
            idx = 0
            s = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 483
            t = floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 679
            while idx < mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 583] = this.address
            mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + 615] = block.timestamp
            require ext_code.size(address(('cd', 4)[2]))
            call address(('cd', 4)[2]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (4 * ceil32(return_data.size)) + (32 * cd[(cd[4] + ('cd', 4)[3] + 4)]) + (32 * mem[floor32(cd[(cd[4] + ('cd', 4)[3] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[4] + 4)]) + floor32(cd[(cd[4] + ('cd', 4)[6] + 4)]) + (2 * ceil32(return_data.size)) + 451]) + -mem[64] + 675]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            staticcall address(_275).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            _668 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _671 = mem[_668]
            require mem[_668] == mem[_668]
            if ext_call.return_data[0] < mem[_668]:
                revert with 'NH{q', 17
            mem[mem[64]] = ext_call.return_data[0]
            mem[mem[64] + 32] = ext_call.return_data[0] - _671
            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _671
            if ext_call.return_data[0] - _671 > mem[160]:
                revert with 0, 'Rpwf'
            sub_362b426d = 2
            mem[0] = msg.sender
            mem[32] = 1
            if bool(stor1[address(msg.sender)]) != 1:
                revert with 0, 'Wut?'
            if block.number < mem[384]:
                revert with 0, 'B'
            if block.timestamp < mem[416]:
                revert with 0, 'T'
            _693 = mem[192]
            _748 = mem[mem[320]]
            idx = 0
            while idx < _748:
                if idx >= mem[mem[320]]:
                    revert with 'NH{q', 50
                _754 = mem[(32 * idx) + mem[320] + 32]
                _789 = mem[352]
                s = 0
                while s < _789:
                    if idx >= mem[mem[256]]:
                        revert with 'NH{q', 50
                    _798 = mem[(32 * idx) + mem[256] + 32]
                    _799 = mem[288]
                    _800 = mem[224]
                    _801 = mem[64]
                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _798
                    mem[mem[64] + 36] = _799
                    mem[mem[64] + 68] = 160
                    _803 = mem[_800]
                    mem[mem[64] + 164] = mem[_800]
                    idx = 0
                    t = _800 + 32
                    u = mem[64] + 196
                    while idx < _803:
                        mem[u] = mem[t + 12 len 20]
                        _748 = mem[mem[320]]
                        _789 = mem[352]
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_801 + 100] = address(_754)
                    mem[_801 + 132] = block.timestamp
                    call address(_693).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _801 + (32 * _803) + -mem[64] + 192]
                    if not ext_call.success:
                    _825 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _829 = mem[_825]
                    require mem[_825] <= test266151307()
                    require _825 + mem[_825] + 31 < _825 + return_data.size
                    _831 = mem[_825 + mem[_825]]
                    if mem[_825 + mem[_825]] > test266151307():
                        revert with 'NH{q', 65
                    if _825 + ceil32(return_data.size) + floor32(mem[_825 + mem[_825]]) + 1 > test266151307() or floor32(mem[_825 + mem[_825]]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _825 + ceil32(return_data.size) + floor32(mem[_825 + mem[_825]]) + 1
                    mem[_825 + ceil32(return_data.size)] = _831
                    require _829 + (32 * _831) + 32 <= return_data.size
                    idx = _825 + _829 + 32
                    t = _825 + ceil32(return_data.size) + 32
                    while idx < _825 + _829 + (32 * _831) + 32:
                        require mem[idx] == mem[idx]
                        mem[t] = mem[idx]
                        _748 = mem[mem[320]]
                        _789 = mem[352]
                        idx = idx + 32
                        t = t + 32
                        continue 
                    if s == -1:
                        revert with 'NH{q', 17
                    _748 = mem[mem[320]]
                    _789 = mem[352]
                    s = s + 1
                    continue 
                if idx == -1:
                    revert with 'NH{q', 17
                _748 = mem[mem[320]]
                idx = idx + 1
                continue 
}

function buy2() payable {
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if 2 >= stor3.length:
        revert with 'NH{q', 50
    if 2 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(uint8(stor3.field_5632))
    mem[128] = uint256(stor3.field_5888)
    mem[160] = uint256(stor3.field_6144)
    mem[192] = address(stor3.field_6400)
    mem[448] = uint256(stor3.field_6656)
    if not uint8(stor3.field_5632):
        if not uint256(stor3.field_6656):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_6656)) + 480] = uint256(stor3.field_6912)
            if not uint256(stor3.field_6912):
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _175 = mem[(32 * idx) + mem[320] + 32]
                        _331 = mem[352]
                        s = 0
                        while s < _331:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _361 = mem[(32 * idx) + mem[256] + 32]
                            _362 = mem[288]
                            _363 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _361
                            mem[mem[64] + 36] = _362
                            mem[mem[64] + 68] = 160
                            _483 = mem[_363]
                            mem[mem[64] + 164] = mem[_363]
                            idx = 0
                            t = _363 + 32
                            u = mem[64] + 196
                            while idx < _483:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_175)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _361, _362, 160, address(_175), block.timestamp, mem[mem[64] + 164 len (32 * _483) + 32]
                            if not ext_call.success:
                            _1028 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1036 = mem[_1028]
                            require mem[_1028] <= test266151307()
                            require _1028 + mem[_1028] + 31 < _1028 + return_data.size
                            _1045 = mem[_1028 + mem[_1028]]
                            if mem[_1028 + mem[_1028]] > test266151307():
                                revert with 'NH{q', 65
                            if _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1 > test266151307() or floor32(mem[_1028 + mem[_1028]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1
                            mem[_1028 + ceil32(return_data.size)] = _1045
                            require _1036 + (32 * _1045) + 32 <= return_data.size
                            idx = _1028 + _1036 + 32
                            t = _1028 + ceil32(return_data.size) + 32
                            while idx < _1028 + _1036 + (32 * _1045) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1608 = mem[(32 * idx) + mem[256] + 32]
                            _1609 = mem[288]
                            _1610 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1608
                            mem[mem[64] + 36] = _1609
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1610]
                            mem[mem[64] + 164] = mem[_1610]
                            idx = 0
                            t = _1610 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1608, _1609, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2617 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2617 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2617 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_6656)) + 512] = stor3[27].field_0
                idx = (32 * uint256(stor3.field_6656)) + 512
                s = 0
                while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 27].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1538 = mem[352]
                        s = 0
                        while s < _1538:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1612 = mem[(32 * idx) + mem[256] + 32]
                            _1613 = mem[288]
                            _1614 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1612
                            mem[mem[64] + 36] = _1613
                            mem[mem[64] + 68] = 160
                            _1783 = mem[_1614]
                            mem[mem[64] + 164] = mem[_1614]
                            idx = 0
                            t = _1614 + 32
                            u = mem[64] + 196
                            while idx < _1783:
                                mem[u] = mem[t + 12 len 20]
                                _1538 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1612, _1613, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1783) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2619 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2619 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2619 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2619 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1538 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1538 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3394 = mem[(32 * idx) + mem[256] + 32]
                            _3395 = mem[288]
                            _3396 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3394
                            mem[mem[64] + 36] = _3395
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3396]
                            mem[mem[64] + 164] = mem[_3396]
                            idx = 0
                            t = _3396 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3394, _3395, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4168 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4168 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4168 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor3[26].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_6656)) + 448 > idx:
                mem[idx + 32] = stor3[s + 26].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_6656)) + 480] = uint256(stor3.field_6912)
            if not uint256(stor3.field_6912):
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _975 = mem[(32 * idx) + mem[320] + 32]
                        _1539 = mem[352]
                        s = 0
                        while s < _1539:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1618 = mem[(32 * idx) + mem[256] + 32]
                            _1619 = mem[288]
                            _1620 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1618
                            mem[mem[64] + 36] = _1619
                            mem[mem[64] + 68] = 160
                            _1784 = mem[_1620]
                            mem[mem[64] + 164] = mem[_1620]
                            idx = 0
                            t = _1620 + 32
                            u = mem[64] + 196
                            while idx < _1784:
                                mem[u] = mem[t + 12 len 20]
                                _1539 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_975)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1618, _1619, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1784) + 32]
                            if not ext_call.success:
                            _2603 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2622 = mem[_2603]
                            require mem[_2603] <= test266151307()
                            require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                            _2636 = mem[_2603 + mem[_2603]]
                            if mem[_2603 + mem[_2603]] > test266151307():
                                revert with 'NH{q', 65
                            if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                            mem[_2603 + ceil32(return_data.size)] = _2636
                            require _2622 + (32 * _2636) + 32 <= return_data.size
                            idx = _2603 + _2622 + 32
                            t = _2603 + ceil32(return_data.size) + 32
                            while idx < _2603 + _2622 + (32 * _2636) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1539 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1539 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2529 = mem[(32 * idx) + mem[320] + 32]
                        _3311 = mem[352]
                        s = 0
                        while s < _3311:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3399 = mem[(32 * idx) + mem[256] + 32]
                            _3400 = mem[288]
                            _3401 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3399
                            mem[mem[64] + 36] = _3400
                            mem[mem[64] + 68] = 160
                            _3528 = mem[_3401]
                            mem[mem[64] + 164] = mem[_3401]
                            idx = 0
                            t = _3401 + 32
                            u = mem[64] + 196
                            while idx < _3528:
                                mem[u] = mem[t + 12 len 20]
                                _3311 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2529)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3399, _3400, 160, address(_2529), block.timestamp, mem[mem[64] + 164 len (32 * _3528) + 32]
                            if not ext_call.success:
                            _4155 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4155]
                            require mem[_4155] <= test266151307()
                            require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                            _4182 = mem[_4155 + mem[_4155]]
                            if mem[_4155 + mem[_4155]] > test266151307():
                                revert with 'NH{q', 65
                            if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                            mem[_4155 + ceil32(return_data.size)] = _4182
                            require _4170 + (32 * _4182) + 32 <= return_data.size
                            idx = _4155 + _4170 + 32
                            t = _4155 + ceil32(return_data.size) + 32
                            while idx < _4155 + _4170 + (32 * _4182) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3311 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3311 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_6656)) + 512] = stor3[27].field_0
                idx = (32 * uint256(stor3.field_6656)) + 512
                s = 0
                while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 27].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2530 = mem[(32 * idx) + mem[320] + 32]
                        _3312 = mem[352]
                        s = 0
                        while s < _3312:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3403 = mem[(32 * idx) + mem[256] + 32]
                            _3404 = mem[288]
                            _3405 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3403
                            mem[mem[64] + 36] = _3404
                            mem[mem[64] + 68] = 160
                            _3529 = mem[_3405]
                            mem[mem[64] + 164] = mem[_3405]
                            idx = 0
                            t = _3405 + 32
                            u = mem[64] + 196
                            while idx < _3529:
                                mem[u] = mem[t + 12 len 20]
                                _3312 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2530)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3403, _3404, 160, address(_2530), block.timestamp, mem[mem[64] + 164 len (32 * _3529) + 32]
                            if not ext_call.success:
                            _4156 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4172 = mem[_4156]
                            require mem[_4156] <= test266151307()
                            require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                            _4183 = mem[_4156 + mem[_4156]]
                            if mem[_4156 + mem[_4156]] > test266151307():
                                revert with 'NH{q', 65
                            if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                            mem[_4156 + ceil32(return_data.size)] = _4183
                            require _4172 + (32 * _4183) + 32 <= return_data.size
                            idx = _4156 + _4172 + 32
                            t = _4156 + ceil32(return_data.size) + 32
                            while idx < _4156 + _4172 + (32 * _4183) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3312 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_7424):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4093 = mem[(32 * idx) + mem[320] + 32]
                        _4617 = mem[352]
                        s = 0
                        while s < _4617:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4668 = mem[(32 * idx) + mem[256] + 32]
                            _4669 = mem[288]
                            _4670 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4668
                            mem[mem[64] + 36] = _4669
                            mem[mem[64] + 68] = 160
                            _4733 = mem[_4670]
                            mem[mem[64] + 164] = mem[_4670]
                            idx = 0
                            t = _4670 + 32
                            u = mem[64] + 196
                            while idx < _4733:
                                mem[u] = mem[t + 12 len 20]
                                _4617 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4093)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4668, _4669, 160, address(_4093), block.timestamp, mem[mem[64] + 164 len (32 * _4733) + 32]
                            if not ext_call.success:
                            _5007 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5012 = mem[_5007]
                            require mem[_5007] <= test266151307()
                            require _5007 + mem[_5007] + 31 < _5007 + return_data.size
                            _5015 = mem[_5007 + mem[_5007]]
                            if mem[_5007 + mem[_5007]] > test266151307():
                                revert with 'NH{q', 65
                            if _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1 > test266151307() or floor32(mem[_5007 + mem[_5007]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1
                            mem[_5007 + ceil32(return_data.size)] = _5015
                            require _5012 + (32 * _5015) + 32 <= return_data.size
                            idx = _5007 + _5012 + 32
                            t = _5007 + ceil32(return_data.size) + 32
                            while idx < _5007 + _5012 + (32 * _5015) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4617 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4617 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not uint256(stor3.field_6656):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_6656)) + 480] = uint256(stor3.field_6912)
            if not uint256(stor3.field_6912):
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _176 = mem[(32 * idx) + mem[320] + 32]
                            _338 = mem[352]
                            s = 0
                            while s < _338:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _375 = mem[(32 * idx) + mem[256] + 32]
                                _376 = mem[288]
                                _377 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _375
                                mem[mem[64] + 36] = _376
                                mem[mem[64] + 68] = 160
                                _488 = mem[_377]
                                mem[mem[64] + 164] = mem[_377]
                                idx = 0
                                t = _377 + 32
                                u = mem[64] + 196
                                while idx < _488:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_176)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _375, _376, 160, address(_176), block.timestamp, mem[mem[64] + 164 len (32 * _488) + 32]
                                if not ext_call.success:
                                _1029 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1041 = mem[_1029]
                                require mem[_1029] <= test266151307()
                                require _1029 + mem[_1029] + 31 < _1029 + return_data.size
                                _1046 = mem[_1029 + mem[_1029]]
                                if mem[_1029 + mem[_1029]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1 > test266151307() or floor32(mem[_1029 + mem[_1029]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1
                                mem[_1029 + ceil32(return_data.size)] = _1046
                                require _1041 + (32 * _1046) + 32 <= return_data.size
                                idx = _1029 + _1041 + 32
                                t = _1029 + ceil32(return_data.size) + 32
                                while idx < _1029 + _1041 + (32 * _1046) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _52 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _74 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_6656)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_74).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_6656) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_6656)
                        if not uint256(stor3.field_6656):
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1058 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1065 = mem[_1058]
                            require mem[_1058] == mem[_1058]
                            if ext_call.return_data[0] < mem[_1058]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1065
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1065
                            if ext_call.return_data[0] - _1065 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1213 = mem[192]
                            _1542 = mem[mem[320]]
                            idx = 0
                            while idx < _1542:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1625 = mem[(32 * idx) + mem[320] + 32]
                                _2489 = mem[352]
                                s = 0
                                while s < _2489:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2531 = mem[(32 * idx) + mem[256] + 32]
                                    _2532 = mem[288]
                                    _2533 = mem[224]
                                    _2534 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2531
                                    mem[mem[64] + 36] = _2532
                                    mem[mem[64] + 68] = 160
                                    _2587 = mem[_2533]
                                    mem[mem[64] + 164] = mem[_2533]
                                    idx = 0
                                    t = _2533 + 32
                                    u = mem[64] + 196
                                    while idx < _2587:
                                        mem[u] = mem[t + 12 len 20]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2534 + 100] = address(_1625)
                                    mem[_2534 + 132] = block.timestamp
                                    call address(_1213).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2534 + (32 * _2587) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3543 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3556 = mem[_3543]
                                    require mem[_3543] <= test266151307()
                                    require _3543 + mem[_3543] + 31 < _3543 + return_data.size
                                    _3583 = mem[_3543 + mem[_3543]]
                                    if mem[_3543 + mem[_3543]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1 > test266151307() or floor32(mem[_3543 + mem[_3543]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1
                                    mem[_3543 + ceil32(return_data.size)] = _3583
                                    require _3556 + (32 * _3583) + 32 <= return_data.size
                                    idx = _3543 + _3556 + 32
                                    t = _3543 + ceil32(return_data.size) + 32
                                    while idx < _3543 + _3556 + (32 * _3583) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1542 = mem[mem[320]]
                                    _2489 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1542 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_6656)] = call.data[calldata.size len 32 * uint256(stor3.field_6656)]
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1059 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1066 = mem[_1059]
                            require mem[_1059] == mem[_1059]
                            if ext_call.return_data[0] < mem[_1059]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1066
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1066
                            if ext_call.return_data[0] - _1066 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1215 = mem[192]
                            _1544 = mem[mem[320]]
                            idx = 0
                            while idx < _1544:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1626 = mem[(32 * idx) + mem[320] + 32]
                                _2490 = mem[352]
                                s = 0
                                while s < _2490:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2535 = mem[(32 * idx) + mem[256] + 32]
                                    _2536 = mem[288]
                                    _2537 = mem[224]
                                    _2538 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2535
                                    mem[mem[64] + 36] = _2536
                                    mem[mem[64] + 68] = 160
                                    _2588 = mem[_2537]
                                    mem[mem[64] + 164] = mem[_2537]
                                    idx = 0
                                    t = _2537 + 32
                                    u = mem[64] + 196
                                    while idx < _2588:
                                        mem[u] = mem[t + 12 len 20]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2538 + 100] = address(_1626)
                                    mem[_2538 + 132] = block.timestamp
                                    call address(_1215).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2538 + (32 * _2588) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3558 = mem[_3544]
                                    require mem[_3544] <= test266151307()
                                    require _3544 + mem[_3544] + 31 < _3544 + return_data.size
                                    _3584 = mem[_3544 + mem[_3544]]
                                    if mem[_3544 + mem[_3544]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1 > test266151307() or floor32(mem[_3544 + mem[_3544]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1
                                    mem[_3544 + ceil32(return_data.size)] = _3584
                                    require _3558 + (32 * _3584) + 32 <= return_data.size
                                    idx = _3544 + _3558 + 32
                                    t = _3544 + ceil32(return_data.size) + 32
                                    while idx < _3544 + _3558 + (32 * _3584) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1544 = mem[mem[320]]
                                    _2490 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1544 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1549 = mem[352]
                            s = 0
                            while s < _1549:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1634 = mem[(32 * idx) + mem[256] + 32]
                                _1635 = mem[288]
                                _1636 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1634
                                mem[mem[64] + 36] = _1635
                                mem[mem[64] + 68] = 160
                                _1788 = mem[_1636]
                                mem[mem[64] + 164] = mem[_1636]
                                idx = 0
                                t = _1636 + 32
                                u = mem[64] + 196
                                while idx < _1788:
                                    mem[u] = mem[t + 12 len 20]
                                    _1549 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1634, _1635, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1788) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2626 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2626 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2626 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1549 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1549 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _455 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _539 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_6656)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_539).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_6656) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_6656)
                        if not uint256(stor3.field_6656):
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2672 = mem[_2657]
                            require mem[_2657] == mem[_2657]
                            if ext_call.return_data[0] < mem[_2657]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2672
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2672
                            if ext_call.return_data[0] - _2672 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2878 = mem[192]
                            _3314 = mem[mem[320]]
                            idx = 0
                            while idx < _3314:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3409 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4096 = mem[(32 * idx) + mem[256] + 32]
                                    _4097 = mem[288]
                                    _4098 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4096
                                    mem[mem[64] + 36] = _4097
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4098]
                                    mem[mem[64] + 164] = mem[_4098]
                                    idx = 0
                                    t = _4098 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3409)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2878).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4096, _4097, 160, address(_3409), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4752 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4752 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4752 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4752 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3314 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_6656)] = call.data[calldata.size len 32 * uint256(stor3.field_6656)]
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2658 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2673 = mem[_2658]
                            require mem[_2658] == mem[_2658]
                            if ext_call.return_data[0] < mem[_2658]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2673
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2673
                            if ext_call.return_data[0] - _2673 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2880 = mem[192]
                            _3316 = mem[mem[320]]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4100 = mem[(32 * idx) + mem[256] + 32]
                                    _4101 = mem[288]
                                    _4102 = mem[224]
                                    _4103 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4100
                                    mem[mem[64] + 36] = _4101
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4102]
                                    mem[mem[64] + 164] = mem[_4102]
                                    idx = 0
                                    t = _4102 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4103 + 100] = address(_3410)
                                    mem[_4103 + 132] = block.timestamp
                                    call address(_2880).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4103 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4754 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4754 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4754 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_6656)) + 512] = stor3[27].field_0
                idx = (32 * uint256(stor3.field_6656)) + 512
                s = 0
                while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 27].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _977 = mem[(32 * idx) + mem[320] + 32]
                            _1554 = mem[352]
                            s = 0
                            while s < _1554:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1644 = mem[(32 * idx) + mem[256] + 32]
                                _1645 = mem[288]
                                _1646 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1644
                                mem[mem[64] + 36] = _1645
                                mem[mem[64] + 68] = 160
                                _1791 = mem[_1646]
                                mem[mem[64] + 164] = mem[_1646]
                                idx = 0
                                t = _1646 + 32
                                u = mem[64] + 196
                                while idx < _1791:
                                    mem[u] = mem[t + 12 len 20]
                                    _1554 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_977)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1644, _1645, 160, address(_977), block.timestamp, mem[mem[64] + 164 len (32 * _1791) + 32]
                                if not ext_call.success:
                                _2605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2628 = mem[_2605]
                                require mem[_2605] <= test266151307()
                                require _2605 + mem[_2605] + 31 < _2605 + return_data.size
                                _2638 = mem[_2605 + mem[_2605]]
                                if mem[_2605 + mem[_2605]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1 > test266151307() or floor32(mem[_2605 + mem[_2605]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1
                                mem[_2605 + ceil32(return_data.size)] = _2638
                                require _2628 + (32 * _2638) + 32 <= return_data.size
                                idx = _2605 + _2628 + 32
                                t = _2605 + ceil32(return_data.size) + 32
                                while idx < _2605 + _2628 + (32 * _2638) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1554 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1554 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _474 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _553 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_6656)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_553).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_6656) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_6656)
                        if not uint256(stor3.field_6656):
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2674 = mem[_2659]
                            require mem[_2659] == mem[_2659]
                            if ext_call.return_data[0] < mem[_2659]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2674
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2674
                            if ext_call.return_data[0] - _2674 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2882 = mem[192]
                            _3318 = mem[mem[320]]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3412 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4104 = mem[(32 * idx) + mem[256] + 32]
                                    _4105 = mem[288]
                                    _4106 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4104
                                    mem[mem[64] + 36] = _4105
                                    mem[mem[64] + 68] = 160
                                    _4140 = mem[_4106]
                                    mem[mem[64] + 164] = mem[_4106]
                                    idx = 0
                                    t = _4106 + 32
                                    u = mem[64] + 196
                                    while idx < _4140:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3412)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2882).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4104, _4105, 160, address(_3412), block.timestamp, mem[mem[64] + 164 len (32 * _4140) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4756 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4756 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4756 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_6656)] = call.data[calldata.size len 32 * uint256(stor3.field_6656)]
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2660 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2675 = mem[_2660]
                            require mem[_2660] == mem[_2660]
                            if ext_call.return_data[0] < mem[_2660]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2675
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2675
                            if ext_call.return_data[0] - _2675 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2884 = mem[192]
                            _3320 = mem[mem[320]]
                            idx = 0
                            while idx < _3320:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3413 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4108 = mem[(32 * idx) + mem[256] + 32]
                                    _4109 = mem[288]
                                    _4110 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4108
                                    mem[mem[64] + 36] = _4109
                                    mem[mem[64] + 68] = 160
                                    _4141 = mem[_4110]
                                    mem[mem[64] + 164] = mem[_4110]
                                    idx = 0
                                    t = _4110 + 32
                                    u = mem[64] + 196
                                    while idx < _4141:
                                        mem[u] = mem[t + 12 len 20]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3413)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2884).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4108, _4109, 160, address(_3413), block.timestamp, mem[mem[64] + 164 len (32 * _4141) + 32]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4758 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4758 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4758 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4758 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3320 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3320 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3325 = mem[352]
                            s = 0
                            while s < _3325:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3421 = mem[(32 * idx) + mem[256] + 32]
                                _3422 = mem[288]
                                _3423 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3421
                                mem[mem[64] + 36] = _3422
                                mem[mem[64] + 68] = 160
                                _3534 = mem[_3423]
                                mem[mem[64] + 164] = mem[_3423]
                                idx = 0
                                t = _3423 + 32
                                u = mem[64] + 196
                                while idx < _3534:
                                    mem[u] = mem[t + 12 len 20]
                                    _3325 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2539)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3421, _3422, 160, address(_2539), block.timestamp, mem[mem[64] + 164 len (32 * _3534) + 32]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4175 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4175 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4175 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3325 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1752 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1852 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args uint256(stor3.field_5888), 0, 160, address(this.address), block.timestamp, uint256(stor3.field_6656), mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740 len 32 * uint256(stor3.field_6656)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1852).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_6656) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_6656)
                        if not uint256(stor3.field_6656):
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4215 = mem[_4202]
                            require mem[_4202] == mem[_4202]
                            if ext_call.return_data[0] < mem[_4202]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4215
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4215
                            if ext_call.return_data[0] - _4215 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4365 = mem[192]
                            _4619 = mem[mem[320]]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4672 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4971 = mem[(32 * idx) + mem[256] + 32]
                                    _4972 = mem[288]
                                    _4973 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4971
                                    mem[mem[64] + 36] = _4972
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4973]
                                    mem[mem[64] + 164] = mem[_4973]
                                    idx = 0
                                    t = _4973 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4672)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4365).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4971, _4972, 160, address(_4672), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5192 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5192 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5192 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_6656)] = call.data[calldata.size len 32 * uint256(stor3.field_6656)]
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4216 = mem[_4203]
                            require mem[_4203] == mem[_4203]
                            if ext_call.return_data[0] < mem[_4203]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4216
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4216
                            if ext_call.return_data[0] - _4216 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4367 = mem[192]
                            _4621 = mem[mem[320]]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4975 = mem[(32 * idx) + mem[256] + 32]
                                    _4976 = mem[288]
                                    _4977 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4975
                                    mem[mem[64] + 36] = _4976
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4977]
                                    mem[mem[64] + 164] = mem[_4977]
                                    idx = 0
                                    t = _4977 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4367).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4975, _4976, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5194 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5194 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5194 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor3[26].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_6656)) + 448 > idx:
                mem[idx + 32] = stor3[s + 26].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_6656)) + 480] = uint256(stor3.field_6912)
            if not uint256(stor3.field_6912):
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _978 = mem[(32 * idx) + mem[320] + 32]
                            _1559 = mem[352]
                            s = 0
                            while s < _1559:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1656 = mem[(32 * idx) + mem[256] + 32]
                                _1657 = mem[288]
                                _1658 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1656
                                mem[mem[64] + 36] = _1657
                                mem[mem[64] + 68] = 160
                                _1796 = mem[_1658]
                                mem[mem[64] + 164] = mem[_1658]
                                idx = 0
                                t = _1658 + 32
                                u = mem[64] + 196
                                while idx < _1796:
                                    mem[u] = mem[t + 12 len 20]
                                    _1559 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_978)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1656, _1657, 160, address(_978), block.timestamp, mem[mem[64] + 164 len (32 * _1796) + 32]
                                if not ext_call.success:
                                _2606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2631 = mem[_2606]
                                require mem[_2606] <= test266151307()
                                require _2606 + mem[_2606] + 31 < _2606 + return_data.size
                                _2639 = mem[_2606 + mem[_2606]]
                                if mem[_2606 + mem[_2606]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1 > test266151307() or floor32(mem[_2606 + mem[_2606]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1
                                mem[_2606 + ceil32(return_data.size)] = _2639
                                require _2631 + (32 * _2639) + 32 <= return_data.size
                                idx = _2606 + _2631 + 32
                                t = _2606 + ceil32(return_data.size) + 32
                                while idx < _2606 + _2631 + (32 * _2639) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1559 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1559 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _494 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _566 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_6656)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_566).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_6656) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_6656)
                        if not uint256(stor3.field_6656):
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2677 = mem[_2662]
                            require mem[_2662] == mem[_2662]
                            if ext_call.return_data[0] < mem[_2662]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2677
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2677
                            if ext_call.return_data[0] - _2677 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2886 = mem[192]
                            _3327 = mem[mem[320]]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3425 = mem[(32 * idx) + mem[320] + 32]
                                _4060 = mem[352]
                                s = 0
                                while s < _4060:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4112 = mem[(32 * idx) + mem[256] + 32]
                                    _4113 = mem[288]
                                    _4114 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4112
                                    mem[mem[64] + 36] = _4113
                                    mem[mem[64] + 68] = 160
                                    _4145 = mem[_4114]
                                    mem[mem[64] + 164] = mem[_4114]
                                    idx = 0
                                    t = _4114 + 32
                                    u = mem[64] + 196
                                    while idx < _4145:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3425)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2886).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4112, _4113, 160, address(_3425), block.timestamp, mem[mem[64] + 164 len (32 * _4145) + 32]
                                    if not ext_call.success:
                                    _4747 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4747]
                                    require mem[_4747] <= test266151307()
                                    require _4747 + mem[_4747] + 31 < _4747 + return_data.size
                                    _4777 = mem[_4747 + mem[_4747]]
                                    if mem[_4747 + mem[_4747]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1 > test266151307() or floor32(mem[_4747 + mem[_4747]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1
                                    mem[_4747 + ceil32(return_data.size)] = _4777
                                    require _4762 + (32 * _4777) + 32 <= return_data.size
                                    idx = _4747 + _4762 + 32
                                    t = _4747 + ceil32(return_data.size) + 32
                                    while idx < _4747 + _4762 + (32 * _4777) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4060 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_6656)] = call.data[calldata.size len 32 * uint256(stor3.field_6656)]
                            idx = 0
                            while idx < uint256(stor3.field_6656):
                                if idx >= uint256(stor3.field_6656):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_6656) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_6656) + -idx - 1 >= mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_6656) + -idx - 1) + (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_6400)
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_6400), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_6400))
                            call address(stor3.field_6400).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2663 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2678 = mem[_2663]
                            require mem[_2663] == mem[_2663]
                            if ext_call.return_data[0] < mem[_2663]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2678
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2678
                            if ext_call.return_data[0] - _2678 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2888 = mem[192]
                            _3329 = mem[mem[320]]
                            idx = 0
                            while idx < _3329:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3426 = mem[(32 * idx) + mem[320] + 32]
                                _4061 = mem[352]
                                s = 0
                                while s < _4061:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4116 = mem[(32 * idx) + mem[256] + 32]
                                    _4117 = mem[288]
                                    _4118 = mem[224]
                                    _4119 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4116
                                    mem[mem[64] + 36] = _4117
                                    mem[mem[64] + 68] = 160
                                    _4146 = mem[_4118]
                                    mem[mem[64] + 164] = mem[_4118]
                                    idx = 0
                                    t = _4118 + 32
                                    u = mem[64] + 196
                                    while idx < _4146:
                                        mem[u] = mem[t + 12 len 20]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4119 + 100] = address(_3426)
                                    mem[_4119 + 132] = block.timestamp
                                    call address(_2888).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4119 + (32 * _4146) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4748 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4764 = mem[_4748]
                                    require mem[_4748] <= test266151307()
                                    require _4748 + mem[_4748] + 31 < _4748 + return_data.size
                                    _4778 = mem[_4748 + mem[_4748]]
                                    if mem[_4748 + mem[_4748]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1 > test266151307() or floor32(mem[_4748 + mem[_4748]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1
                                    mem[_4748 + ceil32(return_data.size)] = _4778
                                    require _4764 + (32 * _4778) + 32 <= return_data.size
                                    idx = _4748 + _4764 + 32
                                    t = _4748 + ceil32(return_data.size) + 32
                                    while idx < _4748 + _4764 + (32 * _4778) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3329 = mem[mem[320]]
                                    _4061 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3329 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2540 = mem[(32 * idx) + mem[320] + 32]
                            _3334 = mem[352]
                            s = 0
                            while s < _3334:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3434 = mem[(32 * idx) + mem[256] + 32]
                                _3435 = mem[288]
                                _3436 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3434
                                mem[mem[64] + 36] = _3435
                                mem[mem[64] + 68] = 160
                                _3537 = mem[_3436]
                                mem[mem[64] + 164] = mem[_3436]
                                idx = 0
                                t = _3436 + 32
                                u = mem[64] + 196
                                while idx < _3537:
                                    mem[u] = mem[t + 12 len 20]
                                    _3334 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2540)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3434, _3435, 160, address(_2540), block.timestamp, mem[mem[64] + 164 len (32 * _3537) + 32]
                                if not ext_call.success:
                                _4158 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4158]
                                require mem[_4158] <= test266151307()
                                require _4158 + mem[_4158] + 31 < _4158 + return_data.size
                                _4185 = mem[_4158 + mem[_4158]]
                                if mem[_4158 + mem[_4158]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1 > test266151307() or floor32(mem[_4158 + mem[_4158]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1
                                mem[_4158 + ceil32(return_data.size)] = _4185
                                require _4177 + (32 * _4185) + 32 <= return_data.size
                                idx = _4158 + _4177 + 32
                                t = _4158 + ceil32(return_data.size) + 32
                                while idx < _4158 + _4177 + (32 * _4185) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3334 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3334 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1758 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1856 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = mem[64] + 196
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + -mem[64] + 736]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        staticcall address(_1856).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        _2664 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2679 = mem[_2664]
                        require mem[_2664] == mem[_2664]
                        _2688 = mem[mem[224]]
                        if mem[mem[224]] > test266151307():
                            revert with 'NH{q', 65
                        _2700 = mem[64]
                        mem[mem[64]] = mem[mem[224]]
                        mem[64] = mem[64] + (32 * _2688) + 32
                        if not _2688:
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_2700]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _2700 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _3371 = mem[192]
                            mem[_2700 + (32 * _2688) + 36] = mem[204 len 20]
                            mem[_2700 + (32 * _2688) + 68] = _2679
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_3371), _2679
                            mem[_2700 + (32 * _2688) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2700 + (32 * _2688) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _3613 = mem[192]
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 36] = _2679
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 68] = 0
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 100] = 160
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 196] = mem[_2700]
                            idx = 0
                            s = _2700 + 32
                            t = _2700 + (32 * _2688) + ceil32(return_data.size) + 228
                            while idx < mem[_2700]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 132] = this.address
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_3613))
                            call address(_3613).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _2679, 0, 160, address(this.address), block.timestamp, mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 196 len (32 * mem[_2700]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 36] = this.address
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 32] = ext_call.return_data[0]
                            mem[64] = _2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[_2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 32] = _2679
                            mem[_2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 64] = 0
                            emit 0x20343ec1: _2679, 0
                            if 0 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4369 = mem[192]
                            _4623 = mem[mem[320]]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4675 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4981 = mem[(32 * idx) + mem[256] + 32]
                                    _4982 = mem[288]
                                    _4983 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4981
                                    mem[mem[64] + 36] = _4982
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4983]
                                    mem[mem[64] + 164] = mem[_4983]
                                    idx = 0
                                    t = _4983 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4675)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4369).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4981, _4982, 160, address(_4675), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5196 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5196 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5196 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[_2700 + 32 len 32 * _2688] = call.data[calldata.size len 32 * _2688]
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_2700]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _2700 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _3375 = mem[192]
                            mem[_2700 + (32 * _2688) + 36] = mem[204 len 20]
                            mem[_2700 + (32 * _2688) + 68] = _2679
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_3375), _2679
                            mem[_2700 + (32 * _2688) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2700 + (32 * _2688) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _3615 = mem[192]
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 36] = _2679
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 68] = 0
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 100] = 160
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 196] = mem[_2700]
                            idx = 0
                            s = _2700 + 32
                            t = _2700 + (32 * _2688) + ceil32(return_data.size) + 228
                            while idx < mem[_2700]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 132] = this.address
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_3615))
                            call address(_3615).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _2679, 0, 160, address(this.address), block.timestamp, mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 196 len (32 * mem[_2700]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 36] = this.address
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_2700 + (32 * _2688) + ceil32(return_data.size) + 32] = ext_call.return_data[0]
                            mem[64] = _2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[_2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 32] = _2679
                            mem[_2700 + (32 * _2688) + (2 * ceil32(return_data.size)) + 64] = 0
                            emit 0x20343ec1: _2679, 0
                            if 0 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4371 = mem[192]
                            _4625 = mem[mem[320]]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4985 = mem[(32 * idx) + mem[256] + 32]
                                    _4986 = mem[288]
                                    _4987 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4985
                                    mem[mem[64] + 36] = _4986
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4987]
                                    mem[mem[64] + 164] = mem[_4987]
                                    idx = 0
                                    t = _4987 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4371).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4985, _4986, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5198 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5198 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5198 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_6656)) + 512] = stor3[27].field_0
                idx = (32 * uint256(stor3.field_6656)) + 512
                s = 0
                while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 27].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_6656)) + 480
                mem[288] = uint256(stor3.field_7168)
                mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544
                mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512] = uint256(stor3.field_7424)
                if not uint256(stor3.field_7424):
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2541 = mem[(32 * idx) + mem[320] + 32]
                            _3339 = mem[352]
                            s = 0
                            while s < _3339:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3444 = mem[(32 * idx) + mem[256] + 32]
                                _3445 = mem[288]
                                _3446 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3444
                                mem[mem[64] + 36] = _3445
                                mem[mem[64] + 68] = 160
                                _3540 = mem[_3446]
                                mem[mem[64] + 164] = mem[_3446]
                                idx = 0
                                t = _3446 + 32
                                u = mem[64] + 196
                                while idx < _3540:
                                    mem[u] = mem[t + 12 len 20]
                                    _3339 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2541)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3444, _3445, 160, address(_2541), block.timestamp, mem[mem[64] + 164 len (32 * _3540) + 32]
                                if not ext_call.success:
                                _4159 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4179 = mem[_4159]
                                require mem[_4159] <= test266151307()
                                require _4159 + mem[_4159] + 31 < _4159 + return_data.size
                                _4186 = mem[_4159 + mem[_4159]]
                                if mem[_4159 + mem[_4159]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1 > test266151307() or floor32(mem[_4159 + mem[_4159]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1
                                mem[_4159 + ceil32(return_data.size)] = _4186
                                require _4179 + (32 * _4186) + 32 <= return_data.size
                                idx = _4159 + _4179 + 32
                                t = _4159 + ceil32(return_data.size) + 32
                                while idx < _4159 + _4179 + (32 * _4186) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3339 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3339 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1776 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _1878 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = mem[64] + 196
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + -mem[64] + 736]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        staticcall address(_1878).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        _2665 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2680 = mem[_2665]
                        require mem[_2665] == mem[_2665]
                        _2690 = mem[mem[224]]
                        if mem[mem[224]] > test266151307():
                            revert with 'NH{q', 65
                        _2702 = mem[64]
                        mem[mem[64]] = mem[mem[224]]
                        mem[64] = mem[64] + (32 * _2690) + 32
                        if not _2690:
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_2702]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _2702 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _3381 = mem[192]
                            mem[_2702 + (32 * _2690) + 36] = mem[204 len 20]
                            mem[_2702 + (32 * _2690) + 68] = _2680
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_3381), _2680
                            mem[_2702 + (32 * _2690) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2702 + (32 * _2690) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _3617 = mem[192]
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 36] = _2680
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 68] = 0
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 100] = 160
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 196] = mem[_2702]
                            idx = 0
                            s = _2702 + 32
                            t = _2702 + (32 * _2690) + ceil32(return_data.size) + 228
                            while idx < mem[_2702]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 132] = this.address
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_3617))
                            call address(_3617).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2702 + (32 * _2690) + ceil32(return_data.size) + (32 * mem[_2702]) + -mem[64] + 224]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4219 = mem[_4206]
                            require mem[_4206] == mem[_4206]
                            if ext_call.return_data[0] < mem[_4206]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = _2680
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4219
                            emit 0x20343ec1: _2680, ext_call.return_data[0] - _4219
                            if ext_call.return_data[0] - _4219 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4373 = mem[192]
                            _4627 = mem[mem[320]]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4678 = mem[(32 * idx) + mem[320] + 32]
                                _4949 = mem[352]
                                s = 0
                                while s < _4949:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4989 = mem[(32 * idx) + mem[256] + 32]
                                    _4990 = mem[288]
                                    _4991 = mem[224]
                                    _4992 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4989
                                    mem[mem[64] + 36] = _4990
                                    mem[mem[64] + 68] = 160
                                    _5002 = mem[_4991]
                                    mem[mem[64] + 164] = mem[_4991]
                                    idx = 0
                                    t = _4991 + 32
                                    u = mem[64] + 196
                                    while idx < _5002:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4992 + 100] = address(_4678)
                                    mem[_4992 + 132] = block.timestamp
                                    call address(_4373).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4992 + (32 * _5002) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5189 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5189]
                                    require mem[_5189] <= test266151307()
                                    require _5189 + mem[_5189] + 31 < _5189 + return_data.size
                                    _5209 = mem[_5189 + mem[_5189]]
                                    if mem[_5189 + mem[_5189]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1 > test266151307() or floor32(mem[_5189 + mem[_5189]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1
                                    mem[_5189 + ceil32(return_data.size)] = _5209
                                    require _5200 + (32 * _5209) + 32 <= return_data.size
                                    idx = _5189 + _5200 + 32
                                    t = _5189 + ceil32(return_data.size) + 32
                                    while idx < _5189 + _5200 + (32 * _5209) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4949 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[_2702 + 32 len 32 * _2690] = call.data[calldata.size len 32 * _2690]
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_2702]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _2702 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _3385 = mem[192]
                            mem[_2702 + (32 * _2690) + 36] = mem[204 len 20]
                            mem[_2702 + (32 * _2690) + 68] = _2680
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_3385), _2680
                            mem[_2702 + (32 * _2690) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2702 + (32 * _2690) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _3619 = mem[192]
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 36] = _2680
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 68] = 0
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 100] = 160
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 196] = mem[_2702]
                            idx = 0
                            s = _2702 + 32
                            t = _2702 + (32 * _2690) + ceil32(return_data.size) + 228
                            while idx < mem[_2702]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 132] = this.address
                            mem[_2702 + (32 * _2690) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_3619))
                            call address(_3619).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2702 + (32 * _2690) + ceil32(return_data.size) + (32 * mem[_2702]) + -mem[64] + 224]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4220 = mem[_4207]
                            require mem[_4207] == mem[_4207]
                            if ext_call.return_data[0] < mem[_4207]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = _2680
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4220
                            emit 0x20343ec1: _2680, ext_call.return_data[0] - _4220
                            if ext_call.return_data[0] - _4220 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4375 = mem[192]
                            _4629 = mem[mem[320]]
                            idx = 0
                            while idx < _4629:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4679 = mem[(32 * idx) + mem[320] + 32]
                                _4950 = mem[352]
                                s = 0
                                while s < _4950:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4993 = mem[(32 * idx) + mem[256] + 32]
                                    _4994 = mem[288]
                                    _4995 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4993
                                    mem[mem[64] + 36] = _4994
                                    mem[mem[64] + 68] = 160
                                    _5003 = mem[_4995]
                                    mem[mem[64] + 164] = mem[_4995]
                                    idx = 0
                                    t = _4995 + 32
                                    u = mem[64] + 196
                                    while idx < _5003:
                                        mem[u] = mem[t + 12 len 20]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4679)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4375).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4993, _4994, 160, address(_4679), block.timestamp, mem[mem[64] + 164 len (32 * _5003) + 32]
                                    if not ext_call.success:
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5202 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5210 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1 > test266151307() or floor32(mem[_5190 + mem[_5190]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5210
                                    require _5202 + (32 * _5210) + 32 <= return_data.size
                                    idx = _5190 + _5202 + 32
                                    t = _5190 + ceil32(return_data.size) + 32
                                    while idx < _5190 + _5202 + (32 * _5210) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4629 = mem[mem[320]]
                                    _4950 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4629 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544] = stor3[29].field_0
                    idx = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 29].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + 512
                    mem[352] = uint256(stor3.field_7680)
                    mem[384] = uint256(stor3.field_7936)
                    mem[416] = uint256(stor3.field_8192)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_7936):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_8192):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_7936):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_8192):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_7424):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4120 = mem[(32 * idx) + mem[320] + 32]
                            _4634 = mem[352]
                            s = 0
                            while s < _4634:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4687 = mem[(32 * idx) + mem[256] + 32]
                                _4688 = mem[288]
                                _4689 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4687
                                mem[mem[64] + 36] = _4688
                                mem[mem[64] + 68] = 160
                                _4742 = mem[_4689]
                                mem[mem[64] + 164] = mem[_4689]
                                idx = 0
                                t = _4689 + 32
                                u = mem[64] + 196
                                while idx < _4742:
                                    mem[u] = mem[t + 12 len 20]
                                    _4634 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4120)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_6400).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4687, _4688, 160, address(_4120), block.timestamp, mem[mem[64] + 164 len (32 * _4742) + 32]
                                if not ext_call.success:
                                _5008 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5014 = mem[_5008]
                                require mem[_5008] <= test266151307()
                                require _5008 + mem[_5008] + 31 < _5008 + return_data.size
                                _5016 = mem[_5008 + mem[_5008]]
                                if mem[_5008 + mem[_5008]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1 > test266151307() or floor32(mem[_5008 + mem[_5008]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1
                                mem[_5008 + ceil32(return_data.size)] = _5016
                                require _5014 + (32 * _5016) + 32 <= return_data.size
                                idx = _5008 + _5014 + 32
                                t = _5008 + ceil32(return_data.size) + 32
                                while idx < _5008 + _5014 + (32 * _5016) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4634 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4634 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _3517 = mem[480]
                        if uint256(stor3.field_6656) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_6656) - 1 >= uint256(stor3.field_6656):
                            revert with 'NH{q', 50
                        _3585 = mem[(32 * uint256(stor3.field_6656) - 1) + 480]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = (32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 544] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 548] = uint256(stor3.field_5888)
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 708] = uint256(stor3.field_6656)
                        idx = 0
                        s = 480
                        t = mem[64] + 196
                        while idx < uint256(stor3.field_6656):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_6400))
                        call address(stor3.field_6400).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (64 * uint256(stor3.field_6656)) + (32 * uint256(stor3.field_6912)) + (32 * uint256(stor3.field_7424)) + ceil32(return_data.size) + -mem[64] + 736]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        staticcall address(_3585).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        _4208 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4221 = mem[_4208]
                        require mem[_4208] == mem[_4208]
                        _4235 = mem[mem[224]]
                        if mem[mem[224]] > test266151307():
                            revert with 'NH{q', 65
                        _4249 = mem[64]
                        mem[mem[64]] = mem[mem[224]]
                        mem[64] = mem[64] + (32 * _4235) + 32
                        if not _4235:
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_4249]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _4249 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _4655 = mem[192]
                            mem[_4249 + (32 * _4235) + 36] = mem[204 len 20]
                            mem[_4249 + (32 * _4235) + 68] = _4221
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_4655), _4221
                            mem[_4249 + (32 * _4235) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _4249 + (32 * _4235) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _4787 = mem[192]
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 36] = _4221
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 68] = 0
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 100] = 160
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 196] = mem[_4249]
                            idx = 0
                            s = _4249 + 32
                            t = _4249 + (32 * _4235) + ceil32(return_data.size) + 228
                            while idx < mem[_4249]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 132] = this.address
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_4787))
                            call address(_4787).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4221, 0, 160, address(this.address), block.timestamp, mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 196 len (32 * mem[_4249]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 36] = this.address
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 32] = ext_call.return_data[0]
                            mem[64] = _4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[_4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 32] = _4221
                            mem[_4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 64] = 0
                            emit 0x20343ec1: _4221, 0
                            if 0 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5093 = mem[192]
                            _5148 = mem[mem[320]]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5162 = mem[(32 * idx) + mem[320] + 32]
                                _5239 = mem[352]
                                s = 0
                                while s < _5239:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5251 = mem[(32 * idx) + mem[256] + 32]
                                    _5252 = mem[288]
                                    _5253 = mem[224]
                                    _5254 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5251
                                    mem[mem[64] + 36] = _5252
                                    mem[mem[64] + 68] = 160
                                    _5259 = mem[_5253]
                                    mem[mem[64] + 164] = mem[_5253]
                                    idx = 0
                                    t = _5253 + 32
                                    u = mem[64] + 196
                                    while idx < _5259:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5254 + 100] = address(_5162)
                                    mem[_5254 + 132] = block.timestamp
                                    call address(_5093).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5254 + (32 * _5259) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5281 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5281]
                                    require mem[_5281] <= test266151307()
                                    require _5281 + mem[_5281] + 31 < _5281 + return_data.size
                                    _5287 = mem[_5281 + mem[_5281]]
                                    if mem[_5281 + mem[_5281]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1 > test266151307() or floor32(mem[_5281 + mem[_5281]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1
                                    mem[_5281 + ceil32(return_data.size)] = _5287
                                    require _5284 + (32 * _5287) + 32 <= return_data.size
                                    idx = _5281 + _5284 + 32
                                    t = _5281 + ceil32(return_data.size) + 32
                                    while idx < _5281 + _5284 + (32 * _5287) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5239 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[_4249 + 32 len 32 * _4235] = call.data[calldata.size len 32 * _4235]
                            idx = 0
                            while idx < mem[mem[224]]:
                                if idx >= mem[mem[224]]:
                                    revert with 'NH{q', 50
                                if mem[mem[224]] < 1:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] - 1 < idx:
                                    revert with 'NH{q', 17
                                if mem[mem[224]] + -idx - 1 >= mem[_4249]:
                                    revert with 'NH{q', 50
                                mem[(32 * mem[mem[224]] + -idx - 1) + _4249 + 32] = mem[(32 * idx) + mem[224] + 44 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            _4659 = mem[192]
                            mem[_4249 + (32 * _4235) + 36] = mem[204 len 20]
                            mem[_4249 + (32 * _4235) + 68] = _4221
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_4659), _4221
                            mem[_4249 + (32 * _4235) + 32] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _4249 + (32 * _4235) + ceil32(return_data.size) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _4789 = mem[192]
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 32] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 36] = _4221
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 68] = 0
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 100] = 160
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 196] = mem[_4249]
                            idx = 0
                            s = _4249 + 32
                            t = _4249 + (32 * _4235) + ceil32(return_data.size) + 228
                            while idx < mem[_4249]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 132] = this.address
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 164] = block.timestamp
                            require ext_code.size(address(_4789))
                            call address(_4789).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4221, 0, 160, address(this.address), block.timestamp, mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 196 len (32 * mem[_4249]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 36] = this.address
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_4249 + (32 * _4235) + ceil32(return_data.size) + 32] = ext_call.return_data[0]
                            mem[64] = _4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 32
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[_4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 32] = _4221
                            mem[_4249 + (32 * _4235) + (2 * ceil32(return_data.size)) + 64] = 0
                            emit 0x20343ec1: _4221, 0
                            if 0 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5095 = mem[192]
                            _5150 = mem[mem[320]]
                            idx = 0
                            while idx < _5150:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5163 = mem[(32 * idx) + mem[320] + 32]
                                _5240 = mem[352]
                                s = 0
                                while s < _5240:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5255 = mem[(32 * idx) + mem[256] + 32]
                                    _5256 = mem[288]
                                    _5257 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5255
                                    mem[mem[64] + 36] = _5256
                                    mem[mem[64] + 68] = 160
                                    _5260 = mem[_5257]
                                    mem[mem[64] + 164] = mem[_5257]
                                    idx = 0
                                    t = _5257 + 32
                                    u = mem[64] + 196
                                    while idx < _5260:
                                        mem[u] = mem[t + 12 len 20]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5163)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_5095).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5255, _5256, 160, address(_5163), block.timestamp, mem[mem[64] + 164 len (32 * _5260) + 32]
                                    if not ext_call.success:
                                    _5282 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5286 = mem[_5282]
                                    require mem[_5282] <= test266151307()
                                    require _5282 + mem[_5282] + 31 < _5282 + return_data.size
                                    _5288 = mem[_5282 + mem[_5282]]
                                    if mem[_5282 + mem[_5282]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1 > test266151307() or floor32(mem[_5282 + mem[_5282]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1
                                    mem[_5282 + ceil32(return_data.size)] = _5288
                                    require _5286 + (32 * _5288) + 32 <= return_data.size
                                    idx = _5282 + _5286 + 32
                                    t = _5282 + ceil32(return_data.size) + 32
                                    while idx < _5282 + _5286 + (32 * _5288) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5150 = mem[mem[320]]
                                    _5240 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5150 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}

function buy1() payable {
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if 1 >= stor3.length:
        revert with 'NH{q', 50
    if 1 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(uint8(stor3.field_2816))
    mem[128] = uint256(stor3.field_3072)
    mem[160] = uint256(stor3.field_3328)
    mem[192] = address(stor3.field_3584)
    mem[448] = uint256(stor3.field_3840)
    if not uint8(stor3.field_2816):
        if not uint256(stor3.field_3840):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_3840)) + 480] = uint256(stor3.field_4096)
            if not uint256(stor3.field_4096):
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _175 = mem[(32 * idx) + mem[320] + 32]
                        _331 = mem[352]
                        s = 0
                        while s < _331:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _361 = mem[(32 * idx) + mem[256] + 32]
                            _362 = mem[288]
                            _363 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _361
                            mem[mem[64] + 36] = _362
                            mem[mem[64] + 68] = 160
                            _483 = mem[_363]
                            mem[mem[64] + 164] = mem[_363]
                            idx = 0
                            t = _363 + 32
                            u = mem[64] + 196
                            while idx < _483:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_175)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _361, _362, 160, address(_175), block.timestamp, mem[mem[64] + 164 len (32 * _483) + 32]
                            if not ext_call.success:
                            _1028 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1036 = mem[_1028]
                            require mem[_1028] <= test266151307()
                            require _1028 + mem[_1028] + 31 < _1028 + return_data.size
                            _1045 = mem[_1028 + mem[_1028]]
                            if mem[_1028 + mem[_1028]] > test266151307():
                                revert with 'NH{q', 65
                            if _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1 > test266151307() or floor32(mem[_1028 + mem[_1028]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1
                            mem[_1028 + ceil32(return_data.size)] = _1045
                            require _1036 + (32 * _1045) + 32 <= return_data.size
                            idx = _1028 + _1036 + 32
                            t = _1028 + ceil32(return_data.size) + 32
                            while idx < _1028 + _1036 + (32 * _1045) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1608 = mem[(32 * idx) + mem[256] + 32]
                            _1609 = mem[288]
                            _1610 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1608
                            mem[mem[64] + 36] = _1609
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1610]
                            mem[mem[64] + 164] = mem[_1610]
                            idx = 0
                            t = _1610 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1608, _1609, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2617 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2617 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2617 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_3840)) + 512] = stor3[16].field_0
                idx = (32 * uint256(stor3.field_3840)) + 512
                s = 0
                while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 16].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1538 = mem[352]
                        s = 0
                        while s < _1538:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1612 = mem[(32 * idx) + mem[256] + 32]
                            _1613 = mem[288]
                            _1614 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1612
                            mem[mem[64] + 36] = _1613
                            mem[mem[64] + 68] = 160
                            _1783 = mem[_1614]
                            mem[mem[64] + 164] = mem[_1614]
                            idx = 0
                            t = _1614 + 32
                            u = mem[64] + 196
                            while idx < _1783:
                                mem[u] = mem[t + 12 len 20]
                                _1538 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1612, _1613, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1783) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2619 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2619 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2619 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2619 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1538 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1538 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3394 = mem[(32 * idx) + mem[256] + 32]
                            _3395 = mem[288]
                            _3396 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3394
                            mem[mem[64] + 36] = _3395
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3396]
                            mem[mem[64] + 164] = mem[_3396]
                            idx = 0
                            t = _3396 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3394, _3395, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4168 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4168 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4168 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor3[15].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_3840)) + 448 > idx:
                mem[idx + 32] = stor3[s + 15].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_3840)) + 480] = uint256(stor3.field_4096)
            if not uint256(stor3.field_4096):
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _975 = mem[(32 * idx) + mem[320] + 32]
                        _1539 = mem[352]
                        s = 0
                        while s < _1539:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1618 = mem[(32 * idx) + mem[256] + 32]
                            _1619 = mem[288]
                            _1620 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1618
                            mem[mem[64] + 36] = _1619
                            mem[mem[64] + 68] = 160
                            _1784 = mem[_1620]
                            mem[mem[64] + 164] = mem[_1620]
                            idx = 0
                            t = _1620 + 32
                            u = mem[64] + 196
                            while idx < _1784:
                                mem[u] = mem[t + 12 len 20]
                                _1539 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_975)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1618, _1619, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1784) + 32]
                            if not ext_call.success:
                            _2603 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2622 = mem[_2603]
                            require mem[_2603] <= test266151307()
                            require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                            _2636 = mem[_2603 + mem[_2603]]
                            if mem[_2603 + mem[_2603]] > test266151307():
                                revert with 'NH{q', 65
                            if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                            mem[_2603 + ceil32(return_data.size)] = _2636
                            require _2622 + (32 * _2636) + 32 <= return_data.size
                            idx = _2603 + _2622 + 32
                            t = _2603 + ceil32(return_data.size) + 32
                            while idx < _2603 + _2622 + (32 * _2636) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1539 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1539 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2529 = mem[(32 * idx) + mem[320] + 32]
                        _3311 = mem[352]
                        s = 0
                        while s < _3311:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3399 = mem[(32 * idx) + mem[256] + 32]
                            _3400 = mem[288]
                            _3401 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3399
                            mem[mem[64] + 36] = _3400
                            mem[mem[64] + 68] = 160
                            _3528 = mem[_3401]
                            mem[mem[64] + 164] = mem[_3401]
                            idx = 0
                            t = _3401 + 32
                            u = mem[64] + 196
                            while idx < _3528:
                                mem[u] = mem[t + 12 len 20]
                                _3311 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2529)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3399, _3400, 160, address(_2529), block.timestamp, mem[mem[64] + 164 len (32 * _3528) + 32]
                            if not ext_call.success:
                            _4155 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4155]
                            require mem[_4155] <= test266151307()
                            require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                            _4182 = mem[_4155 + mem[_4155]]
                            if mem[_4155 + mem[_4155]] > test266151307():
                                revert with 'NH{q', 65
                            if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                            mem[_4155 + ceil32(return_data.size)] = _4182
                            require _4170 + (32 * _4182) + 32 <= return_data.size
                            idx = _4155 + _4170 + 32
                            t = _4155 + ceil32(return_data.size) + 32
                            while idx < _4155 + _4170 + (32 * _4182) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3311 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3311 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_3840)) + 512] = stor3[16].field_0
                idx = (32 * uint256(stor3.field_3840)) + 512
                s = 0
                while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 16].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2530 = mem[(32 * idx) + mem[320] + 32]
                        _3312 = mem[352]
                        s = 0
                        while s < _3312:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3403 = mem[(32 * idx) + mem[256] + 32]
                            _3404 = mem[288]
                            _3405 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3403
                            mem[mem[64] + 36] = _3404
                            mem[mem[64] + 68] = 160
                            _3529 = mem[_3405]
                            mem[mem[64] + 164] = mem[_3405]
                            idx = 0
                            t = _3405 + 32
                            u = mem[64] + 196
                            while idx < _3529:
                                mem[u] = mem[t + 12 len 20]
                                _3312 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2530)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3403, _3404, 160, address(_2530), block.timestamp, mem[mem[64] + 164 len (32 * _3529) + 32]
                            if not ext_call.success:
                            _4156 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4172 = mem[_4156]
                            require mem[_4156] <= test266151307()
                            require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                            _4183 = mem[_4156 + mem[_4156]]
                            if mem[_4156 + mem[_4156]] > test266151307():
                                revert with 'NH{q', 65
                            if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                            mem[_4156 + ceil32(return_data.size)] = _4183
                            require _4172 + (32 * _4183) + 32 <= return_data.size
                            idx = _4156 + _4172 + 32
                            t = _4156 + ceil32(return_data.size) + 32
                            while idx < _4156 + _4172 + (32 * _4183) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3312 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_4608):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4093 = mem[(32 * idx) + mem[320] + 32]
                        _4617 = mem[352]
                        s = 0
                        while s < _4617:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4668 = mem[(32 * idx) + mem[256] + 32]
                            _4669 = mem[288]
                            _4670 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4668
                            mem[mem[64] + 36] = _4669
                            mem[mem[64] + 68] = 160
                            _4733 = mem[_4670]
                            mem[mem[64] + 164] = mem[_4670]
                            idx = 0
                            t = _4670 + 32
                            u = mem[64] + 196
                            while idx < _4733:
                                mem[u] = mem[t + 12 len 20]
                                _4617 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4093)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4668, _4669, 160, address(_4093), block.timestamp, mem[mem[64] + 164 len (32 * _4733) + 32]
                            if not ext_call.success:
                            _5007 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5012 = mem[_5007]
                            require mem[_5007] <= test266151307()
                            require _5007 + mem[_5007] + 31 < _5007 + return_data.size
                            _5015 = mem[_5007 + mem[_5007]]
                            if mem[_5007 + mem[_5007]] > test266151307():
                                revert with 'NH{q', 65
                            if _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1 > test266151307() or floor32(mem[_5007 + mem[_5007]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1
                            mem[_5007 + ceil32(return_data.size)] = _5015
                            require _5012 + (32 * _5015) + 32 <= return_data.size
                            idx = _5007 + _5012 + 32
                            t = _5007 + ceil32(return_data.size) + 32
                            while idx < _5007 + _5012 + (32 * _5015) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4617 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4617 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not uint256(stor3.field_3840):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_3840)) + 480] = uint256(stor3.field_4096)
            if not uint256(stor3.field_4096):
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _176 = mem[(32 * idx) + mem[320] + 32]
                            _338 = mem[352]
                            s = 0
                            while s < _338:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _375 = mem[(32 * idx) + mem[256] + 32]
                                _376 = mem[288]
                                _377 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _375
                                mem[mem[64] + 36] = _376
                                mem[mem[64] + 68] = 160
                                _488 = mem[_377]
                                mem[mem[64] + 164] = mem[_377]
                                idx = 0
                                t = _377 + 32
                                u = mem[64] + 196
                                while idx < _488:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_176)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _375, _376, 160, address(_176), block.timestamp, mem[mem[64] + 164 len (32 * _488) + 32]
                                if not ext_call.success:
                                _1029 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1041 = mem[_1029]
                                require mem[_1029] <= test266151307()
                                require _1029 + mem[_1029] + 31 < _1029 + return_data.size
                                _1046 = mem[_1029 + mem[_1029]]
                                if mem[_1029 + mem[_1029]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1 > test266151307() or floor32(mem[_1029 + mem[_1029]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1
                                mem[_1029 + ceil32(return_data.size)] = _1046
                                require _1041 + (32 * _1046) + 32 <= return_data.size
                                idx = _1029 + _1041 + 32
                                t = _1029 + ceil32(return_data.size) + 32
                                while idx < _1029 + _1041 + (32 * _1046) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _52 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _74 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_74).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1058 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1065 = mem[_1058]
                            require mem[_1058] == mem[_1058]
                            if ext_call.return_data[0] < mem[_1058]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1065
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1065
                            if ext_call.return_data[0] - _1065 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1213 = mem[192]
                            _1542 = mem[mem[320]]
                            idx = 0
                            while idx < _1542:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1625 = mem[(32 * idx) + mem[320] + 32]
                                _2489 = mem[352]
                                s = 0
                                while s < _2489:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2531 = mem[(32 * idx) + mem[256] + 32]
                                    _2532 = mem[288]
                                    _2533 = mem[224]
                                    _2534 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2531
                                    mem[mem[64] + 36] = _2532
                                    mem[mem[64] + 68] = 160
                                    _2587 = mem[_2533]
                                    mem[mem[64] + 164] = mem[_2533]
                                    idx = 0
                                    t = _2533 + 32
                                    u = mem[64] + 196
                                    while idx < _2587:
                                        mem[u] = mem[t + 12 len 20]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2534 + 100] = address(_1625)
                                    mem[_2534 + 132] = block.timestamp
                                    call address(_1213).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2534 + (32 * _2587) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3543 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3556 = mem[_3543]
                                    require mem[_3543] <= test266151307()
                                    require _3543 + mem[_3543] + 31 < _3543 + return_data.size
                                    _3583 = mem[_3543 + mem[_3543]]
                                    if mem[_3543 + mem[_3543]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1 > test266151307() or floor32(mem[_3543 + mem[_3543]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1
                                    mem[_3543 + ceil32(return_data.size)] = _3583
                                    require _3556 + (32 * _3583) + 32 <= return_data.size
                                    idx = _3543 + _3556 + 32
                                    t = _3543 + ceil32(return_data.size) + 32
                                    while idx < _3543 + _3556 + (32 * _3583) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1542 = mem[mem[320]]
                                    _2489 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1542 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1059 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1066 = mem[_1059]
                            require mem[_1059] == mem[_1059]
                            if ext_call.return_data[0] < mem[_1059]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1066
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1066
                            if ext_call.return_data[0] - _1066 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1215 = mem[192]
                            _1544 = mem[mem[320]]
                            idx = 0
                            while idx < _1544:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1626 = mem[(32 * idx) + mem[320] + 32]
                                _2490 = mem[352]
                                s = 0
                                while s < _2490:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2535 = mem[(32 * idx) + mem[256] + 32]
                                    _2536 = mem[288]
                                    _2537 = mem[224]
                                    _2538 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2535
                                    mem[mem[64] + 36] = _2536
                                    mem[mem[64] + 68] = 160
                                    _2588 = mem[_2537]
                                    mem[mem[64] + 164] = mem[_2537]
                                    idx = 0
                                    t = _2537 + 32
                                    u = mem[64] + 196
                                    while idx < _2588:
                                        mem[u] = mem[t + 12 len 20]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2538 + 100] = address(_1626)
                                    mem[_2538 + 132] = block.timestamp
                                    call address(_1215).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2538 + (32 * _2588) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3558 = mem[_3544]
                                    require mem[_3544] <= test266151307()
                                    require _3544 + mem[_3544] + 31 < _3544 + return_data.size
                                    _3584 = mem[_3544 + mem[_3544]]
                                    if mem[_3544 + mem[_3544]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1 > test266151307() or floor32(mem[_3544 + mem[_3544]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1
                                    mem[_3544 + ceil32(return_data.size)] = _3584
                                    require _3558 + (32 * _3584) + 32 <= return_data.size
                                    idx = _3544 + _3558 + 32
                                    t = _3544 + ceil32(return_data.size) + 32
                                    while idx < _3544 + _3558 + (32 * _3584) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1544 = mem[mem[320]]
                                    _2490 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1544 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1549 = mem[352]
                            s = 0
                            while s < _1549:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1634 = mem[(32 * idx) + mem[256] + 32]
                                _1635 = mem[288]
                                _1636 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1634
                                mem[mem[64] + 36] = _1635
                                mem[mem[64] + 68] = 160
                                _1788 = mem[_1636]
                                mem[mem[64] + 164] = mem[_1636]
                                idx = 0
                                t = _1636 + 32
                                u = mem[64] + 196
                                while idx < _1788:
                                    mem[u] = mem[t + 12 len 20]
                                    _1549 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1634, _1635, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1788) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2626 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2626 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2626 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1549 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1549 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _455 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _539 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_539).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2672 = mem[_2657]
                            require mem[_2657] == mem[_2657]
                            if ext_call.return_data[0] < mem[_2657]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2672
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2672
                            if ext_call.return_data[0] - _2672 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2878 = mem[192]
                            _3314 = mem[mem[320]]
                            idx = 0
                            while idx < _3314:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3409 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4096 = mem[(32 * idx) + mem[256] + 32]
                                    _4097 = mem[288]
                                    _4098 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4096
                                    mem[mem[64] + 36] = _4097
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4098]
                                    mem[mem[64] + 164] = mem[_4098]
                                    idx = 0
                                    t = _4098 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3409)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2878).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4096, _4097, 160, address(_3409), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4752 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4752 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4752 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4752 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3314 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2658 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2673 = mem[_2658]
                            require mem[_2658] == mem[_2658]
                            if ext_call.return_data[0] < mem[_2658]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2673
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2673
                            if ext_call.return_data[0] - _2673 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2880 = mem[192]
                            _3316 = mem[mem[320]]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4100 = mem[(32 * idx) + mem[256] + 32]
                                    _4101 = mem[288]
                                    _4102 = mem[224]
                                    _4103 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4100
                                    mem[mem[64] + 36] = _4101
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4102]
                                    mem[mem[64] + 164] = mem[_4102]
                                    idx = 0
                                    t = _4102 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4103 + 100] = address(_3410)
                                    mem[_4103 + 132] = block.timestamp
                                    call address(_2880).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4103 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4754 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4754 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4754 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_3840)) + 512] = stor3[16].field_0
                idx = (32 * uint256(stor3.field_3840)) + 512
                s = 0
                while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 16].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if not uint256(stor3.field_4608):
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _977 = mem[(32 * idx) + mem[320] + 32]
                            _1554 = mem[352]
                            s = 0
                            while s < _1554:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1644 = mem[(32 * idx) + mem[256] + 32]
                                _1645 = mem[288]
                                _1646 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1644
                                mem[mem[64] + 36] = _1645
                                mem[mem[64] + 68] = 160
                                _1791 = mem[_1646]
                                mem[mem[64] + 164] = mem[_1646]
                                idx = 0
                                t = _1646 + 32
                                u = mem[64] + 196
                                while idx < _1791:
                                    mem[u] = mem[t + 12 len 20]
                                    _1554 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_977)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1644, _1645, 160, address(_977), block.timestamp, mem[mem[64] + 164 len (32 * _1791) + 32]
                                if not ext_call.success:
                                _2605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2628 = mem[_2605]
                                require mem[_2605] <= test266151307()
                                require _2605 + mem[_2605] + 31 < _2605 + return_data.size
                                _2638 = mem[_2605 + mem[_2605]]
                                if mem[_2605 + mem[_2605]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1 > test266151307() or floor32(mem[_2605 + mem[_2605]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1
                                mem[_2605 + ceil32(return_data.size)] = _2638
                                require _2628 + (32 * _2638) + 32 <= return_data.size
                                idx = _2605 + _2628 + 32
                                t = _2605 + ceil32(return_data.size) + 32
                                while idx < _2605 + _2628 + (32 * _2638) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1554 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1554 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _474 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _553 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_553).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2674 = mem[_2659]
                            require mem[_2659] == mem[_2659]
                            if ext_call.return_data[0] < mem[_2659]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2674
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2674
                            if ext_call.return_data[0] - _2674 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2882 = mem[192]
                            _3318 = mem[mem[320]]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3412 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4104 = mem[(32 * idx) + mem[256] + 32]
                                    _4105 = mem[288]
                                    _4106 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4104
                                    mem[mem[64] + 36] = _4105
                                    mem[mem[64] + 68] = 160
                                    _4140 = mem[_4106]
                                    mem[mem[64] + 164] = mem[_4106]
                                    idx = 0
                                    t = _4106 + 32
                                    u = mem[64] + 196
                                    while idx < _4140:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3412)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2882).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4104, _4105, 160, address(_3412), block.timestamp, mem[mem[64] + 164 len (32 * _4140) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4756 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4756 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4756 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2660 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2675 = mem[_2660]
                            require mem[_2660] == mem[_2660]
                            if ext_call.return_data[0] < mem[_2660]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2675
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2675
                            if ext_call.return_data[0] - _2675 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2884 = mem[192]
                            _3320 = mem[mem[320]]
                            idx = 0
                            while idx < _3320:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3413 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4108 = mem[(32 * idx) + mem[256] + 32]
                                    _4109 = mem[288]
                                    _4110 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4108
                                    mem[mem[64] + 36] = _4109
                                    mem[mem[64] + 68] = 160
                                    _4141 = mem[_4110]
                                    mem[mem[64] + 164] = mem[_4110]
                                    idx = 0
                                    t = _4110 + 32
                                    u = mem[64] + 196
                                    while idx < _4141:
                                        mem[u] = mem[t + 12 len 20]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3413)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2884).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4108, _4109, 160, address(_3413), block.timestamp, mem[mem[64] + 164 len (32 * _4141) + 32]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4758 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4758 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4758 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4758 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3320 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3320 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3325 = mem[352]
                            s = 0
                            while s < _3325:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3421 = mem[(32 * idx) + mem[256] + 32]
                                _3422 = mem[288]
                                _3423 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3421
                                mem[mem[64] + 36] = _3422
                                mem[mem[64] + 68] = 160
                                _3534 = mem[_3423]
                                mem[mem[64] + 164] = mem[_3423]
                                idx = 0
                                t = _3423 + 32
                                u = mem[64] + 196
                                while idx < _3534:
                                    mem[u] = mem[t + 12 len 20]
                                    _3325 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2539)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3421, _3422, 160, address(_2539), block.timestamp, mem[mem[64] + 164 len (32 * _3534) + 32]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4175 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4175 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4175 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3325 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1752 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1852 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args uint256(stor3.field_3072), 0, 160, address(this.address), block.timestamp, uint256(stor3.field_3840), mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740 len 32 * uint256(stor3.field_3840)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1852).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4215 = mem[_4202]
                            require mem[_4202] == mem[_4202]
                            if ext_call.return_data[0] < mem[_4202]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4215
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4215
                            if ext_call.return_data[0] - _4215 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4365 = mem[192]
                            _4619 = mem[mem[320]]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4672 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4971 = mem[(32 * idx) + mem[256] + 32]
                                    _4972 = mem[288]
                                    _4973 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4971
                                    mem[mem[64] + 36] = _4972
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4973]
                                    mem[mem[64] + 164] = mem[_4973]
                                    idx = 0
                                    t = _4973 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4672)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4365).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4971, _4972, 160, address(_4672), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5192 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5192 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5192 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4216 = mem[_4203]
                            require mem[_4203] == mem[_4203]
                            if ext_call.return_data[0] < mem[_4203]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4216
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4216
                            if ext_call.return_data[0] - _4216 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4367 = mem[192]
                            _4621 = mem[mem[320]]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4975 = mem[(32 * idx) + mem[256] + 32]
                                    _4976 = mem[288]
                                    _4977 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4975
                                    mem[mem[64] + 36] = _4976
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4977]
                                    mem[mem[64] + 164] = mem[_4977]
                                    idx = 0
                                    t = _4977 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4367).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4975, _4976, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5194 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5194 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5194 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor3[15].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_3840)) + 448 > idx:
                mem[idx + 32] = stor3[s + 15].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_3840)) + 480] = uint256(stor3.field_4096)
            if not uint256(stor3.field_4096):
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if uint256(stor3.field_4608):
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2540 = mem[(32 * idx) + mem[320] + 32]
                            _3334 = mem[352]
                            s = 0
                            while s < _3334:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3434 = mem[(32 * idx) + mem[256] + 32]
                                _3435 = mem[288]
                                _3436 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3434
                                mem[mem[64] + 36] = _3435
                                mem[mem[64] + 68] = 160
                                _3537 = mem[_3436]
                                mem[mem[64] + 164] = mem[_3436]
                                idx = 0
                                t = _3436 + 32
                                u = mem[64] + 196
                                while idx < _3537:
                                    mem[u] = mem[t + 12 len 20]
                                    _3334 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2540)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3434, _3435, 160, address(_2540), block.timestamp, mem[mem[64] + 164 len (32 * _3537) + 32]
                                if not ext_call.success:
                                _4158 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4158]
                                require mem[_4158] <= test266151307()
                                require _4158 + mem[_4158] + 31 < _4158 + return_data.size
                                _4185 = mem[_4158 + mem[_4158]]
                                if mem[_4158 + mem[_4158]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1 > test266151307() or floor32(mem[_4158 + mem[_4158]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1
                                mem[_4158 + ceil32(return_data.size)] = _4185
                                require _4177 + (32 * _4185) + 32 <= return_data.size
                                idx = _4158 + _4177 + 32
                                t = _4158 + ceil32(return_data.size) + 32
                                while idx < _4158 + _4177 + (32 * _4185) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3334 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3334 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1758 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1856 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1856).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_3328):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4623 = mem[mem[320]]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4675 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4981 = mem[(32 * idx) + mem[256] + 32]
                                    _4982 = mem[288]
                                    _4983 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4981
                                    mem[mem[64] + 36] = _4982
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4983]
                                    mem[mem[64] + 164] = mem[_4983]
                                    idx = 0
                                    t = _4983 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4675)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4981, _4982, 160, address(_4675), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5196 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5196 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5196 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_3328):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4625 = mem[mem[320]]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4985 = mem[(32 * idx) + mem[256] + 32]
                                    _4986 = mem[288]
                                    _4987 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4985
                                    mem[mem[64] + 36] = _4986
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4987]
                                    mem[mem[64] + 164] = mem[_4987]
                                    idx = 0
                                    t = _4987 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4985, _4986, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5198 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5198 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5198 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _978 = mem[(32 * idx) + mem[320] + 32]
                            _1559 = mem[352]
                            s = 0
                            while s < _1559:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1656 = mem[(32 * idx) + mem[256] + 32]
                                _1657 = mem[288]
                                _1658 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1656
                                mem[mem[64] + 36] = _1657
                                mem[mem[64] + 68] = 160
                                _1796 = mem[_1658]
                                mem[mem[64] + 164] = mem[_1658]
                                idx = 0
                                t = _1658 + 32
                                u = mem[64] + 196
                                while idx < _1796:
                                    mem[u] = mem[t + 12 len 20]
                                    _1559 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_978)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1656, _1657, 160, address(_978), block.timestamp, mem[mem[64] + 164 len (32 * _1796) + 32]
                                if not ext_call.success:
                                _2606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2631 = mem[_2606]
                                require mem[_2606] <= test266151307()
                                require _2606 + mem[_2606] + 31 < _2606 + return_data.size
                                _2639 = mem[_2606 + mem[_2606]]
                                if mem[_2606 + mem[_2606]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1 > test266151307() or floor32(mem[_2606 + mem[_2606]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1
                                mem[_2606 + ceil32(return_data.size)] = _2639
                                require _2631 + (32 * _2639) + 32 <= return_data.size
                                idx = _2606 + _2631 + 32
                                t = _2606 + ceil32(return_data.size) + 32
                                while idx < _2606 + _2631 + (32 * _2639) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1559 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1559 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _494 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _566 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_566).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2677 = mem[_2662]
                            require mem[_2662] == mem[_2662]
                            if ext_call.return_data[0] < mem[_2662]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2677
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2677
                            if ext_call.return_data[0] - _2677 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2886 = mem[192]
                            _3327 = mem[mem[320]]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3425 = mem[(32 * idx) + mem[320] + 32]
                                _4060 = mem[352]
                                s = 0
                                while s < _4060:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4112 = mem[(32 * idx) + mem[256] + 32]
                                    _4113 = mem[288]
                                    _4114 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4112
                                    mem[mem[64] + 36] = _4113
                                    mem[mem[64] + 68] = 160
                                    _4145 = mem[_4114]
                                    mem[mem[64] + 164] = mem[_4114]
                                    idx = 0
                                    t = _4114 + 32
                                    u = mem[64] + 196
                                    while idx < _4145:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3425)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2886).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4112, _4113, 160, address(_3425), block.timestamp, mem[mem[64] + 164 len (32 * _4145) + 32]
                                    if not ext_call.success:
                                    _4747 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4747]
                                    require mem[_4747] <= test266151307()
                                    require _4747 + mem[_4747] + 31 < _4747 + return_data.size
                                    _4777 = mem[_4747 + mem[_4747]]
                                    if mem[_4747 + mem[_4747]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1 > test266151307() or floor32(mem[_4747 + mem[_4747]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1
                                    mem[_4747 + ceil32(return_data.size)] = _4777
                                    require _4762 + (32 * _4777) + 32 <= return_data.size
                                    idx = _4747 + _4762 + 32
                                    t = _4747 + ceil32(return_data.size) + 32
                                    while idx < _4747 + _4762 + (32 * _4777) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4060 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2663 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2678 = mem[_2663]
                            require mem[_2663] == mem[_2663]
                            if ext_call.return_data[0] < mem[_2663]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2678
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2678
                            if ext_call.return_data[0] - _2678 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2888 = mem[192]
                            _3329 = mem[mem[320]]
                            idx = 0
                            while idx < _3329:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3426 = mem[(32 * idx) + mem[320] + 32]
                                _4061 = mem[352]
                                s = 0
                                while s < _4061:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4116 = mem[(32 * idx) + mem[256] + 32]
                                    _4117 = mem[288]
                                    _4118 = mem[224]
                                    _4119 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4116
                                    mem[mem[64] + 36] = _4117
                                    mem[mem[64] + 68] = 160
                                    _4146 = mem[_4118]
                                    mem[mem[64] + 164] = mem[_4118]
                                    idx = 0
                                    t = _4118 + 32
                                    u = mem[64] + 196
                                    while idx < _4146:
                                        mem[u] = mem[t + 12 len 20]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4119 + 100] = address(_3426)
                                    mem[_4119 + 132] = block.timestamp
                                    call address(_2888).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4119 + (32 * _4146) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4748 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4764 = mem[_4748]
                                    require mem[_4748] <= test266151307()
                                    require _4748 + mem[_4748] + 31 < _4748 + return_data.size
                                    _4778 = mem[_4748 + mem[_4748]]
                                    if mem[_4748 + mem[_4748]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1 > test266151307() or floor32(mem[_4748 + mem[_4748]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1
                                    mem[_4748 + ceil32(return_data.size)] = _4778
                                    require _4764 + (32 * _4778) + 32 <= return_data.size
                                    idx = _4748 + _4764 + 32
                                    t = _4748 + ceil32(return_data.size) + 32
                                    while idx < _4748 + _4764 + (32 * _4778) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3329 = mem[mem[320]]
                                    _4061 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3329 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_3840)) + 512] = stor3[16].field_0
                idx = (32 * uint256(stor3.field_3840)) + 512
                s = 0
                while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 16].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_3840)) + 480
                mem[288] = uint256(stor3.field_4352)
                mem[64] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544
                mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512] = uint256(stor3.field_4608)
                if uint256(stor3.field_4608):
                    mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544] = stor3[18].field_0
                    idx = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 18].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4120 = mem[(32 * idx) + mem[320] + 32]
                            _4634 = mem[352]
                            s = 0
                            while s < _4634:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4687 = mem[(32 * idx) + mem[256] + 32]
                                _4688 = mem[288]
                                _4689 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4687
                                mem[mem[64] + 36] = _4688
                                mem[mem[64] + 68] = 160
                                _4742 = mem[_4689]
                                mem[mem[64] + 164] = mem[_4689]
                                idx = 0
                                t = _4689 + 32
                                u = mem[64] + 196
                                while idx < _4742:
                                    mem[u] = mem[t + 12 len 20]
                                    _4634 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4120)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4687, _4688, 160, address(_4120), block.timestamp, mem[mem[64] + 164 len (32 * _4742) + 32]
                                if not ext_call.success:
                                _5008 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5014 = mem[_5008]
                                require mem[_5008] <= test266151307()
                                require _5008 + mem[_5008] + 31 < _5008 + return_data.size
                                _5016 = mem[_5008 + mem[_5008]]
                                if mem[_5008 + mem[_5008]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1 > test266151307() or floor32(mem[_5008 + mem[_5008]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1
                                mem[_5008 + ceil32(return_data.size)] = _5016
                                require _5014 + (32 * _5016) + 32 <= return_data.size
                                idx = _5008 + _5014 + 32
                                t = _5008 + ceil32(return_data.size) + 32
                                while idx < _5008 + _5014 + (32 * _5016) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4634 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4634 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _3517 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _3585 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_3585).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_3328):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5148 = mem[mem[320]]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5162 = mem[(32 * idx) + mem[320] + 32]
                                _5239 = mem[352]
                                s = 0
                                while s < _5239:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5251 = mem[(32 * idx) + mem[256] + 32]
                                    _5252 = mem[288]
                                    _5253 = mem[224]
                                    _5254 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5251
                                    mem[mem[64] + 36] = _5252
                                    mem[mem[64] + 68] = 160
                                    _5259 = mem[_5253]
                                    mem[mem[64] + 164] = mem[_5253]
                                    idx = 0
                                    t = _5253 + 32
                                    u = mem[64] + 196
                                    while idx < _5259:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5254 + 100] = address(_5162)
                                    mem[_5254 + 132] = block.timestamp
                                    call address(stor3.field_3584).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5254 + (32 * _5259) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5281 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5281]
                                    require mem[_5281] <= test266151307()
                                    require _5281 + mem[_5281] + 31 < _5281 + return_data.size
                                    _5287 = mem[_5281 + mem[_5281]]
                                    if mem[_5281 + mem[_5281]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1 > test266151307() or floor32(mem[_5281 + mem[_5281]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1
                                    mem[_5281 + ceil32(return_data.size)] = _5287
                                    require _5284 + (32 * _5287) + 32 <= return_data.size
                                    idx = _5281 + _5284 + 32
                                    t = _5281 + ceil32(return_data.size) + 32
                                    while idx < _5281 + _5284 + (32 * _5287) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5239 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_3328):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5150 = mem[mem[320]]
                            idx = 0
                            while idx < _5150:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5163 = mem[(32 * idx) + mem[320] + 32]
                                _5240 = mem[352]
                                s = 0
                                while s < _5240:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5255 = mem[(32 * idx) + mem[256] + 32]
                                    _5256 = mem[288]
                                    _5257 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5255
                                    mem[mem[64] + 36] = _5256
                                    mem[mem[64] + 68] = 160
                                    _5260 = mem[_5257]
                                    mem[mem[64] + 164] = mem[_5257]
                                    idx = 0
                                    t = _5257 + 32
                                    u = mem[64] + 196
                                    while idx < _5260:
                                        mem[u] = mem[t + 12 len 20]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5163)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5255, _5256, 160, address(_5163), block.timestamp, mem[mem[64] + 164 len (32 * _5260) + 32]
                                    if not ext_call.success:
                                    _5282 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5286 = mem[_5282]
                                    require mem[_5282] <= test266151307()
                                    require _5282 + mem[_5282] + 31 < _5282 + return_data.size
                                    _5288 = mem[_5282 + mem[_5282]]
                                    if mem[_5282 + mem[_5282]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1 > test266151307() or floor32(mem[_5282 + mem[_5282]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1
                                    mem[_5282 + ceil32(return_data.size)] = _5288
                                    require _5286 + (32 * _5288) + 32 <= return_data.size
                                    idx = _5282 + _5286 + 32
                                    t = _5282 + ceil32(return_data.size) + 32
                                    while idx < _5282 + _5286 + (32 * _5288) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5150 = mem[mem[320]]
                                    _5240 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5150 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[320] = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + 512
                    mem[352] = uint256(stor3.field_4864)
                    mem[384] = uint256(stor3.field_5120)
                    mem[416] = uint256(stor3.field_5376)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_5120):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_5376):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_5120):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_5376):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_4608):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2541 = mem[(32 * idx) + mem[320] + 32]
                            _3339 = mem[352]
                            s = 0
                            while s < _3339:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3444 = mem[(32 * idx) + mem[256] + 32]
                                _3445 = mem[288]
                                _3446 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3444
                                mem[mem[64] + 36] = _3445
                                mem[mem[64] + 68] = 160
                                _3540 = mem[_3446]
                                mem[mem[64] + 164] = mem[_3446]
                                idx = 0
                                t = _3446 + 32
                                u = mem[64] + 196
                                while idx < _3540:
                                    mem[u] = mem[t + 12 len 20]
                                    _3339 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2541)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_3584).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3444, _3445, 160, address(_2541), block.timestamp, mem[mem[64] + 164 len (32 * _3540) + 32]
                                if not ext_call.success:
                                _4159 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4179 = mem[_4159]
                                require mem[_4159] <= test266151307()
                                require _4159 + mem[_4159] + 31 < _4159 + return_data.size
                                _4186 = mem[_4159 + mem[_4159]]
                                if mem[_4159 + mem[_4159]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1 > test266151307() or floor32(mem[_4159 + mem[_4159]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1
                                mem[_4159 + ceil32(return_data.size)] = _4186
                                require _4179 + (32 * _4186) + 32 <= return_data.size
                                idx = _4159 + _4179 + 32
                                t = _4159 + ceil32(return_data.size) + 32
                                while idx < _4159 + _4179 + (32 * _4186) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3339 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3339 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1776 = mem[480]
                        if uint256(stor3.field_3840) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_3840) - 1 >= uint256(stor3.field_3840):
                            revert with 'NH{q', 50
                        _1878 = mem[(32 * uint256(stor3.field_3840) - 1) + 480]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = uint256(stor3.field_3072)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 708] = uint256(stor3.field_3840)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_3840):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_3584))
                        call address(stor3.field_3584).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_3840)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1878).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_3840) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_3840)
                        if not uint256(stor3.field_3840):
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4219 = mem[_4206]
                            require mem[_4206] == mem[_4206]
                            if ext_call.return_data[0] < mem[_4206]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4219
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4219
                            if ext_call.return_data[0] - _4219 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4373 = mem[192]
                            _4627 = mem[mem[320]]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4678 = mem[(32 * idx) + mem[320] + 32]
                                _4949 = mem[352]
                                s = 0
                                while s < _4949:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4989 = mem[(32 * idx) + mem[256] + 32]
                                    _4990 = mem[288]
                                    _4991 = mem[224]
                                    _4992 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4989
                                    mem[mem[64] + 36] = _4990
                                    mem[mem[64] + 68] = 160
                                    _5002 = mem[_4991]
                                    mem[mem[64] + 164] = mem[_4991]
                                    idx = 0
                                    t = _4991 + 32
                                    u = mem[64] + 196
                                    while idx < _5002:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4992 + 100] = address(_4678)
                                    mem[_4992 + 132] = block.timestamp
                                    call address(_4373).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4992 + (32 * _5002) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5189 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5189]
                                    require mem[_5189] <= test266151307()
                                    require _5189 + mem[_5189] + 31 < _5189 + return_data.size
                                    _5209 = mem[_5189 + mem[_5189]]
                                    if mem[_5189 + mem[_5189]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1 > test266151307() or floor32(mem[_5189 + mem[_5189]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1
                                    mem[_5189 + ceil32(return_data.size)] = _5209
                                    require _5200 + (32 * _5209) + 32 <= return_data.size
                                    idx = _5189 + _5200 + 32
                                    t = _5189 + ceil32(return_data.size) + 32
                                    while idx < _5189 + _5200 + (32 * _5209) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4949 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_3840)] = call.data[calldata.size len 32 * uint256(stor3.field_3840)]
                            idx = 0
                            while idx < uint256(stor3.field_3840):
                                if idx >= uint256(stor3.field_3840):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_3840) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_3840) + -idx - 1 >= mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_3840) + -idx - 1) + (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_3584)
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_3584), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_3584))
                            call address(stor3.field_3584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_3840)) + (32 * uint256(stor3.field_4096)) + (32 * uint256(stor3.field_4608)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4220 = mem[_4207]
                            require mem[_4207] == mem[_4207]
                            if ext_call.return_data[0] < mem[_4207]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4220
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4220
                            if ext_call.return_data[0] - _4220 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4375 = mem[192]
                            _4629 = mem[mem[320]]
                            idx = 0
                            while idx < _4629:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4679 = mem[(32 * idx) + mem[320] + 32]
                                _4950 = mem[352]
                                s = 0
                                while s < _4950:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4993 = mem[(32 * idx) + mem[256] + 32]
                                    _4994 = mem[288]
                                    _4995 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4993
                                    mem[mem[64] + 36] = _4994
                                    mem[mem[64] + 68] = 160
                                    _5003 = mem[_4995]
                                    mem[mem[64] + 164] = mem[_4995]
                                    idx = 0
                                    t = _4995 + 32
                                    u = mem[64] + 196
                                    while idx < _5003:
                                        mem[u] = mem[t + 12 len 20]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4679)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4375).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4993, _4994, 160, address(_4679), block.timestamp, mem[mem[64] + 164 len (32 * _5003) + 32]
                                    if not ext_call.success:
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5202 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5210 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1 > test266151307() or floor32(mem[_5190 + mem[_5190]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5210
                                    require _5202 + (32 * _5210) + 32 <= return_data.size
                                    idx = _5190 + _5202 + 32
                                    t = _5190 + ceil32(return_data.size) + 32
                                    while idx < _5190 + _5202 + (32 * _5210) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4629 = mem[mem[320]]
                                    _4950 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4629 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}

function buy5() payable {
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if 5 >= stor3.length:
        revert with 'NH{q', 50
    if 5 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(uint8(stor3.field_14080))
    mem[128] = uint256(stor3.field_14336)
    mem[160] = uint256(stor3.field_14592)
    mem[192] = address(stor3.field_14848)
    mem[448] = uint256(stor3.field_15104)
    if not uint8(stor3.field_14080):
        if not uint256(stor3.field_15104):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_15104)) + 480] = uint256(stor3.field_15360)
            if not uint256(stor3.field_15360):
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _175 = mem[(32 * idx) + mem[320] + 32]
                        _331 = mem[352]
                        s = 0
                        while s < _331:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _361 = mem[(32 * idx) + mem[256] + 32]
                            _362 = mem[288]
                            _363 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _361
                            mem[mem[64] + 36] = _362
                            mem[mem[64] + 68] = 160
                            _483 = mem[_363]
                            mem[mem[64] + 164] = mem[_363]
                            idx = 0
                            t = _363 + 32
                            u = mem[64] + 196
                            while idx < _483:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_175)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _361, _362, 160, address(_175), block.timestamp, mem[mem[64] + 164 len (32 * _483) + 32]
                            if not ext_call.success:
                            _1028 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1036 = mem[_1028]
                            require mem[_1028] <= test266151307()
                            require _1028 + mem[_1028] + 31 < _1028 + return_data.size
                            _1045 = mem[_1028 + mem[_1028]]
                            if mem[_1028 + mem[_1028]] > test266151307():
                                revert with 'NH{q', 65
                            if _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1 > test266151307() or floor32(mem[_1028 + mem[_1028]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1
                            mem[_1028 + ceil32(return_data.size)] = _1045
                            require _1036 + (32 * _1045) + 32 <= return_data.size
                            idx = _1028 + _1036 + 32
                            t = _1028 + ceil32(return_data.size) + 32
                            while idx < _1028 + _1036 + (32 * _1045) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1608 = mem[(32 * idx) + mem[256] + 32]
                            _1609 = mem[288]
                            _1610 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1608
                            mem[mem[64] + 36] = _1609
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1610]
                            mem[mem[64] + 164] = mem[_1610]
                            idx = 0
                            t = _1610 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1608, _1609, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2617 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2617 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2617 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_15104)) + 512] = stor3[60].field_0
                idx = (32 * uint256(stor3.field_15104)) + 512
                s = 0
                while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 60].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1538 = mem[352]
                        s = 0
                        while s < _1538:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1612 = mem[(32 * idx) + mem[256] + 32]
                            _1613 = mem[288]
                            _1614 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1612
                            mem[mem[64] + 36] = _1613
                            mem[mem[64] + 68] = 160
                            _1783 = mem[_1614]
                            mem[mem[64] + 164] = mem[_1614]
                            idx = 0
                            t = _1614 + 32
                            u = mem[64] + 196
                            while idx < _1783:
                                mem[u] = mem[t + 12 len 20]
                                _1538 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1612, _1613, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1783) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2619 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2619 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2619 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2619 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1538 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1538 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3394 = mem[(32 * idx) + mem[256] + 32]
                            _3395 = mem[288]
                            _3396 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3394
                            mem[mem[64] + 36] = _3395
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3396]
                            mem[mem[64] + 164] = mem[_3396]
                            idx = 0
                            t = _3396 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3394, _3395, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4168 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4168 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4168 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor3[59].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_15104)) + 448 > idx:
                mem[idx + 32] = stor3[s + 59].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_15104)) + 480] = uint256(stor3.field_15360)
            if not uint256(stor3.field_15360):
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _975 = mem[(32 * idx) + mem[320] + 32]
                        _1539 = mem[352]
                        s = 0
                        while s < _1539:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1618 = mem[(32 * idx) + mem[256] + 32]
                            _1619 = mem[288]
                            _1620 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1618
                            mem[mem[64] + 36] = _1619
                            mem[mem[64] + 68] = 160
                            _1784 = mem[_1620]
                            mem[mem[64] + 164] = mem[_1620]
                            idx = 0
                            t = _1620 + 32
                            u = mem[64] + 196
                            while idx < _1784:
                                mem[u] = mem[t + 12 len 20]
                                _1539 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_975)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1618, _1619, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1784) + 32]
                            if not ext_call.success:
                            _2603 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2622 = mem[_2603]
                            require mem[_2603] <= test266151307()
                            require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                            _2636 = mem[_2603 + mem[_2603]]
                            if mem[_2603 + mem[_2603]] > test266151307():
                                revert with 'NH{q', 65
                            if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                            mem[_2603 + ceil32(return_data.size)] = _2636
                            require _2622 + (32 * _2636) + 32 <= return_data.size
                            idx = _2603 + _2622 + 32
                            t = _2603 + ceil32(return_data.size) + 32
                            while idx < _2603 + _2622 + (32 * _2636) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1539 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1539 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2529 = mem[(32 * idx) + mem[320] + 32]
                        _3311 = mem[352]
                        s = 0
                        while s < _3311:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3399 = mem[(32 * idx) + mem[256] + 32]
                            _3400 = mem[288]
                            _3401 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3399
                            mem[mem[64] + 36] = _3400
                            mem[mem[64] + 68] = 160
                            _3528 = mem[_3401]
                            mem[mem[64] + 164] = mem[_3401]
                            idx = 0
                            t = _3401 + 32
                            u = mem[64] + 196
                            while idx < _3528:
                                mem[u] = mem[t + 12 len 20]
                                _3311 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2529)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3399, _3400, 160, address(_2529), block.timestamp, mem[mem[64] + 164 len (32 * _3528) + 32]
                            if not ext_call.success:
                            _4155 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4155]
                            require mem[_4155] <= test266151307()
                            require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                            _4182 = mem[_4155 + mem[_4155]]
                            if mem[_4155 + mem[_4155]] > test266151307():
                                revert with 'NH{q', 65
                            if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                            mem[_4155 + ceil32(return_data.size)] = _4182
                            require _4170 + (32 * _4182) + 32 <= return_data.size
                            idx = _4155 + _4170 + 32
                            t = _4155 + ceil32(return_data.size) + 32
                            while idx < _4155 + _4170 + (32 * _4182) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3311 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3311 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_15104)) + 512] = stor3[60].field_0
                idx = (32 * uint256(stor3.field_15104)) + 512
                s = 0
                while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 60].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2530 = mem[(32 * idx) + mem[320] + 32]
                        _3312 = mem[352]
                        s = 0
                        while s < _3312:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3403 = mem[(32 * idx) + mem[256] + 32]
                            _3404 = mem[288]
                            _3405 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3403
                            mem[mem[64] + 36] = _3404
                            mem[mem[64] + 68] = 160
                            _3529 = mem[_3405]
                            mem[mem[64] + 164] = mem[_3405]
                            idx = 0
                            t = _3405 + 32
                            u = mem[64] + 196
                            while idx < _3529:
                                mem[u] = mem[t + 12 len 20]
                                _3312 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2530)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3403, _3404, 160, address(_2530), block.timestamp, mem[mem[64] + 164 len (32 * _3529) + 32]
                            if not ext_call.success:
                            _4156 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4172 = mem[_4156]
                            require mem[_4156] <= test266151307()
                            require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                            _4183 = mem[_4156 + mem[_4156]]
                            if mem[_4156 + mem[_4156]] > test266151307():
                                revert with 'NH{q', 65
                            if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                            mem[_4156 + ceil32(return_data.size)] = _4183
                            require _4172 + (32 * _4183) + 32 <= return_data.size
                            idx = _4156 + _4172 + 32
                            t = _4156 + ceil32(return_data.size) + 32
                            while idx < _4156 + _4172 + (32 * _4183) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3312 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_15872):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4093 = mem[(32 * idx) + mem[320] + 32]
                        _4617 = mem[352]
                        s = 0
                        while s < _4617:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4668 = mem[(32 * idx) + mem[256] + 32]
                            _4669 = mem[288]
                            _4670 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4668
                            mem[mem[64] + 36] = _4669
                            mem[mem[64] + 68] = 160
                            _4733 = mem[_4670]
                            mem[mem[64] + 164] = mem[_4670]
                            idx = 0
                            t = _4670 + 32
                            u = mem[64] + 196
                            while idx < _4733:
                                mem[u] = mem[t + 12 len 20]
                                _4617 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4093)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4668, _4669, 160, address(_4093), block.timestamp, mem[mem[64] + 164 len (32 * _4733) + 32]
                            if not ext_call.success:
                            _5007 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5012 = mem[_5007]
                            require mem[_5007] <= test266151307()
                            require _5007 + mem[_5007] + 31 < _5007 + return_data.size
                            _5015 = mem[_5007 + mem[_5007]]
                            if mem[_5007 + mem[_5007]] > test266151307():
                                revert with 'NH{q', 65
                            if _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1 > test266151307() or floor32(mem[_5007 + mem[_5007]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1
                            mem[_5007 + ceil32(return_data.size)] = _5015
                            require _5012 + (32 * _5015) + 32 <= return_data.size
                            idx = _5007 + _5012 + 32
                            t = _5007 + ceil32(return_data.size) + 32
                            while idx < _5007 + _5012 + (32 * _5015) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4617 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4617 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not uint256(stor3.field_15104):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_15104)) + 480] = uint256(stor3.field_15360)
            if not uint256(stor3.field_15360):
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _176 = mem[(32 * idx) + mem[320] + 32]
                            _338 = mem[352]
                            s = 0
                            while s < _338:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _375 = mem[(32 * idx) + mem[256] + 32]
                                _376 = mem[288]
                                _377 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _375
                                mem[mem[64] + 36] = _376
                                mem[mem[64] + 68] = 160
                                _488 = mem[_377]
                                mem[mem[64] + 164] = mem[_377]
                                idx = 0
                                t = _377 + 32
                                u = mem[64] + 196
                                while idx < _488:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_176)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _375, _376, 160, address(_176), block.timestamp, mem[mem[64] + 164 len (32 * _488) + 32]
                                if not ext_call.success:
                                _1029 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1041 = mem[_1029]
                                require mem[_1029] <= test266151307()
                                require _1029 + mem[_1029] + 31 < _1029 + return_data.size
                                _1046 = mem[_1029 + mem[_1029]]
                                if mem[_1029 + mem[_1029]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1 > test266151307() or floor32(mem[_1029 + mem[_1029]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1
                                mem[_1029 + ceil32(return_data.size)] = _1046
                                require _1041 + (32 * _1046) + 32 <= return_data.size
                                idx = _1029 + _1041 + 32
                                t = _1029 + ceil32(return_data.size) + 32
                                while idx < _1029 + _1041 + (32 * _1046) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _52 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _74 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_74).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1058 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1065 = mem[_1058]
                            require mem[_1058] == mem[_1058]
                            if ext_call.return_data[0] < mem[_1058]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1065
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1065
                            if ext_call.return_data[0] - _1065 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1213 = mem[192]
                            _1542 = mem[mem[320]]
                            idx = 0
                            while idx < _1542:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1625 = mem[(32 * idx) + mem[320] + 32]
                                _2489 = mem[352]
                                s = 0
                                while s < _2489:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2531 = mem[(32 * idx) + mem[256] + 32]
                                    _2532 = mem[288]
                                    _2533 = mem[224]
                                    _2534 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2531
                                    mem[mem[64] + 36] = _2532
                                    mem[mem[64] + 68] = 160
                                    _2587 = mem[_2533]
                                    mem[mem[64] + 164] = mem[_2533]
                                    idx = 0
                                    t = _2533 + 32
                                    u = mem[64] + 196
                                    while idx < _2587:
                                        mem[u] = mem[t + 12 len 20]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2534 + 100] = address(_1625)
                                    mem[_2534 + 132] = block.timestamp
                                    call address(_1213).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2534 + (32 * _2587) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3543 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3556 = mem[_3543]
                                    require mem[_3543] <= test266151307()
                                    require _3543 + mem[_3543] + 31 < _3543 + return_data.size
                                    _3583 = mem[_3543 + mem[_3543]]
                                    if mem[_3543 + mem[_3543]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1 > test266151307() or floor32(mem[_3543 + mem[_3543]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1
                                    mem[_3543 + ceil32(return_data.size)] = _3583
                                    require _3556 + (32 * _3583) + 32 <= return_data.size
                                    idx = _3543 + _3556 + 32
                                    t = _3543 + ceil32(return_data.size) + 32
                                    while idx < _3543 + _3556 + (32 * _3583) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1542 = mem[mem[320]]
                                    _2489 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1542 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_52).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _1059 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1066 = mem[_1059]
                            require mem[_1059] == mem[_1059]
                            if ext_call.return_data[0] < mem[_1059]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _1066
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _1066
                            if ext_call.return_data[0] - _1066 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _1215 = mem[192]
                            _1544 = mem[mem[320]]
                            idx = 0
                            while idx < _1544:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1626 = mem[(32 * idx) + mem[320] + 32]
                                _2490 = mem[352]
                                s = 0
                                while s < _2490:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2535 = mem[(32 * idx) + mem[256] + 32]
                                    _2536 = mem[288]
                                    _2537 = mem[224]
                                    _2538 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2535
                                    mem[mem[64] + 36] = _2536
                                    mem[mem[64] + 68] = 160
                                    _2588 = mem[_2537]
                                    mem[mem[64] + 164] = mem[_2537]
                                    idx = 0
                                    t = _2537 + 32
                                    u = mem[64] + 196
                                    while idx < _2588:
                                        mem[u] = mem[t + 12 len 20]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2538 + 100] = address(_1626)
                                    mem[_2538 + 132] = block.timestamp
                                    call address(_1215).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2538 + (32 * _2588) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3558 = mem[_3544]
                                    require mem[_3544] <= test266151307()
                                    require _3544 + mem[_3544] + 31 < _3544 + return_data.size
                                    _3584 = mem[_3544 + mem[_3544]]
                                    if mem[_3544 + mem[_3544]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1 > test266151307() or floor32(mem[_3544 + mem[_3544]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1
                                    mem[_3544 + ceil32(return_data.size)] = _3584
                                    require _3558 + (32 * _3584) + 32 <= return_data.size
                                    idx = _3544 + _3558 + 32
                                    t = _3544 + ceil32(return_data.size) + 32
                                    while idx < _3544 + _3558 + (32 * _3584) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1544 = mem[mem[320]]
                                    _2490 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1544 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1549 = mem[352]
                            s = 0
                            while s < _1549:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1634 = mem[(32 * idx) + mem[256] + 32]
                                _1635 = mem[288]
                                _1636 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1634
                                mem[mem[64] + 36] = _1635
                                mem[mem[64] + 68] = 160
                                _1788 = mem[_1636]
                                mem[mem[64] + 164] = mem[_1636]
                                idx = 0
                                t = _1636 + 32
                                u = mem[64] + 196
                                while idx < _1788:
                                    mem[u] = mem[t + 12 len 20]
                                    _1549 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1634, _1635, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1788) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2626 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2626 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2626 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1549 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1549 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _455 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _539 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_539).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2672 = mem[_2657]
                            require mem[_2657] == mem[_2657]
                            if ext_call.return_data[0] < mem[_2657]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2672
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2672
                            if ext_call.return_data[0] - _2672 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2878 = mem[192]
                            _3314 = mem[mem[320]]
                            idx = 0
                            while idx < _3314:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3409 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4096 = mem[(32 * idx) + mem[256] + 32]
                                    _4097 = mem[288]
                                    _4098 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4096
                                    mem[mem[64] + 36] = _4097
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4098]
                                    mem[mem[64] + 164] = mem[_4098]
                                    idx = 0
                                    t = _4098 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3409)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2878).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4096, _4097, 160, address(_3409), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4752 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4752 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4752 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4752 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3314 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_455).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2658 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2673 = mem[_2658]
                            require mem[_2658] == mem[_2658]
                            if ext_call.return_data[0] < mem[_2658]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2673
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2673
                            if ext_call.return_data[0] - _2673 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2880 = mem[192]
                            _3316 = mem[mem[320]]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4100 = mem[(32 * idx) + mem[256] + 32]
                                    _4101 = mem[288]
                                    _4102 = mem[224]
                                    _4103 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4100
                                    mem[mem[64] + 36] = _4101
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4102]
                                    mem[mem[64] + 164] = mem[_4102]
                                    idx = 0
                                    t = _4102 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4103 + 100] = address(_3410)
                                    mem[_4103 + 132] = block.timestamp
                                    call address(_2880).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4103 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4754 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4754 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4754 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_15104)) + 512] = stor3[60].field_0
                idx = (32 * uint256(stor3.field_15104)) + 512
                s = 0
                while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 60].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if not uint256(stor3.field_15872):
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _977 = mem[(32 * idx) + mem[320] + 32]
                            _1554 = mem[352]
                            s = 0
                            while s < _1554:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1644 = mem[(32 * idx) + mem[256] + 32]
                                _1645 = mem[288]
                                _1646 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1644
                                mem[mem[64] + 36] = _1645
                                mem[mem[64] + 68] = 160
                                _1791 = mem[_1646]
                                mem[mem[64] + 164] = mem[_1646]
                                idx = 0
                                t = _1646 + 32
                                u = mem[64] + 196
                                while idx < _1791:
                                    mem[u] = mem[t + 12 len 20]
                                    _1554 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_977)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1644, _1645, 160, address(_977), block.timestamp, mem[mem[64] + 164 len (32 * _1791) + 32]
                                if not ext_call.success:
                                _2605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2628 = mem[_2605]
                                require mem[_2605] <= test266151307()
                                require _2605 + mem[_2605] + 31 < _2605 + return_data.size
                                _2638 = mem[_2605 + mem[_2605]]
                                if mem[_2605 + mem[_2605]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1 > test266151307() or floor32(mem[_2605 + mem[_2605]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1
                                mem[_2605 + ceil32(return_data.size)] = _2638
                                require _2628 + (32 * _2638) + 32 <= return_data.size
                                idx = _2605 + _2628 + 32
                                t = _2605 + ceil32(return_data.size) + 32
                                while idx < _2605 + _2628 + (32 * _2638) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1554 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1554 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _474 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _553 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_553).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2674 = mem[_2659]
                            require mem[_2659] == mem[_2659]
                            if ext_call.return_data[0] < mem[_2659]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2674
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2674
                            if ext_call.return_data[0] - _2674 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2882 = mem[192]
                            _3318 = mem[mem[320]]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3412 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4104 = mem[(32 * idx) + mem[256] + 32]
                                    _4105 = mem[288]
                                    _4106 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4104
                                    mem[mem[64] + 36] = _4105
                                    mem[mem[64] + 68] = 160
                                    _4140 = mem[_4106]
                                    mem[mem[64] + 164] = mem[_4106]
                                    idx = 0
                                    t = _4106 + 32
                                    u = mem[64] + 196
                                    while idx < _4140:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3412)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2882).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4104, _4105, 160, address(_3412), block.timestamp, mem[mem[64] + 164 len (32 * _4140) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4756 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4756 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4756 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_474).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2660 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2675 = mem[_2660]
                            require mem[_2660] == mem[_2660]
                            if ext_call.return_data[0] < mem[_2660]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2675
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2675
                            if ext_call.return_data[0] - _2675 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2884 = mem[192]
                            _3320 = mem[mem[320]]
                            idx = 0
                            while idx < _3320:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3413 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4108 = mem[(32 * idx) + mem[256] + 32]
                                    _4109 = mem[288]
                                    _4110 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4108
                                    mem[mem[64] + 36] = _4109
                                    mem[mem[64] + 68] = 160
                                    _4141 = mem[_4110]
                                    mem[mem[64] + 164] = mem[_4110]
                                    idx = 0
                                    t = _4110 + 32
                                    u = mem[64] + 196
                                    while idx < _4141:
                                        mem[u] = mem[t + 12 len 20]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3413)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2884).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4108, _4109, 160, address(_3413), block.timestamp, mem[mem[64] + 164 len (32 * _4141) + 32]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4758 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4758 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4758 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4758 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3320 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3320 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3325 = mem[352]
                            s = 0
                            while s < _3325:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3421 = mem[(32 * idx) + mem[256] + 32]
                                _3422 = mem[288]
                                _3423 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3421
                                mem[mem[64] + 36] = _3422
                                mem[mem[64] + 68] = 160
                                _3534 = mem[_3423]
                                mem[mem[64] + 164] = mem[_3423]
                                idx = 0
                                t = _3423 + 32
                                u = mem[64] + 196
                                while idx < _3534:
                                    mem[u] = mem[t + 12 len 20]
                                    _3325 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2539)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3421, _3422, 160, address(_2539), block.timestamp, mem[mem[64] + 164 len (32 * _3534) + 32]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4175 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4175 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4175 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3325 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1752 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1852 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args uint256(stor3.field_14336), 0, 160, address(this.address), block.timestamp, uint256(stor3.field_15104), mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740 len 32 * uint256(stor3.field_15104)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1852).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4215 = mem[_4202]
                            require mem[_4202] == mem[_4202]
                            if ext_call.return_data[0] < mem[_4202]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4215
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4215
                            if ext_call.return_data[0] - _4215 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4365 = mem[192]
                            _4619 = mem[mem[320]]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4672 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4971 = mem[(32 * idx) + mem[256] + 32]
                                    _4972 = mem[288]
                                    _4973 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4971
                                    mem[mem[64] + 36] = _4972
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4973]
                                    mem[mem[64] + 164] = mem[_4973]
                                    idx = 0
                                    t = _4973 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4672)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4365).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4971, _4972, 160, address(_4672), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5192 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5192 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5192 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4216 = mem[_4203]
                            require mem[_4203] == mem[_4203]
                            if ext_call.return_data[0] < mem[_4203]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4216
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4216
                            if ext_call.return_data[0] - _4216 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4367 = mem[192]
                            _4621 = mem[mem[320]]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4975 = mem[(32 * idx) + mem[256] + 32]
                                    _4976 = mem[288]
                                    _4977 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4975
                                    mem[mem[64] + 36] = _4976
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4977]
                                    mem[mem[64] + 164] = mem[_4977]
                                    idx = 0
                                    t = _4977 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4367).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4975, _4976, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5194 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5194 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5194 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor3[59].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_15104)) + 448 > idx:
                mem[idx + 32] = stor3[s + 59].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_15104)) + 480] = uint256(stor3.field_15360)
            if not uint256(stor3.field_15360):
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if uint256(stor3.field_15872):
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2540 = mem[(32 * idx) + mem[320] + 32]
                            _3334 = mem[352]
                            s = 0
                            while s < _3334:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3434 = mem[(32 * idx) + mem[256] + 32]
                                _3435 = mem[288]
                                _3436 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3434
                                mem[mem[64] + 36] = _3435
                                mem[mem[64] + 68] = 160
                                _3537 = mem[_3436]
                                mem[mem[64] + 164] = mem[_3436]
                                idx = 0
                                t = _3436 + 32
                                u = mem[64] + 196
                                while idx < _3537:
                                    mem[u] = mem[t + 12 len 20]
                                    _3334 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2540)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3434, _3435, 160, address(_2540), block.timestamp, mem[mem[64] + 164 len (32 * _3537) + 32]
                                if not ext_call.success:
                                _4158 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4158]
                                require mem[_4158] <= test266151307()
                                require _4158 + mem[_4158] + 31 < _4158 + return_data.size
                                _4185 = mem[_4158 + mem[_4158]]
                                if mem[_4158 + mem[_4158]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1 > test266151307() or floor32(mem[_4158 + mem[_4158]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1
                                mem[_4158 + ceil32(return_data.size)] = _4185
                                require _4177 + (32 * _4185) + 32 <= return_data.size
                                idx = _4158 + _4177 + 32
                                t = _4158 + ceil32(return_data.size) + 32
                                while idx < _4158 + _4177 + (32 * _4185) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3334 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3334 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1758 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1856 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1856).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_14592):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4623 = mem[mem[320]]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4675 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4981 = mem[(32 * idx) + mem[256] + 32]
                                    _4982 = mem[288]
                                    _4983 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4981
                                    mem[mem[64] + 36] = _4982
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4983]
                                    mem[mem[64] + 164] = mem[_4983]
                                    idx = 0
                                    t = _4983 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4675)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4981, _4982, 160, address(_4675), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5196 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5196 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5196 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_1758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_14592):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4625 = mem[mem[320]]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4985 = mem[(32 * idx) + mem[256] + 32]
                                    _4986 = mem[288]
                                    _4987 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4985
                                    mem[mem[64] + 36] = _4986
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4987]
                                    mem[mem[64] + 164] = mem[_4987]
                                    idx = 0
                                    t = _4987 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4985, _4986, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5198 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5198 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5198 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _978 = mem[(32 * idx) + mem[320] + 32]
                            _1559 = mem[352]
                            s = 0
                            while s < _1559:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1656 = mem[(32 * idx) + mem[256] + 32]
                                _1657 = mem[288]
                                _1658 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1656
                                mem[mem[64] + 36] = _1657
                                mem[mem[64] + 68] = 160
                                _1796 = mem[_1658]
                                mem[mem[64] + 164] = mem[_1658]
                                idx = 0
                                t = _1658 + 32
                                u = mem[64] + 196
                                while idx < _1796:
                                    mem[u] = mem[t + 12 len 20]
                                    _1559 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_978)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1656, _1657, 160, address(_978), block.timestamp, mem[mem[64] + 164 len (32 * _1796) + 32]
                                if not ext_call.success:
                                _2606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2631 = mem[_2606]
                                require mem[_2606] <= test266151307()
                                require _2606 + mem[_2606] + 31 < _2606 + return_data.size
                                _2639 = mem[_2606 + mem[_2606]]
                                if mem[_2606 + mem[_2606]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1 > test266151307() or floor32(mem[_2606 + mem[_2606]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1
                                mem[_2606 + ceil32(return_data.size)] = _2639
                                require _2631 + (32 * _2639) + 32 <= return_data.size
                                idx = _2606 + _2631 + 32
                                t = _2606 + ceil32(return_data.size) + 32
                                while idx < _2606 + _2631 + (32 * _2639) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1559 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1559 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _494 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _566 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_566).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2677 = mem[_2662]
                            require mem[_2662] == mem[_2662]
                            if ext_call.return_data[0] < mem[_2662]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2677
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2677
                            if ext_call.return_data[0] - _2677 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2886 = mem[192]
                            _3327 = mem[mem[320]]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3425 = mem[(32 * idx) + mem[320] + 32]
                                _4060 = mem[352]
                                s = 0
                                while s < _4060:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4112 = mem[(32 * idx) + mem[256] + 32]
                                    _4113 = mem[288]
                                    _4114 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4112
                                    mem[mem[64] + 36] = _4113
                                    mem[mem[64] + 68] = 160
                                    _4145 = mem[_4114]
                                    mem[mem[64] + 164] = mem[_4114]
                                    idx = 0
                                    t = _4114 + 32
                                    u = mem[64] + 196
                                    while idx < _4145:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3425)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_2886).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4112, _4113, 160, address(_3425), block.timestamp, mem[mem[64] + 164 len (32 * _4145) + 32]
                                    if not ext_call.success:
                                    _4747 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4747]
                                    require mem[_4747] <= test266151307()
                                    require _4747 + mem[_4747] + 31 < _4747 + return_data.size
                                    _4777 = mem[_4747 + mem[_4747]]
                                    if mem[_4747 + mem[_4747]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1 > test266151307() or floor32(mem[_4747 + mem[_4747]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1
                                    mem[_4747 + ceil32(return_data.size)] = _4777
                                    require _4762 + (32 * _4777) + 32 <= return_data.size
                                    idx = _4747 + _4762 + 32
                                    t = _4747 + ceil32(return_data.size) + 32
                                    while idx < _4747 + _4762 + (32 * _4777) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4060 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_494).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _2663 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2678 = mem[_2663]
                            require mem[_2663] == mem[_2663]
                            if ext_call.return_data[0] < mem[_2663]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _2678
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _2678
                            if ext_call.return_data[0] - _2678 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _2888 = mem[192]
                            _3329 = mem[mem[320]]
                            idx = 0
                            while idx < _3329:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3426 = mem[(32 * idx) + mem[320] + 32]
                                _4061 = mem[352]
                                s = 0
                                while s < _4061:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4116 = mem[(32 * idx) + mem[256] + 32]
                                    _4117 = mem[288]
                                    _4118 = mem[224]
                                    _4119 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4116
                                    mem[mem[64] + 36] = _4117
                                    mem[mem[64] + 68] = 160
                                    _4146 = mem[_4118]
                                    mem[mem[64] + 164] = mem[_4118]
                                    idx = 0
                                    t = _4118 + 32
                                    u = mem[64] + 196
                                    while idx < _4146:
                                        mem[u] = mem[t + 12 len 20]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4119 + 100] = address(_3426)
                                    mem[_4119 + 132] = block.timestamp
                                    call address(_2888).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4119 + (32 * _4146) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4748 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4764 = mem[_4748]
                                    require mem[_4748] <= test266151307()
                                    require _4748 + mem[_4748] + 31 < _4748 + return_data.size
                                    _4778 = mem[_4748 + mem[_4748]]
                                    if mem[_4748 + mem[_4748]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1 > test266151307() or floor32(mem[_4748 + mem[_4748]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1
                                    mem[_4748 + ceil32(return_data.size)] = _4778
                                    require _4764 + (32 * _4778) + 32 <= return_data.size
                                    idx = _4748 + _4764 + 32
                                    t = _4748 + ceil32(return_data.size) + 32
                                    while idx < _4748 + _4764 + (32 * _4778) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3329 = mem[mem[320]]
                                    _4061 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3329 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_15104)) + 512] = stor3[60].field_0
                idx = (32 * uint256(stor3.field_15104)) + 512
                s = 0
                while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 60].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_15104)) + 480
                mem[288] = uint256(stor3.field_15616)
                mem[64] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544
                mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512] = uint256(stor3.field_15872)
                if uint256(stor3.field_15872):
                    mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544] = stor3[62].field_0
                    idx = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 62].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4120 = mem[(32 * idx) + mem[320] + 32]
                            _4634 = mem[352]
                            s = 0
                            while s < _4634:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4687 = mem[(32 * idx) + mem[256] + 32]
                                _4688 = mem[288]
                                _4689 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4687
                                mem[mem[64] + 36] = _4688
                                mem[mem[64] + 68] = 160
                                _4742 = mem[_4689]
                                mem[mem[64] + 164] = mem[_4689]
                                idx = 0
                                t = _4689 + 32
                                u = mem[64] + 196
                                while idx < _4742:
                                    mem[u] = mem[t + 12 len 20]
                                    _4634 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4120)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4687, _4688, 160, address(_4120), block.timestamp, mem[mem[64] + 164 len (32 * _4742) + 32]
                                if not ext_call.success:
                                _5008 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5014 = mem[_5008]
                                require mem[_5008] <= test266151307()
                                require _5008 + mem[_5008] + 31 < _5008 + return_data.size
                                _5016 = mem[_5008 + mem[_5008]]
                                if mem[_5008 + mem[_5008]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1 > test266151307() or floor32(mem[_5008 + mem[_5008]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1
                                mem[_5008 + ceil32(return_data.size)] = _5016
                                require _5014 + (32 * _5016) + 32 <= return_data.size
                                idx = _5008 + _5014 + 32
                                t = _5008 + ceil32(return_data.size) + 32
                                while idx < _5008 + _5014 + (32 * _5016) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4634 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4634 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _3517 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _3585 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_3585).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_14592):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5148 = mem[mem[320]]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5162 = mem[(32 * idx) + mem[320] + 32]
                                _5239 = mem[352]
                                s = 0
                                while s < _5239:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5251 = mem[(32 * idx) + mem[256] + 32]
                                    _5252 = mem[288]
                                    _5253 = mem[224]
                                    _5254 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5251
                                    mem[mem[64] + 36] = _5252
                                    mem[mem[64] + 68] = 160
                                    _5259 = mem[_5253]
                                    mem[mem[64] + 164] = mem[_5253]
                                    idx = 0
                                    t = _5253 + 32
                                    u = mem[64] + 196
                                    while idx < _5259:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5254 + 100] = address(_5162)
                                    mem[_5254 + 132] = block.timestamp
                                    call address(stor3.field_14848).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5254 + (32 * _5259) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5281 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5281]
                                    require mem[_5281] <= test266151307()
                                    require _5281 + mem[_5281] + 31 < _5281 + return_data.size
                                    _5287 = mem[_5281 + mem[_5281]]
                                    if mem[_5281 + mem[_5281]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1 > test266151307() or floor32(mem[_5281 + mem[_5281]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1
                                    mem[_5281 + ceil32(return_data.size)] = _5287
                                    require _5284 + (32 * _5287) + 32 <= return_data.size
                                    idx = _5281 + _5284 + 32
                                    t = _5281 + ceil32(return_data.size) + 32
                                    while idx < _5281 + _5284 + (32 * _5287) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5239 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall address(_3517).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_14592):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _5150 = mem[mem[320]]
                            idx = 0
                            while idx < _5150:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5163 = mem[(32 * idx) + mem[320] + 32]
                                _5240 = mem[352]
                                s = 0
                                while s < _5240:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5255 = mem[(32 * idx) + mem[256] + 32]
                                    _5256 = mem[288]
                                    _5257 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5255
                                    mem[mem[64] + 36] = _5256
                                    mem[mem[64] + 68] = 160
                                    _5260 = mem[_5257]
                                    mem[mem[64] + 164] = mem[_5257]
                                    idx = 0
                                    t = _5257 + 32
                                    u = mem[64] + 196
                                    while idx < _5260:
                                        mem[u] = mem[t + 12 len 20]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5163)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5255, _5256, 160, address(_5163), block.timestamp, mem[mem[64] + 164 len (32 * _5260) + 32]
                                    if not ext_call.success:
                                    _5282 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5286 = mem[_5282]
                                    require mem[_5282] <= test266151307()
                                    require _5282 + mem[_5282] + 31 < _5282 + return_data.size
                                    _5288 = mem[_5282 + mem[_5282]]
                                    if mem[_5282 + mem[_5282]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1 > test266151307() or floor32(mem[_5282 + mem[_5282]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1
                                    mem[_5282 + ceil32(return_data.size)] = _5288
                                    require _5286 + (32 * _5288) + 32 <= return_data.size
                                    idx = _5282 + _5286 + 32
                                    t = _5282 + ceil32(return_data.size) + 32
                                    while idx < _5282 + _5286 + (32 * _5288) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5150 = mem[mem[320]]
                                    _5240 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5150 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[320] = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + 512
                    mem[352] = uint256(stor3.field_16128)
                    mem[384] = uint256(stor3.field_16384)
                    mem[416] = uint256(stor3.field_16640)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_16384):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_16640):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_16384):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_16640):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_15872):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2541 = mem[(32 * idx) + mem[320] + 32]
                            _3339 = mem[352]
                            s = 0
                            while s < _3339:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3444 = mem[(32 * idx) + mem[256] + 32]
                                _3445 = mem[288]
                                _3446 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3444
                                mem[mem[64] + 36] = _3445
                                mem[mem[64] + 68] = 160
                                _3540 = mem[_3446]
                                mem[mem[64] + 164] = mem[_3446]
                                idx = 0
                                t = _3446 + 32
                                u = mem[64] + 196
                                while idx < _3540:
                                    mem[u] = mem[t + 12 len 20]
                                    _3339 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2541)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_14848).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3444, _3445, 160, address(_2541), block.timestamp, mem[mem[64] + 164 len (32 * _3540) + 32]
                                if not ext_call.success:
                                _4159 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4179 = mem[_4159]
                                require mem[_4159] <= test266151307()
                                require _4159 + mem[_4159] + 31 < _4159 + return_data.size
                                _4186 = mem[_4159 + mem[_4159]]
                                if mem[_4159 + mem[_4159]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1 > test266151307() or floor32(mem[_4159 + mem[_4159]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1
                                mem[_4159 + ceil32(return_data.size)] = _4186
                                require _4179 + (32 * _4186) + 32 <= return_data.size
                                idx = _4159 + _4179 + 32
                                t = _4159 + ceil32(return_data.size) + 32
                                while idx < _4159 + _4179 + (32 * _4186) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3339 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3339 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1776 = mem[480]
                        if uint256(stor3.field_15104) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_15104) - 1 >= uint256(stor3.field_15104):
                            revert with 'NH{q', 50
                        _1878 = mem[(32 * uint256(stor3.field_15104) - 1) + 480]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = uint256(stor3.field_14336)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 708] = uint256(stor3.field_15104)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_15104):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_14848))
                        call address(stor3.field_14848).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_15104)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1878).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_15104) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_15104)
                        if not uint256(stor3.field_15104):
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4219 = mem[_4206]
                            require mem[_4206] == mem[_4206]
                            if ext_call.return_data[0] < mem[_4206]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4219
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4219
                            if ext_call.return_data[0] - _4219 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4373 = mem[192]
                            _4627 = mem[mem[320]]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4678 = mem[(32 * idx) + mem[320] + 32]
                                _4949 = mem[352]
                                s = 0
                                while s < _4949:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4989 = mem[(32 * idx) + mem[256] + 32]
                                    _4990 = mem[288]
                                    _4991 = mem[224]
                                    _4992 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4989
                                    mem[mem[64] + 36] = _4990
                                    mem[mem[64] + 68] = 160
                                    _5002 = mem[_4991]
                                    mem[mem[64] + 164] = mem[_4991]
                                    idx = 0
                                    t = _4991 + 32
                                    u = mem[64] + 196
                                    while idx < _5002:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4992 + 100] = address(_4678)
                                    mem[_4992 + 132] = block.timestamp
                                    call address(_4373).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4992 + (32 * _5002) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5189 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5189]
                                    require mem[_5189] <= test266151307()
                                    require _5189 + mem[_5189] + 31 < _5189 + return_data.size
                                    _5209 = mem[_5189 + mem[_5189]]
                                    if mem[_5189 + mem[_5189]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1 > test266151307() or floor32(mem[_5189 + mem[_5189]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1
                                    mem[_5189 + ceil32(return_data.size)] = _5209
                                    require _5200 + (32 * _5209) + 32 <= return_data.size
                                    idx = _5189 + _5200 + 32
                                    t = _5189 + ceil32(return_data.size) + 32
                                    while idx < _5189 + _5200 + (32 * _5209) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4949 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_15104)] = call.data[calldata.size len 32 * uint256(stor3.field_15104)]
                            idx = 0
                            while idx < uint256(stor3.field_15104):
                                if idx >= uint256(stor3.field_15104):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_15104) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_15104) + -idx - 1 >= mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_15104) + -idx - 1) + (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_14848)
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_14848), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 576
                            t = (32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[448]) + 772
                            while idx < mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_14848))
                            call address(stor3.field_14848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (64 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (4 * ceil32(return_data.size)) + (32 * mem[(32 * uint256(stor3.field_15104)) + (32 * uint256(stor3.field_15360)) + (32 * uint256(stor3.field_15872)) + (2 * ceil32(return_data.size)) + 544]) + -mem[64] + 768]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            staticcall address(_1776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            _4207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4220 = mem[_4207]
                            require mem[_4207] == mem[_4207]
                            if ext_call.return_data[0] < mem[_4207]:
                                revert with 'NH{q', 17
                            mem[mem[64]] = ext_call.return_data[0]
                            mem[mem[64] + 32] = ext_call.return_data[0] - _4220
                            emit 0x20343ec1: ext_call.return_data[0], ext_call.return_data[0] - _4220
                            if ext_call.return_data[0] - _4220 > mem[160]:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < mem[384]:
                                revert with 0, 'B'
                            if block.timestamp < mem[416]:
                                revert with 0, 'T'
                            _4375 = mem[192]
                            _4629 = mem[mem[320]]
                            idx = 0
                            while idx < _4629:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4679 = mem[(32 * idx) + mem[320] + 32]
                                _4950 = mem[352]
                                s = 0
                                while s < _4950:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4993 = mem[(32 * idx) + mem[256] + 32]
                                    _4994 = mem[288]
                                    _4995 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4993
                                    mem[mem[64] + 36] = _4994
                                    mem[mem[64] + 68] = 160
                                    _5003 = mem[_4995]
                                    mem[mem[64] + 164] = mem[_4995]
                                    idx = 0
                                    t = _4995 + 32
                                    u = mem[64] + 196
                                    while idx < _5003:
                                        mem[u] = mem[t + 12 len 20]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4679)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(_4375).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4993, _4994, 160, address(_4679), block.timestamp, mem[mem[64] + 164 len (32 * _5003) + 32]
                                    if not ext_call.success:
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5202 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5210 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1 > test266151307() or floor32(mem[_5190 + mem[_5190]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5210
                                    require _5202 + (32 * _5210) + 32 <= return_data.size
                                    idx = _5190 + _5202 + 32
                                    t = _5190 + ceil32(return_data.size) + 32
                                    while idx < _5190 + _5202 + (32 * _5210) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4629 = mem[mem[320]]
                                    _4950 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4629 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}

function buy(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if arg1 >= stor3.length:
        revert with 'NH{q', 50
    if arg1 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(stor3[arg1].field_0)
    mem[128] = stor3[arg1].field_256
    mem[160] = stor3[arg1].field_512
    mem[192] = stor3[arg1].field_768
    mem[448] = stor3[arg1].field_1024
    if not stor3[arg1].field_0:
        if not stor3[arg1].field_1024:
            mem[224] = 448
            mem[(32 * stor3[arg1].field_1024) + 480] = stor3[arg1].field_1280
            if not stor3[arg1].field_1280:
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _173 = mem[(32 * idx) + mem[320] + 32]
                        _329 = mem[352]
                        s = 0
                        while s < _329:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _359 = mem[(32 * idx) + mem[256] + 32]
                            _360 = mem[288]
                            _361 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _359
                            mem[mem[64] + 36] = _360
                            mem[mem[64] + 68] = 160
                            _481 = mem[_361]
                            mem[mem[64] + 164] = mem[_361]
                            idx = 0
                            t = _361 + 32
                            u = mem[64] + 196
                            while idx < _481:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_173)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _359, _360, 160, address(_173), block.timestamp, mem[mem[64] + 164 len (32 * _481) + 32]
                            if not ext_call.success:
                            _1026 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1034 = mem[_1026]
                            require mem[_1026] <= test266151307()
                            require _1026 + mem[_1026] + 31 < _1026 + return_data.size
                            _1043 = mem[_1026 + mem[_1026]]
                            if mem[_1026 + mem[_1026]] > test266151307():
                                revert with 'NH{q', 65
                            if _1026 + ceil32(return_data.size) + floor32(mem[_1026 + mem[_1026]]) + 1 > test266151307() or floor32(mem[_1026 + mem[_1026]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1026 + ceil32(return_data.size) + floor32(mem[_1026 + mem[_1026]]) + 1
                            mem[_1026 + ceil32(return_data.size)] = _1043
                            require _1034 + (32 * _1043) + 32 <= return_data.size
                            idx = _1026 + _1034 + 32
                            t = _1026 + ceil32(return_data.size) + 32
                            while idx < _1026 + _1034 + (32 * _1043) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _971 = mem[(32 * idx) + mem[320] + 32]
                        _1535 = mem[352]
                        s = 0
                        while s < _1535:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1606 = mem[(32 * idx) + mem[256] + 32]
                            _1607 = mem[288]
                            _1608 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1606
                            mem[mem[64] + 36] = _1607
                            mem[mem[64] + 68] = 160
                            _1780 = mem[_1608]
                            mem[mem[64] + 164] = mem[_1608]
                            idx = 0
                            t = _1608 + 32
                            u = mem[64] + 196
                            while idx < _1780:
                                mem[u] = mem[t + 12 len 20]
                                _1535 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_971)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1606, _1607, 160, address(_971), block.timestamp, mem[mem[64] + 164 len (32 * _1780) + 32]
                            if not ext_call.success:
                            _2599 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2615 = mem[_2599]
                            require mem[_2599] <= test266151307()
                            require _2599 + mem[_2599] + 31 < _2599 + return_data.size
                            _2632 = mem[_2599 + mem[_2599]]
                            if mem[_2599 + mem[_2599]] > test266151307():
                                revert with 'NH{q', 65
                            if _2599 + ceil32(return_data.size) + floor32(mem[_2599 + mem[_2599]]) + 1 > test266151307() or floor32(mem[_2599 + mem[_2599]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2599 + ceil32(return_data.size) + floor32(mem[_2599 + mem[_2599]]) + 1
                            mem[_2599 + ceil32(return_data.size)] = _2632
                            require _2615 + (32 * _2632) + 32 <= return_data.size
                            idx = _2599 + _2615 + 32
                            t = _2599 + ceil32(return_data.size) + 32
                            while idx < _2599 + _2615 + (32 * _2632) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1535 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1535 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * stor3[arg1].field_1024) + 512] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
                idx = (32 * stor3[arg1].field_1024) + 512
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 480 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _972 = mem[(32 * idx) + mem[320] + 32]
                        _1536 = mem[352]
                        s = 0
                        while s < _1536:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1610 = mem[(32 * idx) + mem[256] + 32]
                            _1611 = mem[288]
                            _1612 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1610
                            mem[mem[64] + 36] = _1611
                            mem[mem[64] + 68] = 160
                            _1781 = mem[_1612]
                            mem[mem[64] + 164] = mem[_1612]
                            idx = 0
                            t = _1612 + 32
                            u = mem[64] + 196
                            while idx < _1781:
                                mem[u] = mem[t + 12 len 20]
                                _1536 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_972)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1610, _1611, 160, address(_972), block.timestamp, mem[mem[64] + 164 len (32 * _1781) + 32]
                            if not ext_call.success:
                            _2600 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2600]
                            require mem[_2600] <= test266151307()
                            require _2600 + mem[_2600] + 31 < _2600 + return_data.size
                            _2633 = mem[_2600 + mem[_2600]]
                            if mem[_2600 + mem[_2600]] > test266151307():
                                revert with 'NH{q', 65
                            if _2600 + ceil32(return_data.size) + floor32(mem[_2600 + mem[_2600]]) + 1 > test266151307() or floor32(mem[_2600 + mem[_2600]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2600 + ceil32(return_data.size) + floor32(mem[_2600 + mem[_2600]]) + 1
                            mem[_2600 + ceil32(return_data.size)] = _2633
                            require _2617 + (32 * _2633) + 32 <= return_data.size
                            idx = _2600 + _2617 + 32
                            t = _2600 + ceil32(return_data.size) + 32
                            while idx < _2600 + _2617 + (32 * _2633) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1536 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1536 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2526 = mem[(32 * idx) + mem[320] + 32]
                        _3308 = mem[352]
                        s = 0
                        while s < _3308:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3392 = mem[(32 * idx) + mem[256] + 32]
                            _3393 = mem[288]
                            _3394 = mem[224]
                            _3395 = mem[64]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3392
                            mem[mem[64] + 36] = _3393
                            mem[mem[64] + 68] = 160
                            _3525 = mem[_3394]
                            mem[mem[64] + 164] = mem[_3394]
                            idx = 0
                            t = _3394 + 32
                            u = mem[64] + 196
                            while idx < _3525:
                                mem[u] = mem[t + 12 len 20]
                                _3308 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_3395 + 100] = address(_2526)
                            mem[_3395 + 132] = block.timestamp
                            call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _3395 + (32 * _3525) + -mem[64] + 192]
                            if not ext_call.success:
                            _4152 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4166 = mem[_4152]
                            require mem[_4152] <= test266151307()
                            require _4152 + mem[_4152] + 31 < _4152 + return_data.size
                            _4179 = mem[_4152 + mem[_4152]]
                            if mem[_4152 + mem[_4152]] > test266151307():
                                revert with 'NH{q', 65
                            if _4152 + ceil32(return_data.size) + floor32(mem[_4152 + mem[_4152]]) + 1 > test266151307() or floor32(mem[_4152 + mem[_4152]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4152 + ceil32(return_data.size) + floor32(mem[_4152 + mem[_4152]]) + 1
                            mem[_4152 + ceil32(return_data.size)] = _4179
                            require _4166 + (32 * _4179) + 32 <= return_data.size
                            idx = _4152 + _4166 + 32
                            t = _4152 + ceil32(return_data.size) + 32
                            while idx < _4152 + _4166 + (32 * _4179) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3308 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3308 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_0
            idx = 480
            s = 0
            while (32 * stor3[arg1].field_1024) + 448 > idx:
                mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * stor3[arg1].field_1024) + 480] = stor3[arg1].field_1280
            if not stor3[arg1].field_1280:
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1616 = mem[(32 * idx) + mem[256] + 32]
                            _1617 = mem[288]
                            _1618 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1616
                            mem[mem[64] + 36] = _1617
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1618]
                            mem[mem[64] + 164] = mem[_1618]
                            idx = 0
                            t = _1618 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1616, _1617, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2620 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2620 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2620 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2620 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2527 = mem[(32 * idx) + mem[320] + 32]
                        _3309 = mem[352]
                        s = 0
                        while s < _3309:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3397 = mem[(32 * idx) + mem[256] + 32]
                            _3398 = mem[288]
                            _3399 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3397
                            mem[mem[64] + 36] = _3398
                            mem[mem[64] + 68] = 160
                            _3526 = mem[_3399]
                            mem[mem[64] + 164] = mem[_3399]
                            idx = 0
                            t = _3399 + 32
                            u = mem[64] + 196
                            while idx < _3526:
                                mem[u] = mem[t + 12 len 20]
                                _3309 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2527)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3397, _3398, 160, address(_2527), block.timestamp, mem[mem[64] + 164 len (32 * _3526) + 32]
                            if not ext_call.success:
                            _4153 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4153]
                            require mem[_4153] <= test266151307()
                            require _4153 + mem[_4153] + 31 < _4153 + return_data.size
                            _4180 = mem[_4153 + mem[_4153]]
                            if mem[_4153 + mem[_4153]] > test266151307():
                                revert with 'NH{q', 65
                            if _4153 + ceil32(return_data.size) + floor32(mem[_4153 + mem[_4153]]) + 1 > test266151307() or floor32(mem[_4153 + mem[_4153]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4153 + ceil32(return_data.size) + floor32(mem[_4153 + mem[_4153]]) + 1
                            mem[_4153 + ceil32(return_data.size)] = _4180
                            require _4168 + (32 * _4180) + 32 <= return_data.size
                            idx = _4153 + _4168 + 32
                            t = _4153 + ceil32(return_data.size) + 32
                            while idx < _4153 + _4168 + (32 * _4180) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3309 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3309 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * stor3[arg1].field_1024) + 512] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
                idx = (32 * stor3[arg1].field_1024) + 512
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 480 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3401 = mem[(32 * idx) + mem[256] + 32]
                            _3402 = mem[288]
                            _3403 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3401
                            mem[mem[64] + 36] = _3402
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3403]
                            mem[mem[64] + 164] = mem[_3403]
                            idx = 0
                            t = _3403 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3401, _3402, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4170 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4170 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4170 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4091 = mem[(32 * idx) + mem[320] + 32]
                        _4615 = mem[352]
                        s = 0
                        while s < _4615:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4666 = mem[(32 * idx) + mem[256] + 32]
                            _4667 = mem[288]
                            _4668 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4666
                            mem[mem[64] + 36] = _4667
                            mem[mem[64] + 68] = 160
                            _4731 = mem[_4668]
                            mem[mem[64] + 164] = mem[_4668]
                            idx = 0
                            t = _4668 + 32
                            u = mem[64] + 196
                            while idx < _4731:
                                mem[u] = mem[t + 12 len 20]
                                _4615 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4091)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4666, _4667, 160, address(_4091), block.timestamp, mem[mem[64] + 164 len (32 * _4731) + 32]
                            if not ext_call.success:
                            _5005 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5010 = mem[_5005]
                            require mem[_5005] <= test266151307()
                            require _5005 + mem[_5005] + 31 < _5005 + return_data.size
                            _5013 = mem[_5005 + mem[_5005]]
                            if mem[_5005 + mem[_5005]] > test266151307():
                                revert with 'NH{q', 65
                            if _5005 + ceil32(return_data.size) + floor32(mem[_5005 + mem[_5005]]) + 1 > test266151307() or floor32(mem[_5005 + mem[_5005]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5005 + ceil32(return_data.size) + floor32(mem[_5005 + mem[_5005]]) + 1
                            mem[_5005 + ceil32(return_data.size)] = _5013
                            require _5010 + (32 * _5013) + 32 <= return_data.size
                            idx = _5005 + _5010 + 32
                            t = _5005 + ceil32(return_data.size) + 32
                            while idx < _5005 + _5010 + (32 * _5013) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4615 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4615 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not stor3[arg1].field_1024:
            mem[224] = 448
            mem[(32 * stor3[arg1].field_1024) + 480] = stor3[arg1].field_1280
            if not stor3[arg1].field_1280:
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _174 = mem[(32 * idx) + mem[320] + 32]
                            _336 = mem[352]
                            s = 0
                            while s < _336:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _373 = mem[(32 * idx) + mem[256] + 32]
                                _374 = mem[288]
                                _375 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _373
                                mem[mem[64] + 36] = _374
                                mem[mem[64] + 68] = 160
                                _486 = mem[_375]
                                mem[mem[64] + 164] = mem[_375]
                                idx = 0
                                t = _375 + 32
                                u = mem[64] + 196
                                while idx < _486:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_174)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _373, _374, 160, address(_174), block.timestamp, mem[mem[64] + 164 len (32 * _486) + 32]
                                if not ext_call.success:
                                _1027 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1039 = mem[_1027]
                                require mem[_1027] <= test266151307()
                                require _1027 + mem[_1027] + 31 < _1027 + return_data.size
                                _1044 = mem[_1027 + mem[_1027]]
                                if mem[_1027 + mem[_1027]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1027 + ceil32(return_data.size) + floor32(mem[_1027 + mem[_1027]]) + 1 > test266151307() or floor32(mem[_1027 + mem[_1027]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1027 + ceil32(return_data.size) + floor32(mem[_1027 + mem[_1027]]) + 1
                                mem[_1027 + ceil32(return_data.size)] = _1044
                                require _1039 + (32 * _1044) + 32 <= return_data.size
                                idx = _1027 + _1039 + 32
                                t = _1027 + ceil32(return_data.size) + 32
                                while idx < _1027 + _1039 + (32 * _1044) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    if 0 >= stor3[arg1].field_1024:
                        revert with 'NH{q', 50
                    if stor3[arg1].field_1024 < 1:
                        revert with 'NH{q', 17
                    if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                        revert with 'NH{q', 50
                    _74 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                    staticcall mem[492 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                    idx = 0
                    s = 480
                    t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                    while idx < stor3[arg1].field_1024:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                    require ext_code.size(stor3[arg1].field_768)
                    call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                    staticcall address(_74).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if stor3[arg1].field_1024 > test266151307():
                        revert with 'NH{q', 65
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                    if not stor3[arg1].field_1024:
                        idx = 0
                        while idx < stor3[arg1].field_1024:
                            if idx >= stor3[arg1].field_1024:
                                revert with 'NH{q', 50
                            if stor3[arg1].field_1024 < 1:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 - 1 < idx:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                revert with 'NH{q', 50
                            mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                        call address(_74).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_768, ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                        idx = 0
                        s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                        t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                        while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                        emit 0x20343ec1: ext_call.return_data[0], 0
                        if 0 > stor3[arg1].field_512:
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 4
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'Rpwf'
                        else:
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 4
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'Wut?'
                            else:
                                if block.number < stor3[arg1].field_2304:
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 1
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'B'
                                else:
                                    if block.timestamp >= stor3[arg1].field_2560:
                                        _1540 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                                        idx = 0
                                        while idx < _1540:
                                            if idx >= mem[mem[320]]:
                                                revert with 'NH{q', 50
                                            _1623 = mem[(32 * idx) + mem[320] + 32]
                                            _2487 = mem[352]
                                            s = 0
                                            while s < _2487:
                                                if idx >= mem[mem[256]]:
                                                    revert with 'NH{q', 50
                                                _2529 = mem[(32 * idx) + mem[256] + 32]
                                                _2530 = mem[288]
                                                _2531 = mem[224]
                                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _2529
                                                mem[mem[64] + 36] = _2530
                                                mem[mem[64] + 68] = 160
                                                _2585 = mem[_2531]
                                                mem[mem[64] + 164] = mem[_2531]
                                                idx = 0
                                                t = _2531 + 32
                                                u = mem[64] + 196
                                                while idx < _2585:
                                                    mem[u] = mem[t + 12 len 20]
                                                    _1540 = mem[mem[320]]
                                                    _2487 = mem[352]
                                                    idx = idx + 1
                                                    t = t + 32
                                                    u = u + 32
                                                    continue 
                                                mem[mem[64] + 100] = address(_1623)
                                                mem[mem[64] + 132] = block.timestamp
                                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args _2529, _2530, 160, address(_1623), block.timestamp, mem[mem[64] + 164 len (32 * _2585) + 32]
                                                if not ext_call.success:
                                                _3541 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3554 = mem[_3541]
                                                require mem[_3541] <= test266151307()
                                                require _3541 + mem[_3541] + 31 < _3541 + return_data.size
                                                _3581 = mem[_3541 + mem[_3541]]
                                                if mem[_3541 + mem[_3541]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _3541 + ceil32(return_data.size) + floor32(mem[_3541 + mem[_3541]]) + 1 > test266151307() or floor32(mem[_3541 + mem[_3541]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _3541 + ceil32(return_data.size) + floor32(mem[_3541 + mem[_3541]]) + 1
                                                mem[_3541 + ceil32(return_data.size)] = _3581
                                                require _3554 + (32 * _3581) + 32 <= return_data.size
                                                idx = _3541 + _3554 + 32
                                                t = _3541 + ceil32(return_data.size) + 32
                                                while idx < _3541 + _3554 + (32 * _3581) + 32:
                                                    require mem[idx] == mem[idx]
                                                    mem[t] = mem[idx]
                                                    _1540 = mem[mem[320]]
                                                    _2487 = mem[352]
                                                    idx = idx + 32
                                                    t = t + 32
                                                    continue 
                                                if s == -1:
                                                    revert with 'NH{q', 17
                                                _1540 = mem[mem[320]]
                                                _2487 = mem[352]
                                                s = s + 1
                                                continue 
                                            if idx == -1:
                                                revert with 'NH{q', 17
                                            _1540 = mem[mem[320]]
                                            idx = idx + 1
                                            continue 
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 1
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'T'
                    else:
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                        idx = 0
                        while idx < stor3[arg1].field_1024:
                            if idx >= stor3[arg1].field_1024:
                                revert with 'NH{q', 50
                            if stor3[arg1].field_1024 < 1:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 - 1 < idx:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                revert with 'NH{q', 50
                            mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                        call address(_74).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_768, ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                        idx = 0
                        s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                        t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                        while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                        emit 0x20343ec1: ext_call.return_data[0], 0
                        if 0 > stor3[arg1].field_512:
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 4
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'Rpwf'
                        else:
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 4
                                mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'Wut?'
                            else:
                                if block.number < stor3[arg1].field_2304:
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 1
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'B'
                                else:
                                    if block.timestamp >= stor3[arg1].field_2560:
                                        _1542 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                                        idx = 0
                                        while idx < _1542:
                                            if idx >= mem[mem[320]]:
                                                revert with 'NH{q', 50
                                            _1624 = mem[(32 * idx) + mem[320] + 32]
                                            _2488 = mem[352]
                                            s = 0
                                            while s < _2488:
                                                if idx >= mem[mem[256]]:
                                                    revert with 'NH{q', 50
                                                _2533 = mem[(32 * idx) + mem[256] + 32]
                                                _2534 = mem[288]
                                                _2535 = mem[224]
                                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _2533
                                                mem[mem[64] + 36] = _2534
                                                mem[mem[64] + 68] = 160
                                                _2586 = mem[_2535]
                                                mem[mem[64] + 164] = mem[_2535]
                                                idx = 0
                                                t = _2535 + 32
                                                u = mem[64] + 196
                                                while idx < _2586:
                                                    mem[u] = mem[t + 12 len 20]
                                                    _1542 = mem[mem[320]]
                                                    _2488 = mem[352]
                                                    idx = idx + 1
                                                    t = t + 32
                                                    u = u + 32
                                                    continue 
                                                mem[mem[64] + 100] = address(_1624)
                                                mem[mem[64] + 132] = block.timestamp
                                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args _2533, _2534, 160, address(_1624), block.timestamp, mem[mem[64] + 164 len (32 * _2586) + 32]
                                                if not ext_call.success:
                                                _3542 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3556 = mem[_3542]
                                                require mem[_3542] <= test266151307()
                                                require _3542 + mem[_3542] + 31 < _3542 + return_data.size
                                                _3582 = mem[_3542 + mem[_3542]]
                                                if mem[_3542 + mem[_3542]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _3542 + ceil32(return_data.size) + floor32(mem[_3542 + mem[_3542]]) + 1 > test266151307() or floor32(mem[_3542 + mem[_3542]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _3542 + ceil32(return_data.size) + floor32(mem[_3542 + mem[_3542]]) + 1
                                                mem[_3542 + ceil32(return_data.size)] = _3582
                                                require _3556 + (32 * _3582) + 32 <= return_data.size
                                                idx = _3542 + _3556 + 32
                                                t = _3542 + ceil32(return_data.size) + 32
                                                while idx < _3542 + _3556 + (32 * _3582) + 32:
                                                    require mem[idx] == mem[idx]
                                                    mem[t] = mem[idx]
                                                    _1542 = mem[mem[320]]
                                                    _2488 = mem[352]
                                                    idx = idx + 32
                                                    t = t + 32
                                                    continue 
                                                if s == -1:
                                                    revert with 'NH{q', 17
                                                _1542 = mem[mem[320]]
                                                _2488 = mem[352]
                                                s = s + 1
                                                continue 
                                            if idx == -1:
                                                revert with 'NH{q', 17
                                            _1542 = mem[mem[320]]
                                            idx = idx + 1
                                            continue 
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = 32
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 1
                                    mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 'T'
                    revert with memory
                      from (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                       len (7 * ceil32(return_data.size)) + 100
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                mem[352] = stor3[arg1].field_2048
                mem[384] = stor3[arg1].field_2304
                mem[416] = stor3[arg1].field_2560
                if bool(stor1[address(msg.sender)]) != 1:
                    revert with 0, 'Wut?'
                if block.number < stor3[arg1].field_2304:
                    revert with 0, 'B'
                if block.timestamp < stor3[arg1].field_2560:
                    revert with 0, 'T'
                if sub_362b426d > 2:
                    revert with 'NH{q', 33
                if sub_362b426d == 1:
                    revert with 0, 'Woot: rpmn!'
                if sub_362b426d > 2:
                    revert with 'NH{q', 33
                if sub_362b426d == 2:
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    idx = 0
                    while idx < stor3[arg1].field_1792:
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1547 = mem[352]
                        s = 0
                        while s < _1547:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1632 = mem[(32 * idx) + mem[256] + 32]
                            _1633 = mem[288]
                            _1634 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1632
                            mem[mem[64] + 36] = _1633
                            mem[mem[64] + 68] = 160
                            _1786 = mem[_1634]
                            mem[mem[64] + 164] = mem[_1634]
                            idx = 0
                            t = _1634 + 32
                            u = mem[64] + 196
                            while idx < _1786:
                                mem[u] = mem[t + 12 len 20]
                                _1547 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1632, _1633, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1786) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2624 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2624 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2624 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2624 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1547 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1547 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    if 0 >= stor3[arg1].field_1024:
                        revert with 'NH{q', 50
                    if stor3[arg1].field_1024 < 1:
                        revert with 'NH{q', 17
                    if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                        revert with 'NH{q', 50
                    _537 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                    staticcall mem[492 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                    idx = 0
                    s = 480
                    t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                    while idx < stor3[arg1].field_1024:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                    require ext_code.size(stor3[arg1].field_768)
                    call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                    staticcall address(_537).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if stor3[arg1].field_1024 > test266151307():
                        revert with 'NH{q', 65
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                    if not stor3[arg1].field_1024:
                        idx = 0
                        while idx < stor3[arg1].field_1024:
                            if idx >= stor3[arg1].field_1024:
                                revert with 'NH{q', 50
                            if stor3[arg1].field_1024 < 1:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 - 1 < idx:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                revert with 'NH{q', 50
                            mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                        call address(_537).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_768, ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                        idx = 0
                        s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                        t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                        while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                        emit 0x20343ec1: ext_call.return_data[0], 0
                        if 0 > stor3[arg1].field_512:
                            revert with 0, 'Rpwf'
                        sub_362b426d = 2
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        _3312 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                        idx = 0
                        while idx < _3312:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _3407 = mem[(32 * idx) + mem[320] + 32]
                            _4054 = mem[352]
                            s = 0
                            while s < _4054:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4094 = mem[(32 * idx) + mem[256] + 32]
                                _4095 = mem[288]
                                _4096 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4094
                                mem[mem[64] + 36] = _4095
                                mem[mem[64] + 68] = 160
                                _4136 = mem[_4096]
                                mem[mem[64] + 164] = mem[_4096]
                                idx = 0
                                t = _4096 + 32
                                u = mem[64] + 196
                                while idx < _4136:
                                    mem[u] = mem[t + 12 len 20]
                                    _3312 = mem[mem[320]]
                                    _4054 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_3407)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4094, _4095, 160, address(_3407), block.timestamp, mem[mem[64] + 164 len (32 * _4136) + 32]
                                if not ext_call.success:
                                _4741 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4750 = mem[_4741]
                                require mem[_4741] <= test266151307()
                                require _4741 + mem[_4741] + 31 < _4741 + return_data.size
                                _4771 = mem[_4741 + mem[_4741]]
                                if mem[_4741 + mem[_4741]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4741 + ceil32(return_data.size) + floor32(mem[_4741 + mem[_4741]]) + 1 > test266151307() or floor32(mem[_4741 + mem[_4741]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4741 + ceil32(return_data.size) + floor32(mem[_4741 + mem[_4741]]) + 1
                                mem[_4741 + ceil32(return_data.size)] = _4771
                                require _4750 + (32 * _4771) + 32 <= return_data.size
                                idx = _4741 + _4750 + 32
                                t = _4741 + ceil32(return_data.size) + 32
                                while idx < _4741 + _4750 + (32 * _4771) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3312 = mem[mem[320]]
                                    _4054 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3312 = mem[mem[320]]
                                _4054 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[mem[320]]
                            idx = idx + 1
                            continue 
                    else:
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                        idx = 0
                        while idx < stor3[arg1].field_1024:
                            if idx >= stor3[arg1].field_1024:
                                revert with 'NH{q', 50
                            if stor3[arg1].field_1024 < 1:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 - 1 < idx:
                                revert with 'NH{q', 17
                            if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                revert with 'NH{q', 50
                            mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                        call address(_537).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_768, ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                        idx = 0
                        s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                        t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                        while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                        mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                        emit 0x20343ec1: ext_call.return_data[0], 0
                        if 0 > stor3[arg1].field_512:
                            revert with 0, 'Rpwf'
                        sub_362b426d = 2
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        _3314 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                        idx = 0
                        while idx < _3314:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _3408 = mem[(32 * idx) + mem[320] + 32]
                            _4055 = mem[352]
                            s = 0
                            while s < _4055:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4098 = mem[(32 * idx) + mem[256] + 32]
                                _4099 = mem[288]
                                _4100 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4098
                                mem[mem[64] + 36] = _4099
                                mem[mem[64] + 68] = 160
                                _4137 = mem[_4100]
                                mem[mem[64] + 164] = mem[_4100]
                                idx = 0
                                t = _4100 + 32
                                u = mem[64] + 196
                                while idx < _4137:
                                    mem[u] = mem[t + 12 len 20]
                                    _3314 = mem[mem[320]]
                                    _4055 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_3408)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4098, _4099, 160, address(_3408), block.timestamp, mem[mem[64] + 164 len (32 * _4137) + 32]
                                if not ext_call.success:
                                _4742 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4752 = mem[_4742]
                                require mem[_4742] <= test266151307()
                                require _4742 + mem[_4742] + 31 < _4742 + return_data.size
                                _4772 = mem[_4742 + mem[_4742]]
                                if mem[_4742 + mem[_4742]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4742 + ceil32(return_data.size) + floor32(mem[_4742 + mem[_4742]]) + 1 > test266151307() or floor32(mem[_4742 + mem[_4742]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4742 + ceil32(return_data.size) + floor32(mem[_4742 + mem[_4742]]) + 1
                                mem[_4742 + ceil32(return_data.size)] = _4772
                                require _4752 + (32 * _4772) + 32 <= return_data.size
                                idx = _4742 + _4752 + 32
                                t = _4742 + ceil32(return_data.size) + 32
                                while idx < _4742 + _4752 + (32 * _4772) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3314 = mem[mem[320]]
                                    _4055 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                _4055 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            _3314 = mem[mem[320]]
                            idx = idx + 1
                            continue 
            else:
                mem[(32 * stor3[arg1].field_1024) + 512] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
                idx = (32 * stor3[arg1].field_1024) + 512
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 480 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _975 = mem[(32 * idx) + mem[320] + 32]
                            _1552 = mem[352]
                            s = 0
                            while s < _1552:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1642 = mem[(32 * idx) + mem[256] + 32]
                                _1643 = mem[288]
                                _1644 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1642
                                mem[mem[64] + 36] = _1643
                                mem[mem[64] + 68] = 160
                                _1789 = mem[_1644]
                                mem[mem[64] + 164] = mem[_1644]
                                idx = 0
                                t = _1644 + 32
                                u = mem[64] + 196
                                while idx < _1789:
                                    mem[u] = mem[t + 12 len 20]
                                    _1552 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_975)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1642, _1643, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1789) + 32]
                                if not ext_call.success:
                                _2603 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2603]
                                require mem[_2603] <= test266151307()
                                require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                                _2636 = mem[_2603 + mem[_2603]]
                                if mem[_2603 + mem[_2603]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                                mem[_2603 + ceil32(return_data.size)] = _2636
                                require _2626 + (32 * _2636) + 32 <= return_data.size
                                idx = _2603 + _2626 + 32
                                t = _2603 + ceil32(return_data.size) + 32
                                while idx < _2603 + _2626 + (32 * _2636) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1552 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1552 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _551 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_551).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_551).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _3316 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4102 = mem[(32 * idx) + mem[256] + 32]
                                    _4103 = mem[288]
                                    _4104 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4102
                                    mem[mem[64] + 36] = _4103
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4104]
                                    mem[mem[64] + 164] = mem[_4104]
                                    idx = 0
                                    t = _4104 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3410)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4102, _4103, 160, address(_3410), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4754 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4754 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4754 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_551).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _3318 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3411 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4106 = mem[(32 * idx) + mem[256] + 32]
                                    _4107 = mem[288]
                                    _4108 = mem[224]
                                    _4109 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4106
                                    mem[mem[64] + 36] = _4107
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4108]
                                    mem[mem[64] + 164] = mem[_4108]
                                    idx = 0
                                    t = _4108 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4109 + 100] = address(_3411)
                                    mem[_4109 + 132] = block.timestamp
                                    call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4109 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4756 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4756 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4756 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2537 = mem[(32 * idx) + mem[320] + 32]
                            _3323 = mem[352]
                            s = 0
                            while s < _3323:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3419 = mem[(32 * idx) + mem[256] + 32]
                                _3420 = mem[288]
                                _3421 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3419
                                mem[mem[64] + 36] = _3420
                                mem[mem[64] + 68] = 160
                                _3532 = mem[_3421]
                                mem[mem[64] + 164] = mem[_3421]
                                idx = 0
                                t = _3421 + 32
                                u = mem[64] + 196
                                while idx < _3532:
                                    mem[u] = mem[t + 12 len 20]
                                    _3323 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2537)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3419, _3420, 160, address(_2537), block.timestamp, mem[mem[64] + 164 len (32 * _3532) + 32]
                                if not ext_call.success:
                                _4155 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4173 = mem[_4155]
                                require mem[_4155] <= test266151307()
                                require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                                _4182 = mem[_4155 + mem[_4155]]
                                if mem[_4155 + mem[_4155]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                                mem[_4155 + ceil32(return_data.size)] = _4182
                                require _4173 + (32 * _4182) + 32 <= return_data.size
                                idx = _4155 + _4173 + 32
                                t = _4155 + ceil32(return_data.size) + 32
                                while idx < _4155 + _4173 + (32 * _4182) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3323 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3323 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _1850 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1850).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1850).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4617 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4617:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4670 = mem[(32 * idx) + mem[320] + 32]
                                _4943 = mem[352]
                                s = 0
                                while s < _4943:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4969 = mem[(32 * idx) + mem[256] + 32]
                                    _4970 = mem[288]
                                    _4971 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4969
                                    mem[mem[64] + 36] = _4970
                                    mem[mem[64] + 68] = 160
                                    _4996 = mem[_4971]
                                    mem[mem[64] + 164] = mem[_4971]
                                    idx = 0
                                    t = _4971 + 32
                                    u = mem[64] + 196
                                    while idx < _4996:
                                        mem[u] = mem[t + 12 len 20]
                                        _4617 = mem[mem[320]]
                                        _4943 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4670)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4969, _4970, 160, address(_4670), block.timestamp, mem[mem[64] + 164 len (32 * _4996) + 32]
                                    if not ext_call.success:
                                    _5183 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5190 = mem[_5183]
                                    require mem[_5183] <= test266151307()
                                    require _5183 + mem[_5183] + 31 < _5183 + return_data.size
                                    _5203 = mem[_5183 + mem[_5183]]
                                    if mem[_5183 + mem[_5183]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5183 + ceil32(return_data.size) + floor32(mem[_5183 + mem[_5183]]) + 1 > test266151307() or floor32(mem[_5183 + mem[_5183]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5183 + ceil32(return_data.size) + floor32(mem[_5183 + mem[_5183]]) + 1
                                    mem[_5183 + ceil32(return_data.size)] = _5203
                                    require _5190 + (32 * _5203) + 32 <= return_data.size
                                    idx = _5183 + _5190 + 32
                                    t = _5183 + ceil32(return_data.size) + 32
                                    while idx < _5183 + _5190 + (32 * _5203) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4617 = mem[mem[320]]
                                        _4943 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4617 = mem[mem[320]]
                                    _4943 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4617 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1850).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4619 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4671 = mem[(32 * idx) + mem[320] + 32]
                                _4944 = mem[352]
                                s = 0
                                while s < _4944:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4973 = mem[(32 * idx) + mem[256] + 32]
                                    _4974 = mem[288]
                                    _4975 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4973
                                    mem[mem[64] + 36] = _4974
                                    mem[mem[64] + 68] = 160
                                    _4997 = mem[_4975]
                                    mem[mem[64] + 164] = mem[_4975]
                                    idx = 0
                                    t = _4975 + 32
                                    u = mem[64] + 196
                                    while idx < _4997:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4944 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4671)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4973, _4974, 160, address(_4671), block.timestamp, mem[mem[64] + 164 len (32 * _4997) + 32]
                                    if not ext_call.success:
                                    _5184 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5184]
                                    require mem[_5184] <= test266151307()
                                    require _5184 + mem[_5184] + 31 < _5184 + return_data.size
                                    _5204 = mem[_5184 + mem[_5184]]
                                    if mem[_5184 + mem[_5184]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5184 + ceil32(return_data.size) + floor32(mem[_5184 + mem[_5184]]) + 1 > test266151307() or floor32(mem[_5184 + mem[_5184]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5184 + ceil32(return_data.size) + floor32(mem[_5184 + mem[_5184]]) + 1
                                    mem[_5184 + ceil32(return_data.size)] = _5204
                                    require _5192 + (32 * _5204) + 32 <= return_data.size
                                    idx = _5184 + _5192 + 32
                                    t = _5184 + ceil32(return_data.size) + 32
                                    while idx < _5184 + _5192 + (32 * _5204) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4944 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4944 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_0
            idx = 480
            s = 0
            while (32 * stor3[arg1].field_1024) + 448 > idx:
                mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 4)].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * stor3[arg1].field_1024) + 480] = stor3[arg1].field_1280
            if not stor3[arg1].field_1280:
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1557 = mem[352]
                            s = 0
                            while s < _1557:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1654 = mem[(32 * idx) + mem[256] + 32]
                                _1655 = mem[288]
                                _1656 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1654
                                mem[mem[64] + 36] = _1655
                                mem[mem[64] + 68] = 160
                                _1794 = mem[_1656]
                                mem[mem[64] + 164] = mem[_1656]
                                idx = 0
                                t = _1656 + 32
                                u = mem[64] + 196
                                while idx < _1794:
                                    mem[u] = mem[t + 12 len 20]
                                    _1557 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1654, _1655, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1794) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2629 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2629 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2629 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2629 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1557 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1557 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _564 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_564).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_564).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _3325 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _3325:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3423 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4110 = mem[(32 * idx) + mem[256] + 32]
                                    _4111 = mem[288]
                                    _4112 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4110
                                    mem[mem[64] + 36] = _4111
                                    mem[mem[64] + 68] = 160
                                    _4143 = mem[_4112]
                                    mem[mem[64] + 164] = mem[_4112]
                                    idx = 0
                                    t = _4112 + 32
                                    u = mem[64] + 196
                                    while idx < _4143:
                                        mem[u] = mem[t + 12 len 20]
                                        _3325 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3423)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4110, _4111, 160, address(_3423), block.timestamp, mem[mem[64] + 164 len (32 * _4143) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4760 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4760 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4760 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4760 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3325 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3325 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_564).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _3327 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3424 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4114 = mem[(32 * idx) + mem[256] + 32]
                                    _4115 = mem[288]
                                    _4116 = mem[224]
                                    _4117 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4114
                                    mem[mem[64] + 36] = _4115
                                    mem[mem[64] + 68] = 160
                                    _4144 = mem[_4116]
                                    mem[mem[64] + 164] = mem[_4116]
                                    idx = 0
                                    t = _4116 + 32
                                    u = mem[64] + 196
                                    while idx < _4144:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4117 + 100] = address(_3424)
                                    mem[_4117 + 132] = block.timestamp
                                    call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4117 + (32 * _4144) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4762 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4762 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4762 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2538 = mem[(32 * idx) + mem[320] + 32]
                            _3332 = mem[352]
                            s = 0
                            while s < _3332:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3432 = mem[(32 * idx) + mem[256] + 32]
                                _3433 = mem[288]
                                _3434 = mem[224]
                                _3435 = mem[64]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3432
                                mem[mem[64] + 36] = _3433
                                mem[mem[64] + 68] = 160
                                _3535 = mem[_3434]
                                mem[mem[64] + 164] = mem[_3434]
                                idx = 0
                                t = _3434 + 32
                                u = mem[64] + 196
                                while idx < _3535:
                                    mem[u] = mem[t + 12 len 20]
                                    _3332 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_3435 + 100] = address(_2538)
                                mem[_3435 + 132] = block.timestamp
                                call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _3435 + (32 * _3535) + -mem[64] + 192]
                                if not ext_call.success:
                                _4156 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4156]
                                require mem[_4156] <= test266151307()
                                require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                                _4183 = mem[_4156 + mem[_4156]]
                                if mem[_4156 + mem[_4156]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                                mem[_4156 + ceil32(return_data.size)] = _4183
                                require _4175 + (32 * _4183) + 32 <= return_data.size
                                idx = _4156 + _4175 + 32
                                t = _4156 + ceil32(return_data.size) + 32
                                while idx < _4156 + _4175 + (32 * _4183) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3332 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3332 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _1854 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_256, 0, 160, address(this.address), block.timestamp, stor3[arg1].field_1024, mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740 len 32 * stor3[arg1].field_1024]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1854).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1854).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4621 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4979 = mem[(32 * idx) + mem[256] + 32]
                                    _4980 = mem[288]
                                    _4981 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4979
                                    mem[mem[64] + 36] = _4980
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4981]
                                    mem[mem[64] + 164] = mem[_4981]
                                    idx = 0
                                    t = _4981 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4979, _4980, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5194 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5194 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5194 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1854).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4623 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4674 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4983 = mem[(32 * idx) + mem[256] + 32]
                                    _4984 = mem[288]
                                    _4985 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4983
                                    mem[mem[64] + 36] = _4984
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4985]
                                    mem[mem[64] + 164] = mem[_4985]
                                    idx = 0
                                    t = _4985 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4674)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4983, _4984, 160, address(_4674), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5196 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5196 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5196 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * stor3[arg1].field_1024) + 512] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_0
                idx = (32 * stor3[arg1].field_1024) + 512
                s = 0
                while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 480 > idx:
                    mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 5)].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * stor3[arg1].field_1024) + 480
                mem[288] = stor3[arg1].field_1536
                mem[64] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544
                mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512] = stor3[arg1].field_1792
                if not stor3[arg1].field_1792:
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3337 = mem[352]
                            s = 0
                            while s < _3337:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3442 = mem[(32 * idx) + mem[256] + 32]
                                _3443 = mem[288]
                                _3444 = mem[224]
                                _3445 = mem[64]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3442
                                mem[mem[64] + 36] = _3443
                                mem[mem[64] + 68] = 160
                                _3538 = mem[_3444]
                                mem[mem[64] + 164] = mem[_3444]
                                idx = 0
                                t = _3444 + 32
                                u = mem[64] + 196
                                while idx < _3538:
                                    mem[u] = mem[t + 12 len 20]
                                    _3337 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_3445 + 100] = address(_2539)
                                mem[_3445 + 132] = block.timestamp
                                call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _3445 + (32 * _3538) + -mem[64] + 192]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4177 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4177 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4177 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3337 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3337 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _1876 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args stor3[arg1].field_256, 0, 160, address(this.address), block.timestamp, stor3[arg1].field_1024, mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740 len 32 * stor3[arg1].field_1024]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1876).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1876).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4625 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4987 = mem[(32 * idx) + mem[256] + 32]
                                    _4988 = mem[288]
                                    _4989 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4987
                                    mem[mem[64] + 36] = _4988
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4989]
                                    mem[mem[64] + 164] = mem[_4989]
                                    idx = 0
                                    t = _4989 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4987, _4988, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5198 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5198 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5198 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1876).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _4627 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4677 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4991 = mem[(32 * idx) + mem[256] + 32]
                                    _4992 = mem[288]
                                    _4993 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4991
                                    mem[mem[64] + 36] = _4992
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4993]
                                    mem[mem[64] + 164] = mem[_4993]
                                    idx = 0
                                    t = _4993 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4677)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4991, _4992, 160, address(_4677), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5200 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5200 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5200 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544] = stor[sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_0
                    idx = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 544
                    s = 0
                    while (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 512 > idx:
                        mem[idx + 32] = stor[s + sha3((11 * arg1) + ('name', 'stor3', 3) + 7)].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512
                    mem[352] = stor3[arg1].field_2048
                    mem[384] = stor3[arg1].field_2304
                    mem[416] = stor3[arg1].field_2560
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < stor3[arg1].field_2304:
                        revert with 0, 'B'
                    if block.timestamp < stor3[arg1].field_2560:
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < stor3[arg1].field_2304:
                            revert with 0, 'B'
                        if block.timestamp < stor3[arg1].field_2560:
                            revert with 0, 'T'
                        idx = 0
                        while idx < stor3[arg1].field_1792:
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4118 = mem[(32 * idx) + mem[320] + 32]
                            _4632 = mem[352]
                            s = 0
                            while s < _4632:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4685 = mem[(32 * idx) + mem[256] + 32]
                                _4686 = mem[288]
                                _4687 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4685
                                mem[mem[64] + 36] = _4686
                                mem[mem[64] + 68] = 160
                                _4740 = mem[_4687]
                                mem[mem[64] + 164] = mem[_4687]
                                idx = 0
                                t = _4687 + 32
                                u = mem[64] + 196
                                while idx < _4740:
                                    mem[u] = mem[t + 12 len 20]
                                    _4632 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4118)
                                mem[mem[64] + 132] = block.timestamp
                                call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4685, _4686, 160, address(_4118), block.timestamp, mem[mem[64] + 164 len (32 * _4740) + 32]
                                if not ext_call.success:
                                _5006 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5012 = mem[_5006]
                                require mem[_5006] <= test266151307()
                                require _5006 + mem[_5006] + 31 < _5006 + return_data.size
                                _5014 = mem[_5006 + mem[_5006]]
                                if mem[_5006 + mem[_5006]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5006 + ceil32(return_data.size) + floor32(mem[_5006 + mem[_5006]]) + 1 > test266151307() or floor32(mem[_5006 + mem[_5006]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5006 + ceil32(return_data.size) + floor32(mem[_5006 + mem[_5006]]) + 1
                                mem[_5006 + ceil32(return_data.size)] = _5014
                                require _5012 + (32 * _5014) + 32 <= return_data.size
                                idx = _5006 + _5012 + 32
                                t = _5006 + ceil32(return_data.size) + 32
                                while idx < _5006 + _5012 + (32 * _5014) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4632 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4632 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        if stor3[arg1].field_1024 < 1:
                            revert with 'NH{q', 17
                        if stor3[arg1].field_1024 - 1 >= stor3[arg1].field_1024:
                            revert with 'NH{q', 50
                        _3583 = mem[(32 * stor3[arg1].field_1024 - 1) + 480]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = stor3[arg1].field_256
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 708] = stor3[arg1].field_1024
                        idx = 0
                        s = 480
                        t = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 740
                        while idx < stor3[arg1].field_1024:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(stor3[arg1].field_768)
                        call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548 len (96 * stor3[arg1].field_1024) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_3583).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if stor3[arg1].field_1024 > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544] = stor3[arg1].field_1024
                        if not stor3[arg1].field_1024:
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3583).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _5146 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _5146:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5160 = mem[(32 * idx) + mem[320] + 32]
                                _5237 = mem[352]
                                s = 0
                                while s < _5237:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5249 = mem[(32 * idx) + mem[256] + 32]
                                    _5250 = mem[288]
                                    _5251 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5249
                                    mem[mem[64] + 36] = _5250
                                    mem[mem[64] + 68] = 160
                                    _5257 = mem[_5251]
                                    mem[mem[64] + 164] = mem[_5251]
                                    idx = 0
                                    t = _5251 + 32
                                    u = mem[64] + 196
                                    while idx < _5257:
                                        mem[u] = mem[t + 12 len 20]
                                        _5146 = mem[mem[320]]
                                        _5237 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5160)
                                    mem[mem[64] + 132] = block.timestamp
                                    call stor3[arg1].field_768.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5249, _5250, 160, address(_5160), block.timestamp, mem[mem[64] + 164 len (32 * _5257) + 32]
                                    if not ext_call.success:
                                    _5279 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5282 = mem[_5279]
                                    require mem[_5279] <= test266151307()
                                    require _5279 + mem[_5279] + 31 < _5279 + return_data.size
                                    _5285 = mem[_5279 + mem[_5279]]
                                    if mem[_5279 + mem[_5279]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5279 + ceil32(return_data.size) + floor32(mem[_5279 + mem[_5279]]) + 1 > test266151307() or floor32(mem[_5279 + mem[_5279]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5279 + ceil32(return_data.size) + floor32(mem[_5279 + mem[_5279]]) + 1
                                    mem[_5279 + ceil32(return_data.size)] = _5285
                                    require _5282 + (32 * _5285) + 32 <= return_data.size
                                    idx = _5279 + _5282 + 32
                                    t = _5279 + ceil32(return_data.size) + 32
                                    while idx < _5279 + _5282 + (32 * _5285) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5146 = mem[mem[320]]
                                        _5237 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5146 = mem[mem[320]]
                                    _5237 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5146 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576 len 32 * stor3[arg1].field_1024] = call.data[calldata.size len 32 * stor3[arg1].field_1024]
                            idx = 0
                            while idx < stor3[arg1].field_1024:
                                if idx >= stor3[arg1].field_1024:
                                    revert with 'NH{q', 50
                                if stor3[arg1].field_1024 < 1:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 - 1 < idx:
                                    revert with 'NH{q', 17
                                if stor3[arg1].field_1024 + -idx - 1 >= mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * stor3[arg1].field_1024 + -idx - 1) + (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 580] = stor3[arg1].field_768
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3583).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args stor3[arg1].field_768, ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(stor3[arg1].field_768)
                            call stor3[arg1].field_768.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + (32 * stor3[arg1].field_1792) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > stor3[arg1].field_512:
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < stor3[arg1].field_2304:
                                revert with 0, 'B'
                            if block.timestamp < stor3[arg1].field_2560:
                                revert with 0, 'T'
                            _5148 = mem[(32 * stor3[arg1].field_1024) + (32 * stor3[arg1].field_1280) + 512]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5161 = mem[(32 * idx) + mem[320] + 32]
                                _5238 = mem[352]
                                s = 0
                                while s < _5238:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5253 = mem[(32 * idx) + mem[256] + 32]
                                    _5254 = mem[288]
                                    _5255 = mem[224]
                                    _5256 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5253
                                    mem[mem[64] + 36] = _5254
                                    mem[mem[64] + 68] = 160
                                    _5258 = mem[_5255]
                                    mem[mem[64] + 164] = mem[_5255]
                                    idx = 0
                                    t = _5255 + 32
                                    u = mem[64] + 196
                                    while idx < _5258:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5238 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5256 + 100] = address(_5161)
                                    mem[_5256 + 132] = block.timestamp
                                    call stor3[arg1].field_768.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5256 + (32 * _5258) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5280 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5280]
                                    require mem[_5280] <= test266151307()
                                    require _5280 + mem[_5280] + 31 < _5280 + return_data.size
                                    _5286 = mem[_5280 + mem[_5280]]
                                    if mem[_5280 + mem[_5280]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5280 + ceil32(return_data.size) + floor32(mem[_5280 + mem[_5280]]) + 1 > test266151307() or floor32(mem[_5280 + mem[_5280]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5280 + ceil32(return_data.size) + floor32(mem[_5280 + mem[_5280]]) + 1
                                    mem[_5280 + ceil32(return_data.size)] = _5286
                                    require _5284 + (32 * _5286) + 32 <= return_data.size
                                    idx = _5280 + _5284 + 32
                                    t = _5280 + ceil32(return_data.size) + 32
                                    while idx < _5280 + _5284 + (32 * _5286) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5238 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5238 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}

function sub_e2da6a5f(?) payable {
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if 0 >= stor3.length:
        revert with 'NH{q', 50
    if 0 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(uint8(stor3.field_0))
    mem[128] = uint256(stor3.field_256)
    mem[160] = uint256(stor3.field_512)
    mem[192] = address(stor3.field_768)
    mem[448] = uint256(stor3.field_1024)
    if not uint8(stor3.field_0):
        if not uint256(stor3.field_1024):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_1024)) + 480] = uint256(stor3.field_1280)
            if not uint256(stor3.field_1280):
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _175 = mem[(32 * idx) + mem[320] + 32]
                        _331 = mem[352]
                        s = 0
                        while s < _331:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _361 = mem[(32 * idx) + mem[256] + 32]
                            _362 = mem[288]
                            _363 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _361
                            mem[mem[64] + 36] = _362
                            mem[mem[64] + 68] = 160
                            _483 = mem[_363]
                            mem[mem[64] + 164] = mem[_363]
                            idx = 0
                            t = _363 + 32
                            u = mem[64] + 196
                            while idx < _483:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_175)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _361, _362, 160, address(_175), block.timestamp, mem[mem[64] + 164 len (32 * _483) + 32]
                            if not ext_call.success:
                            _1028 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1036 = mem[_1028]
                            require mem[_1028] <= test266151307()
                            require _1028 + mem[_1028] + 31 < _1028 + return_data.size
                            _1045 = mem[_1028 + mem[_1028]]
                            if mem[_1028 + mem[_1028]] > test266151307():
                                revert with 'NH{q', 65
                            if _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1 > test266151307() or floor32(mem[_1028 + mem[_1028]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1
                            mem[_1028 + ceil32(return_data.size)] = _1045
                            require _1036 + (32 * _1045) + 32 <= return_data.size
                            idx = _1028 + _1036 + 32
                            t = _1028 + ceil32(return_data.size) + 32
                            while idx < _1028 + _1036 + (32 * _1045) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1608 = mem[(32 * idx) + mem[256] + 32]
                            _1609 = mem[288]
                            _1610 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1608
                            mem[mem[64] + 36] = _1609
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1610]
                            mem[mem[64] + 164] = mem[_1610]
                            idx = 0
                            t = _1610 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1608, _1609, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2617 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2617 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2617 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_1024)) + 512] = stor3[5].field_0
                idx = (32 * uint256(stor3.field_1024)) + 512
                s = 0
                while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 5].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1538 = mem[352]
                        s = 0
                        while s < _1538:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1612 = mem[(32 * idx) + mem[256] + 32]
                            _1613 = mem[288]
                            _1614 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1612
                            mem[mem[64] + 36] = _1613
                            mem[mem[64] + 68] = 160
                            _1783 = mem[_1614]
                            mem[mem[64] + 164] = mem[_1614]
                            idx = 0
                            t = _1614 + 32
                            u = mem[64] + 196
                            while idx < _1783:
                                mem[u] = mem[t + 12 len 20]
                                _1538 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1612, _1613, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1783) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2619 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2619 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2619 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2619 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1538 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1538 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3394 = mem[(32 * idx) + mem[256] + 32]
                            _3395 = mem[288]
                            _3396 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3394
                            mem[mem[64] + 36] = _3395
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3396]
                            mem[mem[64] + 164] = mem[_3396]
                            idx = 0
                            t = _3396 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3394, _3395, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4168 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4168 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4168 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor3[4].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_1024)) + 448 > idx:
                mem[idx + 32] = stor3[s + 4].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_1024)) + 480] = uint256(stor3.field_1280)
            if not uint256(stor3.field_1280):
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _975 = mem[(32 * idx) + mem[320] + 32]
                        _1539 = mem[352]
                        s = 0
                        while s < _1539:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1618 = mem[(32 * idx) + mem[256] + 32]
                            _1619 = mem[288]
                            _1620 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1618
                            mem[mem[64] + 36] = _1619
                            mem[mem[64] + 68] = 160
                            _1784 = mem[_1620]
                            mem[mem[64] + 164] = mem[_1620]
                            idx = 0
                            t = _1620 + 32
                            u = mem[64] + 196
                            while idx < _1784:
                                mem[u] = mem[t + 12 len 20]
                                _1539 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_975)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1618, _1619, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1784) + 32]
                            if not ext_call.success:
                            _2603 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2622 = mem[_2603]
                            require mem[_2603] <= test266151307()
                            require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                            _2636 = mem[_2603 + mem[_2603]]
                            if mem[_2603 + mem[_2603]] > test266151307():
                                revert with 'NH{q', 65
                            if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                            mem[_2603 + ceil32(return_data.size)] = _2636
                            require _2622 + (32 * _2636) + 32 <= return_data.size
                            idx = _2603 + _2622 + 32
                            t = _2603 + ceil32(return_data.size) + 32
                            while idx < _2603 + _2622 + (32 * _2636) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1539 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1539 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2529 = mem[(32 * idx) + mem[320] + 32]
                        _3311 = mem[352]
                        s = 0
                        while s < _3311:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3399 = mem[(32 * idx) + mem[256] + 32]
                            _3400 = mem[288]
                            _3401 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3399
                            mem[mem[64] + 36] = _3400
                            mem[mem[64] + 68] = 160
                            _3528 = mem[_3401]
                            mem[mem[64] + 164] = mem[_3401]
                            idx = 0
                            t = _3401 + 32
                            u = mem[64] + 196
                            while idx < _3528:
                                mem[u] = mem[t + 12 len 20]
                                _3311 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2529)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3399, _3400, 160, address(_2529), block.timestamp, mem[mem[64] + 164 len (32 * _3528) + 32]
                            if not ext_call.success:
                            _4155 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4155]
                            require mem[_4155] <= test266151307()
                            require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                            _4182 = mem[_4155 + mem[_4155]]
                            if mem[_4155 + mem[_4155]] > test266151307():
                                revert with 'NH{q', 65
                            if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                            mem[_4155 + ceil32(return_data.size)] = _4182
                            require _4170 + (32 * _4182) + 32 <= return_data.size
                            idx = _4155 + _4170 + 32
                            t = _4155 + ceil32(return_data.size) + 32
                            while idx < _4155 + _4170 + (32 * _4182) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3311 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3311 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_1024)) + 512] = stor3[5].field_0
                idx = (32 * uint256(stor3.field_1024)) + 512
                s = 0
                while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 5].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2530 = mem[(32 * idx) + mem[320] + 32]
                        _3312 = mem[352]
                        s = 0
                        while s < _3312:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3403 = mem[(32 * idx) + mem[256] + 32]
                            _3404 = mem[288]
                            _3405 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3403
                            mem[mem[64] + 36] = _3404
                            mem[mem[64] + 68] = 160
                            _3529 = mem[_3405]
                            mem[mem[64] + 164] = mem[_3405]
                            idx = 0
                            t = _3405 + 32
                            u = mem[64] + 196
                            while idx < _3529:
                                mem[u] = mem[t + 12 len 20]
                                _3312 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2530)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3403, _3404, 160, address(_2530), block.timestamp, mem[mem[64] + 164 len (32 * _3529) + 32]
                            if not ext_call.success:
                            _4156 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4172 = mem[_4156]
                            require mem[_4156] <= test266151307()
                            require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                            _4183 = mem[_4156 + mem[_4156]]
                            if mem[_4156 + mem[_4156]] > test266151307():
                                revert with 'NH{q', 65
                            if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                            mem[_4156 + ceil32(return_data.size)] = _4183
                            require _4172 + (32 * _4183) + 32 <= return_data.size
                            idx = _4156 + _4172 + 32
                            t = _4156 + ceil32(return_data.size) + 32
                            while idx < _4156 + _4172 + (32 * _4183) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3312 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_1792):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4093 = mem[(32 * idx) + mem[320] + 32]
                        _4617 = mem[352]
                        s = 0
                        while s < _4617:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4668 = mem[(32 * idx) + mem[256] + 32]
                            _4669 = mem[288]
                            _4670 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4668
                            mem[mem[64] + 36] = _4669
                            mem[mem[64] + 68] = 160
                            _4733 = mem[_4670]
                            mem[mem[64] + 164] = mem[_4670]
                            idx = 0
                            t = _4670 + 32
                            u = mem[64] + 196
                            while idx < _4733:
                                mem[u] = mem[t + 12 len 20]
                                _4617 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4093)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4668, _4669, 160, address(_4093), block.timestamp, mem[mem[64] + 164 len (32 * _4733) + 32]
                            if not ext_call.success:
                            _5007 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5012 = mem[_5007]
                            require mem[_5007] <= test266151307()
                            require _5007 + mem[_5007] + 31 < _5007 + return_data.size
                            _5015 = mem[_5007 + mem[_5007]]
                            if mem[_5007 + mem[_5007]] > test266151307():
                                revert with 'NH{q', 65
                            if _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1 > test266151307() or floor32(mem[_5007 + mem[_5007]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1
                            mem[_5007 + ceil32(return_data.size)] = _5015
                            require _5012 + (32 * _5015) + 32 <= return_data.size
                            idx = _5007 + _5012 + 32
                            t = _5007 + ceil32(return_data.size) + 32
                            while idx < _5007 + _5012 + (32 * _5015) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4617 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4617 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not uint256(stor3.field_1024):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_1024)) + 480] = uint256(stor3.field_1280)
            if not uint256(stor3.field_1280):
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _176 = mem[(32 * idx) + mem[320] + 32]
                            _338 = mem[352]
                            s = 0
                            while s < _338:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _375 = mem[(32 * idx) + mem[256] + 32]
                                _376 = mem[288]
                                _377 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _375
                                mem[mem[64] + 36] = _376
                                mem[mem[64] + 68] = 160
                                _488 = mem[_377]
                                mem[mem[64] + 164] = mem[_377]
                                idx = 0
                                t = _377 + 32
                                u = mem[64] + 196
                                while idx < _488:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_176)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _375, _376, 160, address(_176), block.timestamp, mem[mem[64] + 164 len (32 * _488) + 32]
                                if not ext_call.success:
                                _1029 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1041 = mem[_1029]
                                require mem[_1029] <= test266151307()
                                require _1029 + mem[_1029] + 31 < _1029 + return_data.size
                                _1046 = mem[_1029 + mem[_1029]]
                                if mem[_1029 + mem[_1029]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1 > test266151307() or floor32(mem[_1029 + mem[_1029]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1
                                mem[_1029 + ceil32(return_data.size)] = _1046
                                require _1041 + (32 * _1046) + 32 <= return_data.size
                                idx = _1029 + _1041 + 32
                                t = _1029 + ceil32(return_data.size) + 32
                                while idx < _1029 + _1041 + (32 * _1046) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _74 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_74).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _1542 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _1542:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1625 = mem[(32 * idx) + mem[320] + 32]
                                _2489 = mem[352]
                                s = 0
                                while s < _2489:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2531 = mem[(32 * idx) + mem[256] + 32]
                                    _2532 = mem[288]
                                    _2533 = mem[224]
                                    _2534 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2531
                                    mem[mem[64] + 36] = _2532
                                    mem[mem[64] + 68] = 160
                                    _2587 = mem[_2533]
                                    mem[mem[64] + 164] = mem[_2533]
                                    idx = 0
                                    t = _2533 + 32
                                    u = mem[64] + 196
                                    while idx < _2587:
                                        mem[u] = mem[t + 12 len 20]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2534 + 100] = address(_1625)
                                    mem[_2534 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2534 + (32 * _2587) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3543 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3556 = mem[_3543]
                                    require mem[_3543] <= test266151307()
                                    require _3543 + mem[_3543] + 31 < _3543 + return_data.size
                                    _3583 = mem[_3543 + mem[_3543]]
                                    if mem[_3543 + mem[_3543]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1 > test266151307() or floor32(mem[_3543 + mem[_3543]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1
                                    mem[_3543 + ceil32(return_data.size)] = _3583
                                    require _3556 + (32 * _3583) + 32 <= return_data.size
                                    idx = _3543 + _3556 + 32
                                    t = _3543 + ceil32(return_data.size) + 32
                                    while idx < _3543 + _3556 + (32 * _3583) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1542 = mem[mem[320]]
                                    _2489 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1542 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _1544 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _1544:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1626 = mem[(32 * idx) + mem[320] + 32]
                                _2490 = mem[352]
                                s = 0
                                while s < _2490:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2535 = mem[(32 * idx) + mem[256] + 32]
                                    _2536 = mem[288]
                                    _2537 = mem[224]
                                    _2538 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2535
                                    mem[mem[64] + 36] = _2536
                                    mem[mem[64] + 68] = 160
                                    _2588 = mem[_2537]
                                    mem[mem[64] + 164] = mem[_2537]
                                    idx = 0
                                    t = _2537 + 32
                                    u = mem[64] + 196
                                    while idx < _2588:
                                        mem[u] = mem[t + 12 len 20]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2538 + 100] = address(_1626)
                                    mem[_2538 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2538 + (32 * _2588) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3558 = mem[_3544]
                                    require mem[_3544] <= test266151307()
                                    require _3544 + mem[_3544] + 31 < _3544 + return_data.size
                                    _3584 = mem[_3544 + mem[_3544]]
                                    if mem[_3544 + mem[_3544]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1 > test266151307() or floor32(mem[_3544 + mem[_3544]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1
                                    mem[_3544 + ceil32(return_data.size)] = _3584
                                    require _3558 + (32 * _3584) + 32 <= return_data.size
                                    idx = _3544 + _3558 + 32
                                    t = _3544 + ceil32(return_data.size) + 32
                                    while idx < _3544 + _3558 + (32 * _3584) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1544 = mem[mem[320]]
                                    _2490 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1544 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1549 = mem[352]
                            s = 0
                            while s < _1549:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1634 = mem[(32 * idx) + mem[256] + 32]
                                _1635 = mem[288]
                                _1636 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1634
                                mem[mem[64] + 36] = _1635
                                mem[mem[64] + 68] = 160
                                _1788 = mem[_1636]
                                mem[mem[64] + 164] = mem[_1636]
                                idx = 0
                                t = _1636 + 32
                                u = mem[64] + 196
                                while idx < _1788:
                                    mem[u] = mem[t + 12 len 20]
                                    _1549 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1634, _1635, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1788) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2626 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2626 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2626 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1549 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1549 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _539 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_539).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3314 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3314:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3409 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4096 = mem[(32 * idx) + mem[256] + 32]
                                    _4097 = mem[288]
                                    _4098 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4096
                                    mem[mem[64] + 36] = _4097
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4098]
                                    mem[mem[64] + 164] = mem[_4098]
                                    idx = 0
                                    t = _4098 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3409)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4096, _4097, 160, address(_3409), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4752 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4752 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4752 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4752 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3314 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3316 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4100 = mem[(32 * idx) + mem[256] + 32]
                                    _4101 = mem[288]
                                    _4102 = mem[224]
                                    _4103 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4100
                                    mem[mem[64] + 36] = _4101
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4102]
                                    mem[mem[64] + 164] = mem[_4102]
                                    idx = 0
                                    t = _4102 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4103 + 100] = address(_3410)
                                    mem[_4103 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4103 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4754 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4754 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4754 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_1024)) + 512] = stor3[5].field_0
                idx = (32 * uint256(stor3.field_1024)) + 512
                s = 0
                while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 5].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _977 = mem[(32 * idx) + mem[320] + 32]
                            _1554 = mem[352]
                            s = 0
                            while s < _1554:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1644 = mem[(32 * idx) + mem[256] + 32]
                                _1645 = mem[288]
                                _1646 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1644
                                mem[mem[64] + 36] = _1645
                                mem[mem[64] + 68] = 160
                                _1791 = mem[_1646]
                                mem[mem[64] + 164] = mem[_1646]
                                idx = 0
                                t = _1646 + 32
                                u = mem[64] + 196
                                while idx < _1791:
                                    mem[u] = mem[t + 12 len 20]
                                    _1554 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_977)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1644, _1645, 160, address(_977), block.timestamp, mem[mem[64] + 164 len (32 * _1791) + 32]
                                if not ext_call.success:
                                _2605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2628 = mem[_2605]
                                require mem[_2605] <= test266151307()
                                require _2605 + mem[_2605] + 31 < _2605 + return_data.size
                                _2638 = mem[_2605 + mem[_2605]]
                                if mem[_2605 + mem[_2605]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1 > test266151307() or floor32(mem[_2605 + mem[_2605]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1
                                mem[_2605 + ceil32(return_data.size)] = _2638
                                require _2628 + (32 * _2638) + 32 <= return_data.size
                                idx = _2605 + _2628 + 32
                                t = _2605 + ceil32(return_data.size) + 32
                                while idx < _2605 + _2628 + (32 * _2638) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1554 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1554 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _553 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_553).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3318 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3412 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4104 = mem[(32 * idx) + mem[256] + 32]
                                    _4105 = mem[288]
                                    _4106 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4104
                                    mem[mem[64] + 36] = _4105
                                    mem[mem[64] + 68] = 160
                                    _4140 = mem[_4106]
                                    mem[mem[64] + 164] = mem[_4106]
                                    idx = 0
                                    t = _4106 + 32
                                    u = mem[64] + 196
                                    while idx < _4140:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3412)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4104, _4105, 160, address(_3412), block.timestamp, mem[mem[64] + 164 len (32 * _4140) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4756 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4756 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4756 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3320 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3320:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3413 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4108 = mem[(32 * idx) + mem[256] + 32]
                                    _4109 = mem[288]
                                    _4110 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4108
                                    mem[mem[64] + 36] = _4109
                                    mem[mem[64] + 68] = 160
                                    _4141 = mem[_4110]
                                    mem[mem[64] + 164] = mem[_4110]
                                    idx = 0
                                    t = _4110 + 32
                                    u = mem[64] + 196
                                    while idx < _4141:
                                        mem[u] = mem[t + 12 len 20]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3413)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4108, _4109, 160, address(_3413), block.timestamp, mem[mem[64] + 164 len (32 * _4141) + 32]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4758 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4758 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4758 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4758 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3320 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3320 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3325 = mem[352]
                            s = 0
                            while s < _3325:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3421 = mem[(32 * idx) + mem[256] + 32]
                                _3422 = mem[288]
                                _3423 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3421
                                mem[mem[64] + 36] = _3422
                                mem[mem[64] + 68] = 160
                                _3534 = mem[_3423]
                                mem[mem[64] + 164] = mem[_3423]
                                idx = 0
                                t = _3423 + 32
                                u = mem[64] + 196
                                while idx < _3534:
                                    mem[u] = mem[t + 12 len 20]
                                    _3325 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2539)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3421, _3422, 160, address(_2539), block.timestamp, mem[mem[64] + 164 len (32 * _3534) + 32]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4175 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4175 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4175 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3325 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _1852 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args uint256(stor3.field_256), 0, 160, address(this.address), block.timestamp, uint256(stor3.field_1024), mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740 len 32 * uint256(stor3.field_1024)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1852).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4619 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4672 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4971 = mem[(32 * idx) + mem[256] + 32]
                                    _4972 = mem[288]
                                    _4973 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4971
                                    mem[mem[64] + 36] = _4972
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4973]
                                    mem[mem[64] + 164] = mem[_4973]
                                    idx = 0
                                    t = _4973 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4672)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4971, _4972, 160, address(_4672), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5192 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5192 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5192 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4621 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4975 = mem[(32 * idx) + mem[256] + 32]
                                    _4976 = mem[288]
                                    _4977 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4975
                                    mem[mem[64] + 36] = _4976
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4977]
                                    mem[mem[64] + 164] = mem[_4977]
                                    idx = 0
                                    t = _4977 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4975, _4976, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5194 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5194 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5194 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor3[4].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_1024)) + 448 > idx:
                mem[idx + 32] = stor3[s + 4].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_1024)) + 480] = uint256(stor3.field_1280)
            if not uint256(stor3.field_1280):
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _978 = mem[(32 * idx) + mem[320] + 32]
                            _1559 = mem[352]
                            s = 0
                            while s < _1559:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1656 = mem[(32 * idx) + mem[256] + 32]
                                _1657 = mem[288]
                                _1658 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1656
                                mem[mem[64] + 36] = _1657
                                mem[mem[64] + 68] = 160
                                _1796 = mem[_1658]
                                mem[mem[64] + 164] = mem[_1658]
                                idx = 0
                                t = _1658 + 32
                                u = mem[64] + 196
                                while idx < _1796:
                                    mem[u] = mem[t + 12 len 20]
                                    _1559 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_978)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1656, _1657, 160, address(_978), block.timestamp, mem[mem[64] + 164 len (32 * _1796) + 32]
                                if not ext_call.success:
                                _2606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2631 = mem[_2606]
                                require mem[_2606] <= test266151307()
                                require _2606 + mem[_2606] + 31 < _2606 + return_data.size
                                _2639 = mem[_2606 + mem[_2606]]
                                if mem[_2606 + mem[_2606]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1 > test266151307() or floor32(mem[_2606 + mem[_2606]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1
                                mem[_2606 + ceil32(return_data.size)] = _2639
                                require _2631 + (32 * _2639) + 32 <= return_data.size
                                idx = _2606 + _2631 + 32
                                t = _2606 + ceil32(return_data.size) + 32
                                while idx < _2606 + _2631 + (32 * _2639) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1559 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1559 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _566 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_566).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3327 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3425 = mem[(32 * idx) + mem[320] + 32]
                                _4060 = mem[352]
                                s = 0
                                while s < _4060:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4112 = mem[(32 * idx) + mem[256] + 32]
                                    _4113 = mem[288]
                                    _4114 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4112
                                    mem[mem[64] + 36] = _4113
                                    mem[mem[64] + 68] = 160
                                    _4145 = mem[_4114]
                                    mem[mem[64] + 164] = mem[_4114]
                                    idx = 0
                                    t = _4114 + 32
                                    u = mem[64] + 196
                                    while idx < _4145:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3425)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4112, _4113, 160, address(_3425), block.timestamp, mem[mem[64] + 164 len (32 * _4145) + 32]
                                    if not ext_call.success:
                                    _4747 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4747]
                                    require mem[_4747] <= test266151307()
                                    require _4747 + mem[_4747] + 31 < _4747 + return_data.size
                                    _4777 = mem[_4747 + mem[_4747]]
                                    if mem[_4747 + mem[_4747]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1 > test266151307() or floor32(mem[_4747 + mem[_4747]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1
                                    mem[_4747 + ceil32(return_data.size)] = _4777
                                    require _4762 + (32 * _4777) + 32 <= return_data.size
                                    idx = _4747 + _4762 + 32
                                    t = _4747 + ceil32(return_data.size) + 32
                                    while idx < _4747 + _4762 + (32 * _4777) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4060 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _3329 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _3329:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3426 = mem[(32 * idx) + mem[320] + 32]
                                _4061 = mem[352]
                                s = 0
                                while s < _4061:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4116 = mem[(32 * idx) + mem[256] + 32]
                                    _4117 = mem[288]
                                    _4118 = mem[224]
                                    _4119 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4116
                                    mem[mem[64] + 36] = _4117
                                    mem[mem[64] + 68] = 160
                                    _4146 = mem[_4118]
                                    mem[mem[64] + 164] = mem[_4118]
                                    idx = 0
                                    t = _4118 + 32
                                    u = mem[64] + 196
                                    while idx < _4146:
                                        mem[u] = mem[t + 12 len 20]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4119 + 100] = address(_3426)
                                    mem[_4119 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4119 + (32 * _4146) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4748 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4764 = mem[_4748]
                                    require mem[_4748] <= test266151307()
                                    require _4748 + mem[_4748] + 31 < _4748 + return_data.size
                                    _4778 = mem[_4748 + mem[_4748]]
                                    if mem[_4748 + mem[_4748]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1 > test266151307() or floor32(mem[_4748 + mem[_4748]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1
                                    mem[_4748 + ceil32(return_data.size)] = _4778
                                    require _4764 + (32 * _4778) + 32 <= return_data.size
                                    idx = _4748 + _4764 + 32
                                    t = _4748 + ceil32(return_data.size) + 32
                                    while idx < _4748 + _4764 + (32 * _4778) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3329 = mem[mem[320]]
                                    _4061 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3329 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2540 = mem[(32 * idx) + mem[320] + 32]
                            _3334 = mem[352]
                            s = 0
                            while s < _3334:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3434 = mem[(32 * idx) + mem[256] + 32]
                                _3435 = mem[288]
                                _3436 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3434
                                mem[mem[64] + 36] = _3435
                                mem[mem[64] + 68] = 160
                                _3537 = mem[_3436]
                                mem[mem[64] + 164] = mem[_3436]
                                idx = 0
                                t = _3436 + 32
                                u = mem[64] + 196
                                while idx < _3537:
                                    mem[u] = mem[t + 12 len 20]
                                    _3334 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2540)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3434, _3435, 160, address(_2540), block.timestamp, mem[mem[64] + 164 len (32 * _3537) + 32]
                                if not ext_call.success:
                                _4158 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4158]
                                require mem[_4158] <= test266151307()
                                require _4158 + mem[_4158] + 31 < _4158 + return_data.size
                                _4185 = mem[_4158 + mem[_4158]]
                                if mem[_4158 + mem[_4158]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1 > test266151307() or floor32(mem[_4158 + mem[_4158]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1
                                mem[_4158 + ceil32(return_data.size)] = _4185
                                require _4177 + (32 * _4185) + 32 <= return_data.size
                                idx = _4158 + _4177 + 32
                                t = _4158 + ceil32(return_data.size) + 32
                                while idx < _4158 + _4177 + (32 * _4185) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3334 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3334 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _1856 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1856).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4623 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4675 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4981 = mem[(32 * idx) + mem[256] + 32]
                                    _4982 = mem[288]
                                    _4983 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4981
                                    mem[mem[64] + 36] = _4982
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4983]
                                    mem[mem[64] + 164] = mem[_4983]
                                    idx = 0
                                    t = _4983 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4675)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4981, _4982, 160, address(_4675), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5196 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5196 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5196 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4625 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4985 = mem[(32 * idx) + mem[256] + 32]
                                    _4986 = mem[288]
                                    _4987 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4985
                                    mem[mem[64] + 36] = _4986
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4987]
                                    mem[mem[64] + 164] = mem[_4987]
                                    idx = 0
                                    t = _4987 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4985, _4986, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5198 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5198 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5198 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_1024)) + 512] = stor3[5].field_0
                idx = (32 * uint256(stor3.field_1024)) + 512
                s = 0
                while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 5].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_1024)) + 480
                mem[288] = uint256(stor3.field_1536)
                mem[64] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544
                mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512] = uint256(stor3.field_1792)
                if not uint256(stor3.field_1792):
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2541 = mem[(32 * idx) + mem[320] + 32]
                            _3339 = mem[352]
                            s = 0
                            while s < _3339:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3444 = mem[(32 * idx) + mem[256] + 32]
                                _3445 = mem[288]
                                _3446 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3444
                                mem[mem[64] + 36] = _3445
                                mem[mem[64] + 68] = 160
                                _3540 = mem[_3446]
                                mem[mem[64] + 164] = mem[_3446]
                                idx = 0
                                t = _3446 + 32
                                u = mem[64] + 196
                                while idx < _3540:
                                    mem[u] = mem[t + 12 len 20]
                                    _3339 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2541)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3444, _3445, 160, address(_2541), block.timestamp, mem[mem[64] + 164 len (32 * _3540) + 32]
                                if not ext_call.success:
                                _4159 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4179 = mem[_4159]
                                require mem[_4159] <= test266151307()
                                require _4159 + mem[_4159] + 31 < _4159 + return_data.size
                                _4186 = mem[_4159 + mem[_4159]]
                                if mem[_4159 + mem[_4159]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1 > test266151307() or floor32(mem[_4159 + mem[_4159]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1
                                mem[_4159 + ceil32(return_data.size)] = _4186
                                require _4179 + (32 * _4186) + 32 <= return_data.size
                                idx = _4159 + _4179 + 32
                                t = _4159 + ceil32(return_data.size) + 32
                                while idx < _4159 + _4179 + (32 * _4186) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3339 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3339 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _1878 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1878).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4627 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4678 = mem[(32 * idx) + mem[320] + 32]
                                _4949 = mem[352]
                                s = 0
                                while s < _4949:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4989 = mem[(32 * idx) + mem[256] + 32]
                                    _4990 = mem[288]
                                    _4991 = mem[224]
                                    _4992 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4989
                                    mem[mem[64] + 36] = _4990
                                    mem[mem[64] + 68] = 160
                                    _5002 = mem[_4991]
                                    mem[mem[64] + 164] = mem[_4991]
                                    idx = 0
                                    t = _4991 + 32
                                    u = mem[64] + 196
                                    while idx < _5002:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4992 + 100] = address(_4678)
                                    mem[_4992 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4992 + (32 * _5002) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5189 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5189]
                                    require mem[_5189] <= test266151307()
                                    require _5189 + mem[_5189] + 31 < _5189 + return_data.size
                                    _5209 = mem[_5189 + mem[_5189]]
                                    if mem[_5189 + mem[_5189]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1 > test266151307() or floor32(mem[_5189 + mem[_5189]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1
                                    mem[_5189 + ceil32(return_data.size)] = _5209
                                    require _5200 + (32 * _5209) + 32 <= return_data.size
                                    idx = _5189 + _5200 + 32
                                    t = _5189 + ceil32(return_data.size) + 32
                                    while idx < _5189 + _5200 + (32 * _5209) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4949 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _4629 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _4629:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4679 = mem[(32 * idx) + mem[320] + 32]
                                _4950 = mem[352]
                                s = 0
                                while s < _4950:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4993 = mem[(32 * idx) + mem[256] + 32]
                                    _4994 = mem[288]
                                    _4995 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4993
                                    mem[mem[64] + 36] = _4994
                                    mem[mem[64] + 68] = 160
                                    _5003 = mem[_4995]
                                    mem[mem[64] + 164] = mem[_4995]
                                    idx = 0
                                    t = _4995 + 32
                                    u = mem[64] + 196
                                    while idx < _5003:
                                        mem[u] = mem[t + 12 len 20]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4679)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4993, _4994, 160, address(_4679), block.timestamp, mem[mem[64] + 164 len (32 * _5003) + 32]
                                    if not ext_call.success:
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5202 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5210 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1 > test266151307() or floor32(mem[_5190 + mem[_5190]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5210
                                    require _5202 + (32 * _5210) + 32 <= return_data.size
                                    idx = _5190 + _5202 + 32
                                    t = _5190 + ceil32(return_data.size) + 32
                                    while idx < _5190 + _5202 + (32 * _5210) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4629 = mem[mem[320]]
                                    _4950 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4629 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544] = stor3[7].field_0
                    idx = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 7].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512
                    mem[352] = uint256(stor3.field_2048)
                    mem[384] = uint256(stor3.field_2304)
                    mem[416] = uint256(stor3.field_2560)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_2304):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_2560):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_2304):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_2560):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_1792):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4120 = mem[(32 * idx) + mem[320] + 32]
                            _4634 = mem[352]
                            s = 0
                            while s < _4634:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4687 = mem[(32 * idx) + mem[256] + 32]
                                _4688 = mem[288]
                                _4689 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4687
                                mem[mem[64] + 36] = _4688
                                mem[mem[64] + 68] = 160
                                _4742 = mem[_4689]
                                mem[mem[64] + 164] = mem[_4689]
                                idx = 0
                                t = _4689 + 32
                                u = mem[64] + 196
                                while idx < _4742:
                                    mem[u] = mem[t + 12 len 20]
                                    _4634 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4120)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4687, _4688, 160, address(_4120), block.timestamp, mem[mem[64] + 164 len (32 * _4742) + 32]
                                if not ext_call.success:
                                _5008 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5014 = mem[_5008]
                                require mem[_5008] <= test266151307()
                                require _5008 + mem[_5008] + 31 < _5008 + return_data.size
                                _5016 = mem[_5008 + mem[_5008]]
                                if mem[_5008 + mem[_5008]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1 > test266151307() or floor32(mem[_5008 + mem[_5008]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1
                                mem[_5008 + ceil32(return_data.size)] = _5016
                                require _5014 + (32 * _5016) + 32 <= return_data.size
                                idx = _5008 + _5014 + 32
                                t = _5008 + ceil32(return_data.size) + 32
                                while idx < _5008 + _5014 + (32 * _5016) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4634 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4634 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_1024) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_1024) - 1 >= uint256(stor3.field_1024):
                            revert with 'NH{q', 50
                        _3585 = mem[(32 * uint256(stor3.field_1024) - 1) + 480]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = uint256(stor3.field_256)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 708] = uint256(stor3.field_1024)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_1024):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_768))
                        call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_1024)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_3585).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_1024) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_1024)
                        if not uint256(stor3.field_1024):
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _5148 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5162 = mem[(32 * idx) + mem[320] + 32]
                                _5239 = mem[352]
                                s = 0
                                while s < _5239:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5251 = mem[(32 * idx) + mem[256] + 32]
                                    _5252 = mem[288]
                                    _5253 = mem[224]
                                    _5254 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5251
                                    mem[mem[64] + 36] = _5252
                                    mem[mem[64] + 68] = 160
                                    _5259 = mem[_5253]
                                    mem[mem[64] + 164] = mem[_5253]
                                    idx = 0
                                    t = _5253 + 32
                                    u = mem[64] + 196
                                    while idx < _5259:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5254 + 100] = address(_5162)
                                    mem[_5254 + 132] = block.timestamp
                                    call address(stor3.field_768).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5254 + (32 * _5259) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5281 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5281]
                                    require mem[_5281] <= test266151307()
                                    require _5281 + mem[_5281] + 31 < _5281 + return_data.size
                                    _5287 = mem[_5281 + mem[_5281]]
                                    if mem[_5281 + mem[_5281]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1 > test266151307() or floor32(mem[_5281 + mem[_5281]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1
                                    mem[_5281 + ceil32(return_data.size)] = _5287
                                    require _5284 + (32 * _5287) + 32 <= return_data.size
                                    idx = _5281 + _5284 + 32
                                    t = _5281 + ceil32(return_data.size) + 32
                                    while idx < _5281 + _5284 + (32 * _5287) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5239 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_1024)] = call.data[calldata.size len 32 * uint256(stor3.field_1024)]
                            idx = 0
                            while idx < uint256(stor3.field_1024):
                                if idx >= uint256(stor3.field_1024):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_1024) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_1024) + -idx - 1 >= mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_1024) + -idx - 1) + (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_768)
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_768), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_768))
                            call address(stor3.field_768).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + (32 * uint256(stor3.field_1792)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_512):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_2304):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_2560):
                                revert with 0, 'T'
                            _5150 = mem[(32 * uint256(stor3.field_1024)) + (32 * uint256(stor3.field_1280)) + 512]
                            idx = 0
                            while idx < _5150:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5163 = mem[(32 * idx) + mem[320] + 32]
                                _5240 = mem[352]
                                s = 0
                                while s < _5240:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5255 = mem[(32 * idx) + mem[256] + 32]
                                    _5256 = mem[288]
                                    _5257 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5255
                                    mem[mem[64] + 36] = _5256
                                    mem[mem[64] + 68] = 160
                                    _5260 = mem[_5257]
                                    mem[mem[64] + 164] = mem[_5257]
                                    idx = 0
                                    t = _5257 + 32
                                    u = mem[64] + 196
                                    while idx < _5260:
                                        mem[u] = mem[t + 12 len 20]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5163)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_768).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5255, _5256, 160, address(_5163), block.timestamp, mem[mem[64] + 164 len (32 * _5260) + 32]
                                    if not ext_call.success:
                                    _5282 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5286 = mem[_5282]
                                    require mem[_5282] <= test266151307()
                                    require _5282 + mem[_5282] + 31 < _5282 + return_data.size
                                    _5288 = mem[_5282 + mem[_5282]]
                                    if mem[_5282 + mem[_5282]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1 > test266151307() or floor32(mem[_5282 + mem[_5282]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1
                                    mem[_5282 + ceil32(return_data.size)] = _5288
                                    require _5286 + (32 * _5288) + 32 <= return_data.size
                                    idx = _5282 + _5286 + 32
                                    t = _5282 + ceil32(return_data.size) + 32
                                    while idx < _5282 + _5286 + (32 * _5288) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5150 = mem[mem[320]]
                                    _5240 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5150 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}

function buy3() payable {
    if bool(stor1[address(msg.sender)]) != 1:
        revert with 0, 'Wut?'
    if 3 >= stor3.length:
        revert with 'NH{q', 50
    if 3 >= stor3.length:
        revert with 'NH{q', 50
    mem[96] = bool(uint8(stor3.field_8448))
    mem[128] = uint256(stor3.field_8704)
    mem[160] = uint256(stor3.field_8960)
    mem[192] = address(stor3.field_9216)
    mem[448] = uint256(stor3.field_9472)
    if not uint8(stor3.field_8448):
        if not uint256(stor3.field_9472):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_9472)) + 480] = uint256(stor3.field_9728)
            if not uint256(stor3.field_9728):
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _175 = mem[(32 * idx) + mem[320] + 32]
                        _331 = mem[352]
                        s = 0
                        while s < _331:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _361 = mem[(32 * idx) + mem[256] + 32]
                            _362 = mem[288]
                            _363 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _361
                            mem[mem[64] + 36] = _362
                            mem[mem[64] + 68] = 160
                            _483 = mem[_363]
                            mem[mem[64] + 164] = mem[_363]
                            idx = 0
                            t = _363 + 32
                            u = mem[64] + 196
                            while idx < _483:
                                mem[u] = mem[t + 12 len 20]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_175)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _361, _362, 160, address(_175), block.timestamp, mem[mem[64] + 164 len (32 * _483) + 32]
                            if not ext_call.success:
                            _1028 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1036 = mem[_1028]
                            require mem[_1028] <= test266151307()
                            require _1028 + mem[_1028] + 31 < _1028 + return_data.size
                            _1045 = mem[_1028 + mem[_1028]]
                            if mem[_1028 + mem[_1028]] > test266151307():
                                revert with 'NH{q', 65
                            if _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1 > test266151307() or floor32(mem[_1028 + mem[_1028]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _1028 + ceil32(return_data.size) + floor32(mem[_1028 + mem[_1028]]) + 1
                            mem[_1028 + ceil32(return_data.size)] = _1045
                            require _1036 + (32 * _1045) + 32 <= return_data.size
                            idx = _1028 + _1036 + 32
                            t = _1028 + ceil32(return_data.size) + 32
                            while idx < _1028 + _1036 + (32 * _1045) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _973 = mem[(32 * idx) + mem[320] + 32]
                        _1537 = mem[352]
                        s = 0
                        while s < _1537:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1608 = mem[(32 * idx) + mem[256] + 32]
                            _1609 = mem[288]
                            _1610 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1608
                            mem[mem[64] + 36] = _1609
                            mem[mem[64] + 68] = 160
                            _1782 = mem[_1610]
                            mem[mem[64] + 164] = mem[_1610]
                            idx = 0
                            t = _1610 + 32
                            u = mem[64] + 196
                            while idx < _1782:
                                mem[u] = mem[t + 12 len 20]
                                _1537 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_973)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1608, _1609, 160, address(_973), block.timestamp, mem[mem[64] + 164 len (32 * _1782) + 32]
                            if not ext_call.success:
                            _2601 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2617 = mem[_2601]
                            require mem[_2601] <= test266151307()
                            require _2601 + mem[_2601] + 31 < _2601 + return_data.size
                            _2634 = mem[_2601 + mem[_2601]]
                            if mem[_2601 + mem[_2601]] > test266151307():
                                revert with 'NH{q', 65
                            if _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1 > test266151307() or floor32(mem[_2601 + mem[_2601]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2601 + ceil32(return_data.size) + floor32(mem[_2601 + mem[_2601]]) + 1
                            mem[_2601 + ceil32(return_data.size)] = _2634
                            require _2617 + (32 * _2634) + 32 <= return_data.size
                            idx = _2601 + _2617 + 32
                            t = _2601 + ceil32(return_data.size) + 32
                            while idx < _2601 + _2617 + (32 * _2634) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1537 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1537 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_9472)) + 512] = stor3[38].field_0
                idx = (32 * uint256(stor3.field_9472)) + 512
                s = 0
                while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 38].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _974 = mem[(32 * idx) + mem[320] + 32]
                        _1538 = mem[352]
                        s = 0
                        while s < _1538:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1612 = mem[(32 * idx) + mem[256] + 32]
                            _1613 = mem[288]
                            _1614 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1612
                            mem[mem[64] + 36] = _1613
                            mem[mem[64] + 68] = 160
                            _1783 = mem[_1614]
                            mem[mem[64] + 164] = mem[_1614]
                            idx = 0
                            t = _1614 + 32
                            u = mem[64] + 196
                            while idx < _1783:
                                mem[u] = mem[t + 12 len 20]
                                _1538 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_974)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1612, _1613, 160, address(_974), block.timestamp, mem[mem[64] + 164 len (32 * _1783) + 32]
                            if not ext_call.success:
                            _2602 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2619 = mem[_2602]
                            require mem[_2602] <= test266151307()
                            require _2602 + mem[_2602] + 31 < _2602 + return_data.size
                            _2635 = mem[_2602 + mem[_2602]]
                            if mem[_2602 + mem[_2602]] > test266151307():
                                revert with 'NH{q', 65
                            if _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1 > test266151307() or floor32(mem[_2602 + mem[_2602]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2602 + ceil32(return_data.size) + floor32(mem[_2602 + mem[_2602]]) + 1
                            mem[_2602 + ceil32(return_data.size)] = _2635
                            require _2619 + (32 * _2635) + 32 <= return_data.size
                            idx = _2602 + _2619 + 32
                            t = _2602 + ceil32(return_data.size) + 32
                            while idx < _2602 + _2619 + (32 * _2635) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1538 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1538 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2528 = mem[(32 * idx) + mem[320] + 32]
                        _3310 = mem[352]
                        s = 0
                        while s < _3310:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3394 = mem[(32 * idx) + mem[256] + 32]
                            _3395 = mem[288]
                            _3396 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3394
                            mem[mem[64] + 36] = _3395
                            mem[mem[64] + 68] = 160
                            _3527 = mem[_3396]
                            mem[mem[64] + 164] = mem[_3396]
                            idx = 0
                            t = _3396 + 32
                            u = mem[64] + 196
                            while idx < _3527:
                                mem[u] = mem[t + 12 len 20]
                                _3310 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2528)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3394, _3395, 160, address(_2528), block.timestamp, mem[mem[64] + 164 len (32 * _3527) + 32]
                            if not ext_call.success:
                            _4154 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4168 = mem[_4154]
                            require mem[_4154] <= test266151307()
                            require _4154 + mem[_4154] + 31 < _4154 + return_data.size
                            _4181 = mem[_4154 + mem[_4154]]
                            if mem[_4154 + mem[_4154]] > test266151307():
                                revert with 'NH{q', 65
                            if _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1 > test266151307() or floor32(mem[_4154 + mem[_4154]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4154 + ceil32(return_data.size) + floor32(mem[_4154 + mem[_4154]]) + 1
                            mem[_4154 + ceil32(return_data.size)] = _4181
                            require _4168 + (32 * _4181) + 32 <= return_data.size
                            idx = _4154 + _4168 + 32
                            t = _4154 + ceil32(return_data.size) + 32
                            while idx < _4154 + _4168 + (32 * _4181) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3310 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3310 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
        else:
            mem[480] = stor3[37].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_9472)) + 448 > idx:
                mem[idx + 32] = stor3[s + 37].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_9472)) + 480] = uint256(stor3.field_9728)
            if not uint256(stor3.field_9728):
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _975 = mem[(32 * idx) + mem[320] + 32]
                        _1539 = mem[352]
                        s = 0
                        while s < _1539:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _1618 = mem[(32 * idx) + mem[256] + 32]
                            _1619 = mem[288]
                            _1620 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _1618
                            mem[mem[64] + 36] = _1619
                            mem[mem[64] + 68] = 160
                            _1784 = mem[_1620]
                            mem[mem[64] + 164] = mem[_1620]
                            idx = 0
                            t = _1620 + 32
                            u = mem[64] + 196
                            while idx < _1784:
                                mem[u] = mem[t + 12 len 20]
                                _1539 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_975)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _1618, _1619, 160, address(_975), block.timestamp, mem[mem[64] + 164 len (32 * _1784) + 32]
                            if not ext_call.success:
                            _2603 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _2622 = mem[_2603]
                            require mem[_2603] <= test266151307()
                            require _2603 + mem[_2603] + 31 < _2603 + return_data.size
                            _2636 = mem[_2603 + mem[_2603]]
                            if mem[_2603 + mem[_2603]] > test266151307():
                                revert with 'NH{q', 65
                            if _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1 > test266151307() or floor32(mem[_2603 + mem[_2603]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _2603 + ceil32(return_data.size) + floor32(mem[_2603 + mem[_2603]]) + 1
                            mem[_2603 + ceil32(return_data.size)] = _2636
                            require _2622 + (32 * _2636) + 32 <= return_data.size
                            idx = _2603 + _2622 + 32
                            t = _2603 + ceil32(return_data.size) + 32
                            while idx < _2603 + _2622 + (32 * _2636) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _1539 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _1539 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2529 = mem[(32 * idx) + mem[320] + 32]
                        _3311 = mem[352]
                        s = 0
                        while s < _3311:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3399 = mem[(32 * idx) + mem[256] + 32]
                            _3400 = mem[288]
                            _3401 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3399
                            mem[mem[64] + 36] = _3400
                            mem[mem[64] + 68] = 160
                            _3528 = mem[_3401]
                            mem[mem[64] + 164] = mem[_3401]
                            idx = 0
                            t = _3401 + 32
                            u = mem[64] + 196
                            while idx < _3528:
                                mem[u] = mem[t + 12 len 20]
                                _3311 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2529)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3399, _3400, 160, address(_2529), block.timestamp, mem[mem[64] + 164 len (32 * _3528) + 32]
                            if not ext_call.success:
                            _4155 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4170 = mem[_4155]
                            require mem[_4155] <= test266151307()
                            require _4155 + mem[_4155] + 31 < _4155 + return_data.size
                            _4182 = mem[_4155 + mem[_4155]]
                            if mem[_4155 + mem[_4155]] > test266151307():
                                revert with 'NH{q', 65
                            if _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1 > test266151307() or floor32(mem[_4155 + mem[_4155]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4155 + ceil32(return_data.size) + floor32(mem[_4155 + mem[_4155]]) + 1
                            mem[_4155 + ceil32(return_data.size)] = _4182
                            require _4170 + (32 * _4182) + 32 <= return_data.size
                            idx = _4155 + _4170 + 32
                            t = _4155 + ceil32(return_data.size) + 32
                            while idx < _4155 + _4170 + (32 * _4182) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3311 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3311 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
            else:
                mem[(32 * uint256(stor3.field_9472)) + 512] = stor3[38].field_0
                idx = (32 * uint256(stor3.field_9472)) + 512
                s = 0
                while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 38].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _2530 = mem[(32 * idx) + mem[320] + 32]
                        _3312 = mem[352]
                        s = 0
                        while s < _3312:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _3403 = mem[(32 * idx) + mem[256] + 32]
                            _3404 = mem[288]
                            _3405 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3403
                            mem[mem[64] + 36] = _3404
                            mem[mem[64] + 68] = 160
                            _3529 = mem[_3405]
                            mem[mem[64] + 164] = mem[_3405]
                            idx = 0
                            t = _3405 + 32
                            u = mem[64] + 196
                            while idx < _3529:
                                mem[u] = mem[t + 12 len 20]
                                _3312 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_2530)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _3403, _3404, 160, address(_2530), block.timestamp, mem[mem[64] + 164 len (32 * _3529) + 32]
                            if not ext_call.success:
                            _4156 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4172 = mem[_4156]
                            require mem[_4156] <= test266151307()
                            require _4156 + mem[_4156] + 31 < _4156 + return_data.size
                            _4183 = mem[_4156 + mem[_4156]]
                            if mem[_4156 + mem[_4156]] > test266151307():
                                revert with 'NH{q', 65
                            if _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1 > test266151307() or floor32(mem[_4156 + mem[_4156]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _4156 + ceil32(return_data.size) + floor32(mem[_4156 + mem[_4156]]) + 1
                            mem[_4156 + ceil32(return_data.size)] = _4183
                            require _4172 + (32 * _4183) + 32 <= return_data.size
                            idx = _4156 + _4172 + 32
                            t = _4156 + ceil32(return_data.size) + 32
                            while idx < _4156 + _4172 + (32 * _4183) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _3312 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _3312 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    mem[0] = msg.sender
                    mem[32] = 1
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    idx = 0
                    while idx < uint256(stor3.field_10240):
                        if idx >= mem[mem[320]]:
                            revert with 'NH{q', 50
                        _4093 = mem[(32 * idx) + mem[320] + 32]
                        _4617 = mem[352]
                        s = 0
                        while s < _4617:
                            if idx >= mem[mem[256]]:
                                revert with 'NH{q', 50
                            _4668 = mem[(32 * idx) + mem[256] + 32]
                            _4669 = mem[288]
                            _4670 = mem[224]
                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _4668
                            mem[mem[64] + 36] = _4669
                            mem[mem[64] + 68] = 160
                            _4733 = mem[_4670]
                            mem[mem[64] + 164] = mem[_4670]
                            idx = 0
                            t = _4670 + 32
                            u = mem[64] + 196
                            while idx < _4733:
                                mem[u] = mem[t + 12 len 20]
                                _4617 = mem[352]
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 100] = address(_4093)
                            mem[mem[64] + 132] = block.timestamp
                            call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4668, _4669, 160, address(_4093), block.timestamp, mem[mem[64] + 164 len (32 * _4733) + 32]
                            if not ext_call.success:
                            _5007 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5012 = mem[_5007]
                            require mem[_5007] <= test266151307()
                            require _5007 + mem[_5007] + 31 < _5007 + return_data.size
                            _5015 = mem[_5007 + mem[_5007]]
                            if mem[_5007 + mem[_5007]] > test266151307():
                                revert with 'NH{q', 65
                            if _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1 > test266151307() or floor32(mem[_5007 + mem[_5007]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _5007 + ceil32(return_data.size) + floor32(mem[_5007 + mem[_5007]]) + 1
                            mem[_5007 + ceil32(return_data.size)] = _5015
                            require _5012 + (32 * _5015) + 32 <= return_data.size
                            idx = _5007 + _5012 + 32
                            t = _5007 + ceil32(return_data.size) + 32
                            while idx < _5007 + _5012 + (32 * _5015) + 32:
                                require mem[idx] == mem[idx]
                                mem[t] = mem[idx]
                                _4617 = mem[352]
                                idx = idx + 32
                                t = t + 32
                                continue 
                            if s == -1:
                                revert with 'NH{q', 17
                            _4617 = mem[352]
                            s = s + 1
                            continue 
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
    else:
        if not uint256(stor3.field_9472):
            mem[224] = 448
            mem[(32 * uint256(stor3.field_9472)) + 480] = uint256(stor3.field_9728)
            if not uint256(stor3.field_9728):
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _176 = mem[(32 * idx) + mem[320] + 32]
                            _338 = mem[352]
                            s = 0
                            while s < _338:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _375 = mem[(32 * idx) + mem[256] + 32]
                                _376 = mem[288]
                                _377 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _375
                                mem[mem[64] + 36] = _376
                                mem[mem[64] + 68] = 160
                                _488 = mem[_377]
                                mem[mem[64] + 164] = mem[_377]
                                idx = 0
                                t = _377 + 32
                                u = mem[64] + 196
                                while idx < _488:
                                    mem[u] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_176)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _375, _376, 160, address(_176), block.timestamp, mem[mem[64] + 164 len (32 * _488) + 32]
                                if not ext_call.success:
                                _1029 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1041 = mem[_1029]
                                require mem[_1029] <= test266151307()
                                require _1029 + mem[_1029] + 31 < _1029 + return_data.size
                                _1046 = mem[_1029 + mem[_1029]]
                                if mem[_1029 + mem[_1029]] > test266151307():
                                    revert with 'NH{q', 65
                                if _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1 > test266151307() or floor32(mem[_1029 + mem[_1029]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _1029 + ceil32(return_data.size) + floor32(mem[_1029 + mem[_1029]]) + 1
                                mem[_1029 + ceil32(return_data.size)] = _1046
                                require _1041 + (32 * _1046) + 32 <= return_data.size
                                idx = _1029 + _1041 + 32
                                t = _1029 + ceil32(return_data.size) + 32
                                while idx < _1029 + _1041 + (32 * _1046) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _74 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_74).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _1542 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _1542:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1625 = mem[(32 * idx) + mem[320] + 32]
                                _2489 = mem[352]
                                s = 0
                                while s < _2489:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2531 = mem[(32 * idx) + mem[256] + 32]
                                    _2532 = mem[288]
                                    _2533 = mem[224]
                                    _2534 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2531
                                    mem[mem[64] + 36] = _2532
                                    mem[mem[64] + 68] = 160
                                    _2587 = mem[_2533]
                                    mem[mem[64] + 164] = mem[_2533]
                                    idx = 0
                                    t = _2533 + 32
                                    u = mem[64] + 196
                                    while idx < _2587:
                                        mem[u] = mem[t + 12 len 20]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2534 + 100] = address(_1625)
                                    mem[_2534 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2534 + (32 * _2587) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3543 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3556 = mem[_3543]
                                    require mem[_3543] <= test266151307()
                                    require _3543 + mem[_3543] + 31 < _3543 + return_data.size
                                    _3583 = mem[_3543 + mem[_3543]]
                                    if mem[_3543 + mem[_3543]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1 > test266151307() or floor32(mem[_3543 + mem[_3543]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3543 + ceil32(return_data.size) + floor32(mem[_3543 + mem[_3543]]) + 1
                                    mem[_3543 + ceil32(return_data.size)] = _3583
                                    require _3556 + (32 * _3583) + 32 <= return_data.size
                                    idx = _3543 + _3556 + 32
                                    t = _3543 + ceil32(return_data.size) + 32
                                    while idx < _3543 + _3556 + (32 * _3583) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1542 = mem[mem[320]]
                                        _2489 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1542 = mem[mem[320]]
                                    _2489 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1542 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_74).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _1544 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _1544:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _1626 = mem[(32 * idx) + mem[320] + 32]
                                _2490 = mem[352]
                                s = 0
                                while s < _2490:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _2535 = mem[(32 * idx) + mem[256] + 32]
                                    _2536 = mem[288]
                                    _2537 = mem[224]
                                    _2538 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _2535
                                    mem[mem[64] + 36] = _2536
                                    mem[mem[64] + 68] = 160
                                    _2588 = mem[_2537]
                                    mem[mem[64] + 164] = mem[_2537]
                                    idx = 0
                                    t = _2537 + 32
                                    u = mem[64] + 196
                                    while idx < _2588:
                                        mem[u] = mem[t + 12 len 20]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_2538 + 100] = address(_1626)
                                    mem[_2538 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _2538 + (32 * _2588) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _3544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3558 = mem[_3544]
                                    require mem[_3544] <= test266151307()
                                    require _3544 + mem[_3544] + 31 < _3544 + return_data.size
                                    _3584 = mem[_3544 + mem[_3544]]
                                    if mem[_3544 + mem[_3544]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1 > test266151307() or floor32(mem[_3544 + mem[_3544]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3544 + ceil32(return_data.size) + floor32(mem[_3544 + mem[_3544]]) + 1
                                    mem[_3544 + ceil32(return_data.size)] = _3584
                                    require _3558 + (32 * _3584) + 32 <= return_data.size
                                    idx = _3544 + _3558 + 32
                                    t = _3544 + ceil32(return_data.size) + 32
                                    while idx < _3544 + _3558 + (32 * _3584) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _1544 = mem[mem[320]]
                                        _2490 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _1544 = mem[mem[320]]
                                    _2490 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _1544 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _976 = mem[(32 * idx) + mem[320] + 32]
                            _1549 = mem[352]
                            s = 0
                            while s < _1549:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1634 = mem[(32 * idx) + mem[256] + 32]
                                _1635 = mem[288]
                                _1636 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1634
                                mem[mem[64] + 36] = _1635
                                mem[mem[64] + 68] = 160
                                _1788 = mem[_1636]
                                mem[mem[64] + 164] = mem[_1636]
                                idx = 0
                                t = _1636 + 32
                                u = mem[64] + 196
                                while idx < _1788:
                                    mem[u] = mem[t + 12 len 20]
                                    _1549 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_976)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1634, _1635, 160, address(_976), block.timestamp, mem[mem[64] + 164 len (32 * _1788) + 32]
                                if not ext_call.success:
                                _2604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2626 = mem[_2604]
                                require mem[_2604] <= test266151307()
                                require _2604 + mem[_2604] + 31 < _2604 + return_data.size
                                _2637 = mem[_2604 + mem[_2604]]
                                if mem[_2604 + mem[_2604]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1 > test266151307() or floor32(mem[_2604 + mem[_2604]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2604 + ceil32(return_data.size) + floor32(mem[_2604 + mem[_2604]]) + 1
                                mem[_2604 + ceil32(return_data.size)] = _2637
                                require _2626 + (32 * _2637) + 32 <= return_data.size
                                idx = _2604 + _2626 + 32
                                t = _2604 + ceil32(return_data.size) + 32
                                while idx < _2604 + _2626 + (32 * _2637) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1549 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1549 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _539 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_539).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3314 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3314:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3409 = mem[(32 * idx) + mem[320] + 32]
                                _4056 = mem[352]
                                s = 0
                                while s < _4056:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4096 = mem[(32 * idx) + mem[256] + 32]
                                    _4097 = mem[288]
                                    _4098 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4096
                                    mem[mem[64] + 36] = _4097
                                    mem[mem[64] + 68] = 160
                                    _4138 = mem[_4098]
                                    mem[mem[64] + 164] = mem[_4098]
                                    idx = 0
                                    t = _4098 + 32
                                    u = mem[64] + 196
                                    while idx < _4138:
                                        mem[u] = mem[t + 12 len 20]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3409)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4096, _4097, 160, address(_3409), block.timestamp, mem[mem[64] + 164 len (32 * _4138) + 32]
                                    if not ext_call.success:
                                    _4743 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4752 = mem[_4743]
                                    require mem[_4743] <= test266151307()
                                    require _4743 + mem[_4743] + 31 < _4743 + return_data.size
                                    _4773 = mem[_4743 + mem[_4743]]
                                    if mem[_4743 + mem[_4743]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1 > test266151307() or floor32(mem[_4743 + mem[_4743]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4743 + ceil32(return_data.size) + floor32(mem[_4743 + mem[_4743]]) + 1
                                    mem[_4743 + ceil32(return_data.size)] = _4773
                                    require _4752 + (32 * _4773) + 32 <= return_data.size
                                    idx = _4743 + _4752 + 32
                                    t = _4743 + ceil32(return_data.size) + 32
                                    while idx < _4743 + _4752 + (32 * _4773) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3314 = mem[mem[320]]
                                        _4056 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3314 = mem[mem[320]]
                                    _4056 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3314 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_539).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3316 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3316:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3410 = mem[(32 * idx) + mem[320] + 32]
                                _4057 = mem[352]
                                s = 0
                                while s < _4057:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4100 = mem[(32 * idx) + mem[256] + 32]
                                    _4101 = mem[288]
                                    _4102 = mem[224]
                                    _4103 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4100
                                    mem[mem[64] + 36] = _4101
                                    mem[mem[64] + 68] = 160
                                    _4139 = mem[_4102]
                                    mem[mem[64] + 164] = mem[_4102]
                                    idx = 0
                                    t = _4102 + 32
                                    u = mem[64] + 196
                                    while idx < _4139:
                                        mem[u] = mem[t + 12 len 20]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4103 + 100] = address(_3410)
                                    mem[_4103 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4103 + (32 * _4139) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4744 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4754 = mem[_4744]
                                    require mem[_4744] <= test266151307()
                                    require _4744 + mem[_4744] + 31 < _4744 + return_data.size
                                    _4774 = mem[_4744 + mem[_4744]]
                                    if mem[_4744 + mem[_4744]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1 > test266151307() or floor32(mem[_4744 + mem[_4744]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4744 + ceil32(return_data.size) + floor32(mem[_4744 + mem[_4744]]) + 1
                                    mem[_4744 + ceil32(return_data.size)] = _4774
                                    require _4754 + (32 * _4774) + 32 <= return_data.size
                                    idx = _4744 + _4754 + 32
                                    t = _4744 + ceil32(return_data.size) + 32
                                    while idx < _4744 + _4754 + (32 * _4774) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3316 = mem[mem[320]]
                                        _4057 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3316 = mem[mem[320]]
                                    _4057 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3316 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_9472)) + 512] = stor3[38].field_0
                idx = (32 * uint256(stor3.field_9472)) + 512
                s = 0
                while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 38].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _977 = mem[(32 * idx) + mem[320] + 32]
                            _1554 = mem[352]
                            s = 0
                            while s < _1554:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1644 = mem[(32 * idx) + mem[256] + 32]
                                _1645 = mem[288]
                                _1646 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1644
                                mem[mem[64] + 36] = _1645
                                mem[mem[64] + 68] = 160
                                _1791 = mem[_1646]
                                mem[mem[64] + 164] = mem[_1646]
                                idx = 0
                                t = _1646 + 32
                                u = mem[64] + 196
                                while idx < _1791:
                                    mem[u] = mem[t + 12 len 20]
                                    _1554 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_977)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1644, _1645, 160, address(_977), block.timestamp, mem[mem[64] + 164 len (32 * _1791) + 32]
                                if not ext_call.success:
                                _2605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2628 = mem[_2605]
                                require mem[_2605] <= test266151307()
                                require _2605 + mem[_2605] + 31 < _2605 + return_data.size
                                _2638 = mem[_2605 + mem[_2605]]
                                if mem[_2605 + mem[_2605]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1 > test266151307() or floor32(mem[_2605 + mem[_2605]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2605 + ceil32(return_data.size) + floor32(mem[_2605 + mem[_2605]]) + 1
                                mem[_2605 + ceil32(return_data.size)] = _2638
                                require _2628 + (32 * _2638) + 32 <= return_data.size
                                idx = _2605 + _2628 + 32
                                t = _2605 + ceil32(return_data.size) + 32
                                while idx < _2605 + _2628 + (32 * _2638) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1554 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1554 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _553 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_553).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3318 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3318:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3412 = mem[(32 * idx) + mem[320] + 32]
                                _4058 = mem[352]
                                s = 0
                                while s < _4058:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4104 = mem[(32 * idx) + mem[256] + 32]
                                    _4105 = mem[288]
                                    _4106 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4104
                                    mem[mem[64] + 36] = _4105
                                    mem[mem[64] + 68] = 160
                                    _4140 = mem[_4106]
                                    mem[mem[64] + 164] = mem[_4106]
                                    idx = 0
                                    t = _4106 + 32
                                    u = mem[64] + 196
                                    while idx < _4140:
                                        mem[u] = mem[t + 12 len 20]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3412)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4104, _4105, 160, address(_3412), block.timestamp, mem[mem[64] + 164 len (32 * _4140) + 32]
                                    if not ext_call.success:
                                    _4745 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4756 = mem[_4745]
                                    require mem[_4745] <= test266151307()
                                    require _4745 + mem[_4745] + 31 < _4745 + return_data.size
                                    _4775 = mem[_4745 + mem[_4745]]
                                    if mem[_4745 + mem[_4745]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1 > test266151307() or floor32(mem[_4745 + mem[_4745]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4745 + ceil32(return_data.size) + floor32(mem[_4745 + mem[_4745]]) + 1
                                    mem[_4745 + ceil32(return_data.size)] = _4775
                                    require _4756 + (32 * _4775) + 32 <= return_data.size
                                    idx = _4745 + _4756 + 32
                                    t = _4745 + ceil32(return_data.size) + 32
                                    while idx < _4745 + _4756 + (32 * _4775) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3318 = mem[mem[320]]
                                        _4058 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3318 = mem[mem[320]]
                                    _4058 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3318 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_553).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3320 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3320:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3413 = mem[(32 * idx) + mem[320] + 32]
                                _4059 = mem[352]
                                s = 0
                                while s < _4059:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4108 = mem[(32 * idx) + mem[256] + 32]
                                    _4109 = mem[288]
                                    _4110 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4108
                                    mem[mem[64] + 36] = _4109
                                    mem[mem[64] + 68] = 160
                                    _4141 = mem[_4110]
                                    mem[mem[64] + 164] = mem[_4110]
                                    idx = 0
                                    t = _4110 + 32
                                    u = mem[64] + 196
                                    while idx < _4141:
                                        mem[u] = mem[t + 12 len 20]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3413)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4108, _4109, 160, address(_3413), block.timestamp, mem[mem[64] + 164 len (32 * _4141) + 32]
                                    if not ext_call.success:
                                    _4746 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4758 = mem[_4746]
                                    require mem[_4746] <= test266151307()
                                    require _4746 + mem[_4746] + 31 < _4746 + return_data.size
                                    _4776 = mem[_4746 + mem[_4746]]
                                    if mem[_4746 + mem[_4746]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1 > test266151307() or floor32(mem[_4746 + mem[_4746]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4746 + ceil32(return_data.size) + floor32(mem[_4746 + mem[_4746]]) + 1
                                    mem[_4746 + ceil32(return_data.size)] = _4776
                                    require _4758 + (32 * _4776) + 32 <= return_data.size
                                    idx = _4746 + _4758 + 32
                                    t = _4746 + ceil32(return_data.size) + 32
                                    while idx < _4746 + _4758 + (32 * _4776) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3320 = mem[mem[320]]
                                        _4059 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3320 = mem[mem[320]]
                                    _4059 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3320 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2539 = mem[(32 * idx) + mem[320] + 32]
                            _3325 = mem[352]
                            s = 0
                            while s < _3325:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3421 = mem[(32 * idx) + mem[256] + 32]
                                _3422 = mem[288]
                                _3423 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3421
                                mem[mem[64] + 36] = _3422
                                mem[mem[64] + 68] = 160
                                _3534 = mem[_3423]
                                mem[mem[64] + 164] = mem[_3423]
                                idx = 0
                                t = _3423 + 32
                                u = mem[64] + 196
                                while idx < _3534:
                                    mem[u] = mem[t + 12 len 20]
                                    _3325 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2539)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3421, _3422, 160, address(_2539), block.timestamp, mem[mem[64] + 164 len (32 * _3534) + 32]
                                if not ext_call.success:
                                _4157 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4175 = mem[_4157]
                                require mem[_4157] <= test266151307()
                                require _4157 + mem[_4157] + 31 < _4157 + return_data.size
                                _4184 = mem[_4157 + mem[_4157]]
                                if mem[_4157 + mem[_4157]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1 > test266151307() or floor32(mem[_4157 + mem[_4157]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4157 + ceil32(return_data.size) + floor32(mem[_4157 + mem[_4157]]) + 1
                                mem[_4157 + ceil32(return_data.size)] = _4184
                                require _4175 + (32 * _4184) + 32 <= return_data.size
                                idx = _4157 + _4175 + 32
                                t = _4157 + ceil32(return_data.size) + 32
                                while idx < _4157 + _4175 + (32 * _4184) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3325 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3325 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _1852 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args uint256(stor3.field_8704), 0, 160, address(this.address), block.timestamp, uint256(stor3.field_9472), mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740 len 32 * uint256(stor3.field_9472)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1852).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4619 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4619:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4672 = mem[(32 * idx) + mem[320] + 32]
                                _4945 = mem[352]
                                s = 0
                                while s < _4945:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4971 = mem[(32 * idx) + mem[256] + 32]
                                    _4972 = mem[288]
                                    _4973 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4971
                                    mem[mem[64] + 36] = _4972
                                    mem[mem[64] + 68] = 160
                                    _4998 = mem[_4973]
                                    mem[mem[64] + 164] = mem[_4973]
                                    idx = 0
                                    t = _4973 + 32
                                    u = mem[64] + 196
                                    while idx < _4998:
                                        mem[u] = mem[t + 12 len 20]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4672)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4971, _4972, 160, address(_4672), block.timestamp, mem[mem[64] + 164 len (32 * _4998) + 32]
                                    if not ext_call.success:
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5205 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1 > test266151307() or floor32(mem[_5185 + mem[_5185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5185 + ceil32(return_data.size) + floor32(mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5205
                                    require _5192 + (32 * _5205) + 32 <= return_data.size
                                    idx = _5185 + _5192 + 32
                                    t = _5185 + ceil32(return_data.size) + 32
                                    while idx < _5185 + _5192 + (32 * _5205) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4619 = mem[mem[320]]
                                        _4945 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4619 = mem[mem[320]]
                                    _4945 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4619 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1852).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4621 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4621:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4673 = mem[(32 * idx) + mem[320] + 32]
                                _4946 = mem[352]
                                s = 0
                                while s < _4946:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4975 = mem[(32 * idx) + mem[256] + 32]
                                    _4976 = mem[288]
                                    _4977 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4975
                                    mem[mem[64] + 36] = _4976
                                    mem[mem[64] + 68] = 160
                                    _4999 = mem[_4977]
                                    mem[mem[64] + 164] = mem[_4977]
                                    idx = 0
                                    t = _4977 + 32
                                    u = mem[64] + 196
                                    while idx < _4999:
                                        mem[u] = mem[t + 12 len 20]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4673)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4975, _4976, 160, address(_4673), block.timestamp, mem[mem[64] + 164 len (32 * _4999) + 32]
                                    if not ext_call.success:
                                    _5186 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5186]
                                    require mem[_5186] <= test266151307()
                                    require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                    _5206 = mem[_5186 + mem[_5186]]
                                    if mem[_5186 + mem[_5186]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1 > test266151307() or floor32(mem[_5186 + mem[_5186]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5186 + ceil32(return_data.size) + floor32(mem[_5186 + mem[_5186]]) + 1
                                    mem[_5186 + ceil32(return_data.size)] = _5206
                                    require _5194 + (32 * _5206) + 32 <= return_data.size
                                    idx = _5186 + _5194 + 32
                                    t = _5186 + ceil32(return_data.size) + 32
                                    while idx < _5186 + _5194 + (32 * _5206) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4621 = mem[mem[320]]
                                        _4946 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4621 = mem[mem[320]]
                                    _4946 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4621 = mem[mem[320]]
                                idx = idx + 1
                                continue 
        else:
            mem[480] = stor3[37].field_0
            idx = 480
            s = 0
            while (32 * uint256(stor3.field_9472)) + 448 > idx:
                mem[idx + 32] = stor3[s + 37].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[224] = 448
            mem[(32 * uint256(stor3.field_9472)) + 480] = uint256(stor3.field_9728)
            if not uint256(stor3.field_9728):
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _978 = mem[(32 * idx) + mem[320] + 32]
                            _1559 = mem[352]
                            s = 0
                            while s < _1559:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _1656 = mem[(32 * idx) + mem[256] + 32]
                                _1657 = mem[288]
                                _1658 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _1656
                                mem[mem[64] + 36] = _1657
                                mem[mem[64] + 68] = 160
                                _1796 = mem[_1658]
                                mem[mem[64] + 164] = mem[_1658]
                                idx = 0
                                t = _1658 + 32
                                u = mem[64] + 196
                                while idx < _1796:
                                    mem[u] = mem[t + 12 len 20]
                                    _1559 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_978)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _1656, _1657, 160, address(_978), block.timestamp, mem[mem[64] + 164 len (32 * _1796) + 32]
                                if not ext_call.success:
                                _2606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _2631 = mem[_2606]
                                require mem[_2606] <= test266151307()
                                require _2606 + mem[_2606] + 31 < _2606 + return_data.size
                                _2639 = mem[_2606 + mem[_2606]]
                                if mem[_2606 + mem[_2606]] > test266151307():
                                    revert with 'NH{q', 65
                                if _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1 > test266151307() or floor32(mem[_2606 + mem[_2606]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _2606 + ceil32(return_data.size) + floor32(mem[_2606 + mem[_2606]]) + 1
                                mem[_2606 + ceil32(return_data.size)] = _2639
                                require _2631 + (32 * _2639) + 32 <= return_data.size
                                idx = _2606 + _2631 + 32
                                t = _2606 + ceil32(return_data.size) + 32
                                while idx < _2606 + _2631 + (32 * _2639) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _1559 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _1559 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _566 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_566).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3327 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3327:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3425 = mem[(32 * idx) + mem[320] + 32]
                                _4060 = mem[352]
                                s = 0
                                while s < _4060:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4112 = mem[(32 * idx) + mem[256] + 32]
                                    _4113 = mem[288]
                                    _4114 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4112
                                    mem[mem[64] + 36] = _4113
                                    mem[mem[64] + 68] = 160
                                    _4145 = mem[_4114]
                                    mem[mem[64] + 164] = mem[_4114]
                                    idx = 0
                                    t = _4114 + 32
                                    u = mem[64] + 196
                                    while idx < _4145:
                                        mem[u] = mem[t + 12 len 20]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_3425)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4112, _4113, 160, address(_3425), block.timestamp, mem[mem[64] + 164 len (32 * _4145) + 32]
                                    if not ext_call.success:
                                    _4747 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4762 = mem[_4747]
                                    require mem[_4747] <= test266151307()
                                    require _4747 + mem[_4747] + 31 < _4747 + return_data.size
                                    _4777 = mem[_4747 + mem[_4747]]
                                    if mem[_4747 + mem[_4747]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1 > test266151307() or floor32(mem[_4747 + mem[_4747]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4747 + ceil32(return_data.size) + floor32(mem[_4747 + mem[_4747]]) + 1
                                    mem[_4747 + ceil32(return_data.size)] = _4777
                                    require _4762 + (32 * _4777) + 32 <= return_data.size
                                    idx = _4747 + _4762 + 32
                                    t = _4747 + ceil32(return_data.size) + 32
                                    while idx < _4747 + _4762 + (32 * _4777) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3327 = mem[mem[320]]
                                        _4060 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3327 = mem[mem[320]]
                                    _4060 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3327 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_566).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _3329 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _3329:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _3426 = mem[(32 * idx) + mem[320] + 32]
                                _4061 = mem[352]
                                s = 0
                                while s < _4061:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4116 = mem[(32 * idx) + mem[256] + 32]
                                    _4117 = mem[288]
                                    _4118 = mem[224]
                                    _4119 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4116
                                    mem[mem[64] + 36] = _4117
                                    mem[mem[64] + 68] = 160
                                    _4146 = mem[_4118]
                                    mem[mem[64] + 164] = mem[_4118]
                                    idx = 0
                                    t = _4118 + 32
                                    u = mem[64] + 196
                                    while idx < _4146:
                                        mem[u] = mem[t + 12 len 20]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4119 + 100] = address(_3426)
                                    mem[_4119 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4119 + (32 * _4146) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _4748 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4764 = mem[_4748]
                                    require mem[_4748] <= test266151307()
                                    require _4748 + mem[_4748] + 31 < _4748 + return_data.size
                                    _4778 = mem[_4748 + mem[_4748]]
                                    if mem[_4748 + mem[_4748]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1 > test266151307() or floor32(mem[_4748 + mem[_4748]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _4748 + ceil32(return_data.size) + floor32(mem[_4748 + mem[_4748]]) + 1
                                    mem[_4748 + ceil32(return_data.size)] = _4778
                                    require _4764 + (32 * _4778) + 32 <= return_data.size
                                    idx = _4748 + _4764 + 32
                                    t = _4748 + ceil32(return_data.size) + 32
                                    while idx < _4748 + _4764 + (32 * _4778) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _3329 = mem[mem[320]]
                                        _4061 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _3329 = mem[mem[320]]
                                    _4061 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _3329 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2540 = mem[(32 * idx) + mem[320] + 32]
                            _3334 = mem[352]
                            s = 0
                            while s < _3334:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3434 = mem[(32 * idx) + mem[256] + 32]
                                _3435 = mem[288]
                                _3436 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3434
                                mem[mem[64] + 36] = _3435
                                mem[mem[64] + 68] = 160
                                _3537 = mem[_3436]
                                mem[mem[64] + 164] = mem[_3436]
                                idx = 0
                                t = _3436 + 32
                                u = mem[64] + 196
                                while idx < _3537:
                                    mem[u] = mem[t + 12 len 20]
                                    _3334 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2540)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3434, _3435, 160, address(_2540), block.timestamp, mem[mem[64] + 164 len (32 * _3537) + 32]
                                if not ext_call.success:
                                _4158 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4177 = mem[_4158]
                                require mem[_4158] <= test266151307()
                                require _4158 + mem[_4158] + 31 < _4158 + return_data.size
                                _4185 = mem[_4158 + mem[_4158]]
                                if mem[_4158 + mem[_4158]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1 > test266151307() or floor32(mem[_4158 + mem[_4158]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4158 + ceil32(return_data.size) + floor32(mem[_4158 + mem[_4158]]) + 1
                                mem[_4158 + ceil32(return_data.size)] = _4185
                                require _4177 + (32 * _4185) + 32 <= return_data.size
                                idx = _4158 + _4177 + 32
                                t = _4158 + ceil32(return_data.size) + 32
                                while idx < _4158 + _4177 + (32 * _4185) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3334 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3334 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _1856 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1856).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4623 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4623:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4675 = mem[(32 * idx) + mem[320] + 32]
                                _4947 = mem[352]
                                s = 0
                                while s < _4947:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4981 = mem[(32 * idx) + mem[256] + 32]
                                    _4982 = mem[288]
                                    _4983 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4981
                                    mem[mem[64] + 36] = _4982
                                    mem[mem[64] + 68] = 160
                                    _5000 = mem[_4983]
                                    mem[mem[64] + 164] = mem[_4983]
                                    idx = 0
                                    t = _4983 + 32
                                    u = mem[64] + 196
                                    while idx < _5000:
                                        mem[u] = mem[t + 12 len 20]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4675)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4981, _4982, 160, address(_4675), block.timestamp, mem[mem[64] + 164 len (32 * _5000) + 32]
                                    if not ext_call.success:
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5196 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5207 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1 > test266151307() or floor32(mem[_5187 + mem[_5187]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5187 + ceil32(return_data.size) + floor32(mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5207
                                    require _5196 + (32 * _5207) + 32 <= return_data.size
                                    idx = _5187 + _5196 + 32
                                    t = _5187 + ceil32(return_data.size) + 32
                                    while idx < _5187 + _5196 + (32 * _5207) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4623 = mem[mem[320]]
                                        _4947 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4623 = mem[mem[320]]
                                    _4947 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4623 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1856).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4625 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4625:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4676 = mem[(32 * idx) + mem[320] + 32]
                                _4948 = mem[352]
                                s = 0
                                while s < _4948:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4985 = mem[(32 * idx) + mem[256] + 32]
                                    _4986 = mem[288]
                                    _4987 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4985
                                    mem[mem[64] + 36] = _4986
                                    mem[mem[64] + 68] = 160
                                    _5001 = mem[_4987]
                                    mem[mem[64] + 164] = mem[_4987]
                                    idx = 0
                                    t = _4987 + 32
                                    u = mem[64] + 196
                                    while idx < _5001:
                                        mem[u] = mem[t + 12 len 20]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4676)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4985, _4986, 160, address(_4676), block.timestamp, mem[mem[64] + 164 len (32 * _5001) + 32]
                                    if not ext_call.success:
                                    _5188 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5198 = mem[_5188]
                                    require mem[_5188] <= test266151307()
                                    require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                    _5208 = mem[_5188 + mem[_5188]]
                                    if mem[_5188 + mem[_5188]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1 > test266151307() or floor32(mem[_5188 + mem[_5188]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5188 + ceil32(return_data.size) + floor32(mem[_5188 + mem[_5188]]) + 1
                                    mem[_5188 + ceil32(return_data.size)] = _5208
                                    require _5198 + (32 * _5208) + 32 <= return_data.size
                                    idx = _5188 + _5198 + 32
                                    t = _5188 + ceil32(return_data.size) + 32
                                    while idx < _5188 + _5198 + (32 * _5208) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4625 = mem[mem[320]]
                                        _4948 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4625 = mem[mem[320]]
                                    _4948 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4625 = mem[mem[320]]
                                idx = idx + 1
                                continue 
            else:
                mem[(32 * uint256(stor3.field_9472)) + 512] = stor3[38].field_0
                idx = (32 * uint256(stor3.field_9472)) + 512
                s = 0
                while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 480 > idx:
                    mem[idx + 32] = stor3[s + 38].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[256] = (32 * uint256(stor3.field_9472)) + 480
                mem[288] = uint256(stor3.field_9984)
                mem[64] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544
                mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512] = uint256(stor3.field_10240)
                if not uint256(stor3.field_10240):
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _2541 = mem[(32 * idx) + mem[320] + 32]
                            _3339 = mem[352]
                            s = 0
                            while s < _3339:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _3444 = mem[(32 * idx) + mem[256] + 32]
                                _3445 = mem[288]
                                _3446 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3444
                                mem[mem[64] + 36] = _3445
                                mem[mem[64] + 68] = 160
                                _3540 = mem[_3446]
                                mem[mem[64] + 164] = mem[_3446]
                                idx = 0
                                t = _3446 + 32
                                u = mem[64] + 196
                                while idx < _3540:
                                    mem[u] = mem[t + 12 len 20]
                                    _3339 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_2541)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _3444, _3445, 160, address(_2541), block.timestamp, mem[mem[64] + 164 len (32 * _3540) + 32]
                                if not ext_call.success:
                                _4159 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4179 = mem[_4159]
                                require mem[_4159] <= test266151307()
                                require _4159 + mem[_4159] + 31 < _4159 + return_data.size
                                _4186 = mem[_4159 + mem[_4159]]
                                if mem[_4159 + mem[_4159]] > test266151307():
                                    revert with 'NH{q', 65
                                if _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1 > test266151307() or floor32(mem[_4159 + mem[_4159]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _4159 + ceil32(return_data.size) + floor32(mem[_4159 + mem[_4159]]) + 1
                                mem[_4159 + ceil32(return_data.size)] = _4186
                                require _4179 + (32 * _4186) + 32 <= return_data.size
                                idx = _4159 + _4179 + 32
                                t = _4159 + ceil32(return_data.size) + 32
                                while idx < _4159 + _4179 + (32 * _4186) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _3339 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _3339 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _1878 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_1878).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4627 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4627:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4678 = mem[(32 * idx) + mem[320] + 32]
                                _4949 = mem[352]
                                s = 0
                                while s < _4949:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4989 = mem[(32 * idx) + mem[256] + 32]
                                    _4990 = mem[288]
                                    _4991 = mem[224]
                                    _4992 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4989
                                    mem[mem[64] + 36] = _4990
                                    mem[mem[64] + 68] = 160
                                    _5002 = mem[_4991]
                                    mem[mem[64] + 164] = mem[_4991]
                                    idx = 0
                                    t = _4991 + 32
                                    u = mem[64] + 196
                                    while idx < _5002:
                                        mem[u] = mem[t + 12 len 20]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_4992 + 100] = address(_4678)
                                    mem[_4992 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _4992 + (32 * _5002) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5189 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5200 = mem[_5189]
                                    require mem[_5189] <= test266151307()
                                    require _5189 + mem[_5189] + 31 < _5189 + return_data.size
                                    _5209 = mem[_5189 + mem[_5189]]
                                    if mem[_5189 + mem[_5189]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1 > test266151307() or floor32(mem[_5189 + mem[_5189]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5189 + ceil32(return_data.size) + floor32(mem[_5189 + mem[_5189]]) + 1
                                    mem[_5189 + ceil32(return_data.size)] = _5209
                                    require _5200 + (32 * _5209) + 32 <= return_data.size
                                    idx = _5189 + _5200 + 32
                                    t = _5189 + ceil32(return_data.size) + 32
                                    while idx < _5189 + _5200 + (32 * _5209) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4627 = mem[mem[320]]
                                        _4949 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4627 = mem[mem[320]]
                                    _4949 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4627 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_1878).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = this.address
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (6 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _4629 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _4629:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _4679 = mem[(32 * idx) + mem[320] + 32]
                                _4950 = mem[352]
                                s = 0
                                while s < _4950:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _4993 = mem[(32 * idx) + mem[256] + 32]
                                    _4994 = mem[288]
                                    _4995 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _4993
                                    mem[mem[64] + 36] = _4994
                                    mem[mem[64] + 68] = 160
                                    _5003 = mem[_4995]
                                    mem[mem[64] + 164] = mem[_4995]
                                    idx = 0
                                    t = _4995 + 32
                                    u = mem[64] + 196
                                    while idx < _5003:
                                        mem[u] = mem[t + 12 len 20]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_4679)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4993, _4994, 160, address(_4679), block.timestamp, mem[mem[64] + 164 len (32 * _5003) + 32]
                                    if not ext_call.success:
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5202 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5210 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1 > test266151307() or floor32(mem[_5190 + mem[_5190]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5190 + ceil32(return_data.size) + floor32(mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5210
                                    require _5202 + (32 * _5210) + 32 <= return_data.size
                                    idx = _5190 + _5202 + 32
                                    t = _5190 + ceil32(return_data.size) + 32
                                    while idx < _5190 + _5202 + (32 * _5210) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _4629 = mem[mem[320]]
                                        _4950 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _4629 = mem[mem[320]]
                                    _4950 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _4629 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                else:
                    mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544] = stor3[40].field_0
                    idx = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 544
                    s = 0
                    while (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 512 > idx:
                        mem[idx + 32] = stor3[s + 40].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[320] = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512
                    mem[352] = uint256(stor3.field_10496)
                    mem[384] = uint256(stor3.field_10752)
                    mem[416] = uint256(stor3.field_11008)
                    if bool(stor1[address(msg.sender)]) != 1:
                        revert with 0, 'Wut?'
                    if block.number < uint256(stor3.field_10752):
                        revert with 0, 'B'
                    if block.timestamp < uint256(stor3.field_11008):
                        revert with 0, 'T'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 1:
                        revert with 0, 'Woot: rpmn!'
                    if sub_362b426d > 2:
                        revert with 'NH{q', 33
                    if sub_362b426d == 2:
                        mem[0] = msg.sender
                        mem[32] = 1
                        if bool(stor1[address(msg.sender)]) != 1:
                            revert with 0, 'Wut?'
                        if block.number < uint256(stor3.field_10752):
                            revert with 0, 'B'
                        if block.timestamp < uint256(stor3.field_11008):
                            revert with 0, 'T'
                        idx = 0
                        while idx < uint256(stor3.field_10240):
                            if idx >= mem[mem[320]]:
                                revert with 'NH{q', 50
                            _4120 = mem[(32 * idx) + mem[320] + 32]
                            _4634 = mem[352]
                            s = 0
                            while s < _4634:
                                if idx >= mem[mem[256]]:
                                    revert with 'NH{q', 50
                                _4687 = mem[(32 * idx) + mem[256] + 32]
                                _4688 = mem[288]
                                _4689 = mem[224]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _4687
                                mem[mem[64] + 36] = _4688
                                mem[mem[64] + 68] = 160
                                _4742 = mem[_4689]
                                mem[mem[64] + 164] = mem[_4689]
                                idx = 0
                                t = _4689 + 32
                                u = mem[64] + 196
                                while idx < _4742:
                                    mem[u] = mem[t + 12 len 20]
                                    _4634 = mem[352]
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 100] = address(_4120)
                                mem[mem[64] + 132] = block.timestamp
                                call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4687, _4688, 160, address(_4120), block.timestamp, mem[mem[64] + 164 len (32 * _4742) + 32]
                                if not ext_call.success:
                                _5008 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5014 = mem[_5008]
                                require mem[_5008] <= test266151307()
                                require _5008 + mem[_5008] + 31 < _5008 + return_data.size
                                _5016 = mem[_5008 + mem[_5008]]
                                if mem[_5008 + mem[_5008]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1 > test266151307() or floor32(mem[_5008 + mem[_5008]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5008 + ceil32(return_data.size) + floor32(mem[_5008 + mem[_5008]]) + 1
                                mem[_5008 + ceil32(return_data.size)] = _5016
                                require _5014 + (32 * _5016) + 32 <= return_data.size
                                idx = _5008 + _5014 + 32
                                t = _5008 + ceil32(return_data.size) + 32
                                while idx < _5008 + _5014 + (32 * _5016) + 32:
                                    require mem[idx] == mem[idx]
                                    mem[t] = mem[idx]
                                    _4634 = mem[352]
                                    idx = idx + 32
                                    t = t + 32
                                    continue 
                                if s == -1:
                                    revert with 'NH{q', 17
                                _4634 = mem[352]
                                s = s + 1
                                continue 
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if 0 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        if uint256(stor3.field_9472) < 1:
                            revert with 'NH{q', 17
                        if uint256(stor3.field_9472) - 1 >= uint256(stor3.field_9472):
                            revert with 'NH{q', 50
                        _3585 = mem[(32 * uint256(stor3.field_9472) - 1) + 480]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 548] = this.address
                        staticcall mem[492 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + 544] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = uint256(stor3.field_8704)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 580] = 0
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 612] = 160
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 708] = uint256(stor3.field_9472)
                        idx = 0
                        s = 480
                        t = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 740
                        while idx < uint256(stor3.field_9472):
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 644] = this.address
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 676] = block.timestamp
                        require ext_code.size(address(stor3.field_9216))
                        call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548 len (96 * uint256(stor3.field_9472)) + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 548] = this.address
                        staticcall address(_3585).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + ceil32(return_data.size) + 544] = ext_call.return_data[0]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if uint256(stor3.field_9472) > test266151307():
                            revert with 'NH{q', 65
                        mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544] = uint256(stor3.field_9472)
                        if not uint256(stor3.field_9472):
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _5148 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _5148:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5162 = mem[(32 * idx) + mem[320] + 32]
                                _5239 = mem[352]
                                s = 0
                                while s < _5239:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5251 = mem[(32 * idx) + mem[256] + 32]
                                    _5252 = mem[288]
                                    _5253 = mem[224]
                                    _5254 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5251
                                    mem[mem[64] + 36] = _5252
                                    mem[mem[64] + 68] = 160
                                    _5259 = mem[_5253]
                                    mem[mem[64] + 164] = mem[_5253]
                                    idx = 0
                                    t = _5253 + 32
                                    u = mem[64] + 196
                                    while idx < _5259:
                                        mem[u] = mem[t + 12 len 20]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_5254 + 100] = address(_5162)
                                    mem[_5254 + 132] = block.timestamp
                                    call address(stor3.field_9216).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5254 + (32 * _5259) + -mem[64] + 192]
                                    if not ext_call.success:
                                    _5281 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5284 = mem[_5281]
                                    require mem[_5281] <= test266151307()
                                    require _5281 + mem[_5281] + 31 < _5281 + return_data.size
                                    _5287 = mem[_5281 + mem[_5281]]
                                    if mem[_5281 + mem[_5281]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1 > test266151307() or floor32(mem[_5281 + mem[_5281]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5281 + ceil32(return_data.size) + floor32(mem[_5281 + mem[_5281]]) + 1
                                    mem[_5281 + ceil32(return_data.size)] = _5287
                                    require _5284 + (32 * _5287) + 32 <= return_data.size
                                    idx = _5281 + _5284 + 32
                                    t = _5281 + ceil32(return_data.size) + 32
                                    while idx < _5281 + _5284 + (32 * _5287) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5148 = mem[mem[320]]
                                        _5239 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5148 = mem[mem[320]]
                                    _5239 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5148 = mem[mem[320]]
                                idx = idx + 1
                                continue 
                        else:
                            mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576 len 32 * uint256(stor3.field_9472)] = call.data[calldata.size len 32 * uint256(stor3.field_9472)]
                            idx = 0
                            while idx < uint256(stor3.field_9472):
                                if idx >= uint256(stor3.field_9472):
                                    revert with 'NH{q', 50
                                if uint256(stor3.field_9472) < 1:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) - 1 < idx:
                                    revert with 'NH{q', 17
                                if uint256(stor3.field_9472) + -idx - 1 >= mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint256(stor3.field_9472) + -idx - 1) + (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = mem[(32 * idx) + 492 len 20]
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 580] = address(stor3.field_9216)
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 612] = ext_call.return_data[0]
                            call address(_3585).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(stor3.field_9216), ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 580] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 612] = 0
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 644] = 160
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740] = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]
                            idx = 0
                            s = (32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 576
                            t = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 772
                            while idx < mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 676] = this.address
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 708] = block.timestamp
                            require ext_code.size(address(stor3.field_9216))
                            call address(stor3.field_9216).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 740 len (32 * mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (2 * ceil32(return_data.size)) + 544]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            staticcall mem[492 len 20].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[64] = (64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 576] = ext_call.return_data[0]
                            mem[(64 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + (32 * uint256(stor3.field_10240)) + (4 * ceil32(return_data.size)) + 608] = 0
                            emit 0x20343ec1: ext_call.return_data[0], 0
                            if 0 > uint256(stor3.field_8960):
                                revert with 0, 'Rpwf'
                            sub_362b426d = 2
                            mem[0] = msg.sender
                            mem[32] = 1
                            if bool(stor1[address(msg.sender)]) != 1:
                                revert with 0, 'Wut?'
                            if block.number < uint256(stor3.field_10752):
                                revert with 0, 'B'
                            if block.timestamp < uint256(stor3.field_11008):
                                revert with 0, 'T'
                            _5150 = mem[(32 * uint256(stor3.field_9472)) + (32 * uint256(stor3.field_9728)) + 512]
                            idx = 0
                            while idx < _5150:
                                if idx >= mem[mem[320]]:
                                    revert with 'NH{q', 50
                                _5163 = mem[(32 * idx) + mem[320] + 32]
                                _5240 = mem[352]
                                s = 0
                                while s < _5240:
                                    if idx >= mem[mem[256]]:
                                        revert with 'NH{q', 50
                                    _5255 = mem[(32 * idx) + mem[256] + 32]
                                    _5256 = mem[288]
                                    _5257 = mem[224]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5255
                                    mem[mem[64] + 36] = _5256
                                    mem[mem[64] + 68] = 160
                                    _5260 = mem[_5257]
                                    mem[mem[64] + 164] = mem[_5257]
                                    idx = 0
                                    t = _5257 + 32
                                    u = mem[64] + 196
                                    while idx < _5260:
                                        mem[u] = mem[t + 12 len 20]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[mem[64] + 100] = address(_5163)
                                    mem[mem[64] + 132] = block.timestamp
                                    call address(stor3.field_9216).swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5255, _5256, 160, address(_5163), block.timestamp, mem[mem[64] + 164 len (32 * _5260) + 32]
                                    if not ext_call.success:
                                    _5282 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5286 = mem[_5282]
                                    require mem[_5282] <= test266151307()
                                    require _5282 + mem[_5282] + 31 < _5282 + return_data.size
                                    _5288 = mem[_5282 + mem[_5282]]
                                    if mem[_5282 + mem[_5282]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1 > test266151307() or floor32(mem[_5282 + mem[_5282]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5282 + ceil32(return_data.size) + floor32(mem[_5282 + mem[_5282]]) + 1
                                    mem[_5282 + ceil32(return_data.size)] = _5288
                                    require _5286 + (32 * _5288) + 32 <= return_data.size
                                    idx = _5282 + _5286 + 32
                                    t = _5282 + ceil32(return_data.size) + 32
                                    while idx < _5282 + _5286 + (32 * _5288) + 32:
                                        require mem[idx] == mem[idx]
                                        mem[t] = mem[idx]
                                        _5150 = mem[mem[320]]
                                        _5240 = mem[352]
                                        idx = idx + 32
                                        t = t + 32
                                        continue 
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    _5150 = mem[mem[320]]
                                    _5240 = mem[352]
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _5150 = mem[mem[320]]
                                idx = idx + 1
                                continue 
}



}
