contract main {




// =====================  Runtime code  =====================


#
#  - sub_d85eb6b0(?)
#  - sub_f0c462b8(?)
#  - _fallback()
#
function withdraw(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_9cced695(?) {
    require calldata.size - 4 >= 64
    require arg2 == address(arg2)
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkCost(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkExtract(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg2))
    staticcall address(arg2).getPriceSource() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
        revert with 'NH{q', 17
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkLiquidation(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= ext_call.return_data[0]:
        return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 < ext_call.return_data[0]:
        revert with 'NH{q', 17
    return bool(ext_call.return_data[0]), 
           (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) - ext_call.return_data[0],
           ext_call.return_data[0]
}

function pangolinCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require arg4.length >= 96
    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
    require cd[(arg4 + 100)] == address(cd[(arg4 + 100)])
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != msg.sender:
        revert with 0, 'Sender wrong'
    mem[(4 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 68)])
    if not arg2:
        mem[(4 * ceil32(return_data.size)) + 132] = arg3
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg3
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(address(cd[(arg4 + 100)]))
        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg3 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 43
            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_OU'
            mem[(8 * ceil32(return_data.size)) + 574] = 'TPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5249 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5345 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5345
                                require return_data.size >= _5249 + (32 * _5345) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5345] = mem[(10 * ceil32(return_data.size)) + _5249 + 602 len 32 * _5345]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7073 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7073] == bool(mem[_7073])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7457 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7553 = mem[_7457]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7553
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7553
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7841 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7841] == bool(mem[_7841])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5248 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5344 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5344
                                    require return_data.size >= _5248 + (32 * _5344) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5344] = mem[(10 * ceil32(return_data.size)) + _5248 + 602 len 32 * _5344]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7072 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7072] == bool(mem[_7072])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7456 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7552 = mem[_7456]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7552
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7552
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7840 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7840] == bool(mem[_7840])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5247 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5343 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5343
                                    require return_data.size >= _5247 + (32 * _5343) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5343] = mem[(10 * ceil32(return_data.size)) + _5247 + 602 len 32 * _5343]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7071 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7071] == bool(mem[_7071])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7455 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7551 = mem[_7455]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7551
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7551
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7839 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7839] == bool(mem[_7839])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5252 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5348 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5348
                                require return_data.size >= _5252 + (32 * _5348) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5348] = mem[(10 * ceil32(return_data.size)) + _5252 + 602 len 32 * _5348]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7076 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7076] == bool(mem[_7076])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7460 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7556 = mem[_7460]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7556
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7556
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7844 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7844] == bool(mem[_7844])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5251 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5347 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5347
                                    require return_data.size >= _5251 + (32 * _5347) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5347] = mem[(10 * ceil32(return_data.size)) + _5251 + 602 len 32 * _5347]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7075 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7075] == bool(mem[_7075])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7459 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7555 = mem[_7459]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7555
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7555
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7843 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7843] == bool(mem[_7843])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5250 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5346 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5346
                                    require return_data.size >= _5250 + (32 * _5346) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5346] = mem[(10 * ceil32(return_data.size)) + _5250 + 602 len 32 * _5346]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7074 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7074] == bool(mem[_7074])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7458 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7554 = mem[_7458]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7554
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7554
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7842 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7842] == bool(mem[_7842])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5255 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5351 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5351
                                require return_data.size >= _5255 + (32 * _5351) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5351] = mem[(10 * ceil32(return_data.size)) + _5255 + 602 len 32 * _5351]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7079 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7079] == bool(mem[_7079])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7559 = mem[_7463]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7559
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7559
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7847 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7847] == bool(mem[_7847])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5254 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5350 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5350
                                    require return_data.size >= _5254 + (32 * _5350) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5350] = mem[(10 * ceil32(return_data.size)) + _5254 + 602 len 32 * _5350]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7078 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7078] == bool(mem[_7078])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7462 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7558 = mem[_7462]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7558
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7558
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7846 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7846] == bool(mem[_7846])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5253 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5349 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5349
                                    require return_data.size >= _5253 + (32 * _5349) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5349] = mem[(10 * ceil32(return_data.size)) + _5253 + 602 len 32 * _5349]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7077 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7077] == bool(mem[_7077])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7461 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7557 = mem[_7461]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7557
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7557
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7845 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7845] == bool(mem[_7845])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5258 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5354 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5354
                                require return_data.size >= _5258 + (32 * _5354) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5354] = mem[(10 * ceil32(return_data.size)) + _5258 + 602 len 32 * _5354]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7082 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7082] == bool(mem[_7082])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7466 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7562 = mem[_7466]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7562
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7562
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7850 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7850] == bool(mem[_7850])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5257 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5353 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5353
                                    require return_data.size >= _5257 + (32 * _5353) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5353] = mem[(10 * ceil32(return_data.size)) + _5257 + 602 len 32 * _5353]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7081 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7081] == bool(mem[_7081])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7465 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7561 = mem[_7465]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7561
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7561
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7849 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7849] == bool(mem[_7849])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5256 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5352 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5352
                                    require return_data.size >= _5256 + (32 * _5352) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5352] = mem[(10 * ceil32(return_data.size)) + _5256 + 602 len 32 * _5352]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7080 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7080] == bool(mem[_7080])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7464 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7560 = mem[_7464]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7560
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7560
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7848 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7848] == bool(mem[_7848])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5261 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5357 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5357
                                require return_data.size >= _5261 + (32 * _5357) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5357] = mem[(10 * ceil32(return_data.size)) + _5261 + 602 len 32 * _5357]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7085 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7085] == bool(mem[_7085])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7469 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7565 = mem[_7469]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7565
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7565
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7853 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7853] == bool(mem[_7853])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5260 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5356 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5356
                                    require return_data.size >= _5260 + (32 * _5356) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5356] = mem[(10 * ceil32(return_data.size)) + _5260 + 602 len 32 * _5356]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7084 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7084] == bool(mem[_7084])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7468 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7564 = mem[_7468]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7564
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7564
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7852 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7852] == bool(mem[_7852])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5259 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5355 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5355
                                    require return_data.size >= _5259 + (32 * _5355) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5355] = mem[(10 * ceil32(return_data.size)) + _5259 + 602 len 32 * _5355]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7083 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7083] == bool(mem[_7083])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7467 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7563 = mem[_7467]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7563
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7563
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7851 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7851] == bool(mem[_7851])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5264 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5360 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5360
                                require return_data.size >= _5264 + (32 * _5360) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5360] = mem[(10 * ceil32(return_data.size)) + _5264 + 602 len 32 * _5360]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7088 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7088] == bool(mem[_7088])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7472 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7568 = mem[_7472]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7568
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7568
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7856 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7856] == bool(mem[_7856])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5263 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5359 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5359
                                    require return_data.size >= _5263 + (32 * _5359) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5359] = mem[(10 * ceil32(return_data.size)) + _5263 + 602 len 32 * _5359]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7087 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7087] == bool(mem[_7087])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7471 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7567 = mem[_7471]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7567
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7567
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7855 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7855] == bool(mem[_7855])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5262 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5358 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5358
                                    require return_data.size >= _5262 + (32 * _5358) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5358] = mem[(10 * ceil32(return_data.size)) + _5262 + 602 len 32 * _5358]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7086 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7086] == bool(mem[_7086])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7470 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7566 = mem[_7470]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7566
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7566
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7854 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7854] == bool(mem[_7854])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5267 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5363 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5363
                                require return_data.size >= _5267 + (32 * _5363) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5363] = mem[(10 * ceil32(return_data.size)) + _5267 + 602 len 32 * _5363]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7091 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7091] == bool(mem[_7091])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7475 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7571 = mem[_7475]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7571
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7571
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7859 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7859] == bool(mem[_7859])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5266 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5362 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5362
                                    require return_data.size >= _5266 + (32 * _5362) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5362] = mem[(10 * ceil32(return_data.size)) + _5266 + 602 len 32 * _5362]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7090] == bool(mem[_7090])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7474 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7570 = mem[_7474]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7570
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7570
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7858 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7858] == bool(mem[_7858])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5265 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5361 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5361
                                    require return_data.size >= _5265 + (32 * _5361) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5361] = mem[(10 * ceil32(return_data.size)) + _5265 + 602 len 32 * _5361]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7089 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7089] == bool(mem[_7089])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7473 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7569 = mem[_7473]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7569
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7569
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7857 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7857] == bool(mem[_7857])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5270 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5366 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5366
                                require return_data.size >= _5270 + (32 * _5366) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5366] = mem[(10 * ceil32(return_data.size)) + _5270 + 602 len 32 * _5366]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7094 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7094] == bool(mem[_7094])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7478 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7574 = mem[_7478]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7574
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7574
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7862 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7862] == bool(mem[_7862])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5269 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5365 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5365
                                    require return_data.size >= _5269 + (32 * _5365) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5365] = mem[(10 * ceil32(return_data.size)) + _5269 + 602 len 32 * _5365]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7093 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7093] == bool(mem[_7093])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7573 = mem[_7477]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7573
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7573
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7861 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7861] == bool(mem[_7861])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5268 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5364 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5364
                                    require return_data.size >= _5268 + (32 * _5364) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5364] = mem[(10 * ceil32(return_data.size)) + _5268 + 602 len 32 * _5364]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7092 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7092] == bool(mem[_7092])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7572 = mem[_7476]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7572
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7572
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7860 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7860] == bool(mem[_7860])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5273 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5369 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5369
                                require return_data.size >= _5273 + (32 * _5369) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5369] = mem[(10 * ceil32(return_data.size)) + _5273 + 602 len 32 * _5369]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7097 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7097] == bool(mem[_7097])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7577 = mem[_7481]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7577
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7577
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7865 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7865] == bool(mem[_7865])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5272 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5368 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5368
                                    require return_data.size >= _5272 + (32 * _5368) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5368] = mem[(10 * ceil32(return_data.size)) + _5272 + 602 len 32 * _5368]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7096 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7096] == bool(mem[_7096])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7480 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7576 = mem[_7480]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7576
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7576
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7864 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7864] == bool(mem[_7864])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5271 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5367 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5367
                                    require return_data.size >= _5271 + (32 * _5367) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5367] = mem[(10 * ceil32(return_data.size)) + _5271 + 602 len 32 * _5367]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7095 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7095] == bool(mem[_7095])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7575 = mem[_7479]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7575
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7575
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7863 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7863] == bool(mem[_7863])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5276 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5372 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5372
                                require return_data.size >= _5276 + (32 * _5372) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5372] = mem[(10 * ceil32(return_data.size)) + _5276 + 602 len 32 * _5372]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7100 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7100] == bool(mem[_7100])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7484 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7580 = mem[_7484]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7580
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7580
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7868 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7868] == bool(mem[_7868])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5275 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5371 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5371
                                    require return_data.size >= _5275 + (32 * _5371) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5371] = mem[(10 * ceil32(return_data.size)) + _5275 + 602 len 32 * _5371]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7099 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7099] == bool(mem[_7099])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7483 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7579 = mem[_7483]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7579
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7579
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7867 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7867] == bool(mem[_7867])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5274 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5370 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5370
                                    require return_data.size >= _5274 + (32 * _5370) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5370] = mem[(10 * ceil32(return_data.size)) + _5274 + 602 len 32 * _5370]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7098 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7098] == bool(mem[_7098])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7482 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7578 = mem[_7482]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7578
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7578
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7866 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7866] == bool(mem[_7866])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5279 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5375 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5375
                                require return_data.size >= _5279 + (32 * _5375) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5375] = mem[(10 * ceil32(return_data.size)) + _5279 + 602 len 32 * _5375]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7103 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7103] == bool(mem[_7103])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7583 = mem[_7487]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7583
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7583
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7871 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7871] == bool(mem[_7871])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5278 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5374 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5374
                                    require return_data.size >= _5278 + (32 * _5374) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5374] = mem[(10 * ceil32(return_data.size)) + _5278 + 602 len 32 * _5374]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7102 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7102] == bool(mem[_7102])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7486 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7582 = mem[_7486]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7582
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7582
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7870 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7870] == bool(mem[_7870])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5277 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5373 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5373
                                    require return_data.size >= _5277 + (32 * _5373) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5373] = mem[(10 * ceil32(return_data.size)) + _5277 + 602 len 32 * _5373]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7101 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7101] == bool(mem[_7101])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7485 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7581 = mem[_7485]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7581
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7581
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7869 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7869] == bool(mem[_7869])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5282 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5378 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5378
                                require return_data.size >= _5282 + (32 * _5378) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5378] = mem[(10 * ceil32(return_data.size)) + _5282 + 602 len 32 * _5378]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7106 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7106] == bool(mem[_7106])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7490 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7586 = mem[_7490]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7586
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7586
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7874 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7874] == bool(mem[_7874])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5281 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5377 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5377
                                    require return_data.size >= _5281 + (32 * _5377) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5377] = mem[(10 * ceil32(return_data.size)) + _5281 + 602 len 32 * _5377]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7105] == bool(mem[_7105])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7489 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7585 = mem[_7489]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7585
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7585
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7873 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7873] == bool(mem[_7873])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5280 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5376 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5376
                                    require return_data.size >= _5280 + (32 * _5376) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5376] = mem[(10 * ceil32(return_data.size)) + _5280 + 602 len 32 * _5376]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7104 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7104] == bool(mem[_7104])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7488 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7584 = mem[_7488]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7584
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7584
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7872 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7872] == bool(mem[_7872])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5285 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5381 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5381
                                require return_data.size >= _5285 + (32 * _5381) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5381] = mem[(10 * ceil32(return_data.size)) + _5285 + 602 len 32 * _5381]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7109 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7109] == bool(mem[_7109])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7493 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7589 = mem[_7493]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7589
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7589
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7877 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7877] == bool(mem[_7877])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5284 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5380 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5380
                                    require return_data.size >= _5284 + (32 * _5380) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5380] = mem[(10 * ceil32(return_data.size)) + _5284 + 602 len 32 * _5380]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7108 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7108] == bool(mem[_7108])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7492 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7588 = mem[_7492]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7588
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7588
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7876 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7876] == bool(mem[_7876])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5283 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5379 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5379
                                    require return_data.size >= _5283 + (32 * _5379) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5379] = mem[(10 * ceil32(return_data.size)) + _5283 + 602 len 32 * _5379]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7107 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7107] == bool(mem[_7107])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7491 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7587 = mem[_7491]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7587
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7587
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7875 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7875] == bool(mem[_7875])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5288 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5384 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5384
                                require return_data.size >= _5288 + (32 * _5384) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5384] = mem[(10 * ceil32(return_data.size)) + _5288 + 602 len 32 * _5384]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7112 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7112] == bool(mem[_7112])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7592 = mem[_7496]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7592
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7592
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7880 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7880] == bool(mem[_7880])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5287 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5383 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5383
                                    require return_data.size >= _5287 + (32 * _5383) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5383] = mem[(10 * ceil32(return_data.size)) + _5287 + 602 len 32 * _5383]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7111 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7111] == bool(mem[_7111])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7495 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7591 = mem[_7495]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7591
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7591
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7879 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7879] == bool(mem[_7879])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5286 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5382 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5382
                                    require return_data.size >= _5286 + (32 * _5382) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5382] = mem[(10 * ceil32(return_data.size)) + _5286 + 602 len 32 * _5382]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7110 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7110] == bool(mem[_7110])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7494 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7590 = mem[_7494]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7590
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7590
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7878 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7878] == bool(mem[_7878])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5291 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5387 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5387
                                require return_data.size >= _5291 + (32 * _5387) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5387] = mem[(10 * ceil32(return_data.size)) + _5291 + 602 len 32 * _5387]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7115 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7115] == bool(mem[_7115])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7499 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7595 = mem[_7499]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7595
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7595
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7883 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7883] == bool(mem[_7883])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5290 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5386 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5386
                                    require return_data.size >= _5290 + (32 * _5386) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5386] = mem[(10 * ceil32(return_data.size)) + _5290 + 602 len 32 * _5386]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7114 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7114] == bool(mem[_7114])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7498 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7594 = mem[_7498]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7594
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7594
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7882 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7882] == bool(mem[_7882])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5289 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5385 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5385
                                    require return_data.size >= _5289 + (32 * _5385) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5385] = mem[(10 * ceil32(return_data.size)) + _5289 + 602 len 32 * _5385]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7113 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7113] == bool(mem[_7113])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7497 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7593 = mem[_7497]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7593
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7593
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7881 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7881] == bool(mem[_7881])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5294 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5390 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5390
                                require return_data.size >= _5294 + (32 * _5390) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5390] = mem[(10 * ceil32(return_data.size)) + _5294 + 602 len 32 * _5390]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7118] == bool(mem[_7118])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7502 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7598 = mem[_7502]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7598
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7598
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7886 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7886] == bool(mem[_7886])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5293 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5389 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5389
                                    require return_data.size >= _5293 + (32 * _5389) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5389] = mem[(10 * ceil32(return_data.size)) + _5293 + 602 len 32 * _5389]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7117 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7117] == bool(mem[_7117])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7501 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7597 = mem[_7501]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7597
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7597
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7885 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7885] == bool(mem[_7885])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5292 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5388 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5388
                                    require return_data.size >= _5292 + (32 * _5388) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5388] = mem[(10 * ceil32(return_data.size)) + _5292 + 602 len 32 * _5388]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7116 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7116] == bool(mem[_7116])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7500 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7596 = mem[_7500]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7596
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7596
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7884 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7884] == bool(mem[_7884])
    else:
        mem[(4 * ceil32(return_data.size)) + 132] = arg2
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg2
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(address(cd[(arg4 + 100)]))
        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg2 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 43
            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_OU'
            mem[(8 * ceil32(return_data.size)) + 574] = 'TPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5297 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5393 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5393
                                require return_data.size >= _5297 + (32 * _5393) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5393] = mem[(10 * ceil32(return_data.size)) + _5297 + 602 len 32 * _5393]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7121 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7121] == bool(mem[_7121])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7505 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7601 = mem[_7505]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7601
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7601
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7889 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7889] == bool(mem[_7889])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5296 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5392 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5392
                                    require return_data.size >= _5296 + (32 * _5392) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5392] = mem[(10 * ceil32(return_data.size)) + _5296 + 602 len 32 * _5392]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7120 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7120] == bool(mem[_7120])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7504 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7600 = mem[_7504]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7600
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7600
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7888 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7888] == bool(mem[_7888])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5295 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5391 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5391
                                    require return_data.size >= _5295 + (32 * _5391) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5391] = mem[(10 * ceil32(return_data.size)) + _5295 + 602 len 32 * _5391]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7119 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7119] == bool(mem[_7119])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7503 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7599 = mem[_7503]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7599
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7599
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7887 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7887] == bool(mem[_7887])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5300 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5396 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5396
                                require return_data.size >= _5300 + (32 * _5396) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5396] = mem[(10 * ceil32(return_data.size)) + _5300 + 602 len 32 * _5396]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7124 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7124] == bool(mem[_7124])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7508 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7604 = mem[_7508]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7604
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7604
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7892] == bool(mem[_7892])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5299 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5395 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5395
                                    require return_data.size >= _5299 + (32 * _5395) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5395] = mem[(10 * ceil32(return_data.size)) + _5299 + 602 len 32 * _5395]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7123 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7123] == bool(mem[_7123])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7507 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7603 = mem[_7507]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7603
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7603
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7891 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7891] == bool(mem[_7891])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5298 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5394 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5394
                                    require return_data.size >= _5298 + (32 * _5394) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5394] = mem[(10 * ceil32(return_data.size)) + _5298 + 602 len 32 * _5394]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7122 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7122] == bool(mem[_7122])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7506 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7602 = mem[_7506]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7602
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7602
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7890 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7890] == bool(mem[_7890])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5303 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5399 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5399
                                require return_data.size >= _5303 + (32 * _5399) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5399] = mem[(10 * ceil32(return_data.size)) + _5303 + 602 len 32 * _5399]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7127 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7127] == bool(mem[_7127])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7511 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7607 = mem[_7511]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7607
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7607
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7895 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7895] == bool(mem[_7895])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5302 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5398 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5398
                                    require return_data.size >= _5302 + (32 * _5398) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5398] = mem[(10 * ceil32(return_data.size)) + _5302 + 602 len 32 * _5398]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7126 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7126] == bool(mem[_7126])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7510 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7606 = mem[_7510]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7606
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7606
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7894 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7894] == bool(mem[_7894])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5301 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5397 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5397
                                    require return_data.size >= _5301 + (32 * _5397) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5397] = mem[(10 * ceil32(return_data.size)) + _5301 + 602 len 32 * _5397]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7125 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7125] == bool(mem[_7125])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7509 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7605 = mem[_7509]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7605
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7605
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7893 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7893] == bool(mem[_7893])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5306 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5402 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5402
                                require return_data.size >= _5306 + (32 * _5402) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5402] = mem[(10 * ceil32(return_data.size)) + _5306 + 602 len 32 * _5402]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7130 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7130] == bool(mem[_7130])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7514 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7610 = mem[_7514]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7610
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7610
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7898] == bool(mem[_7898])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5305 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5401 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5401
                                    require return_data.size >= _5305 + (32 * _5401) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5401] = mem[(10 * ceil32(return_data.size)) + _5305 + 602 len 32 * _5401]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7129 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7129] == bool(mem[_7129])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7513 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7609 = mem[_7513]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7609
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7609
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7897 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7897] == bool(mem[_7897])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5304 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5400 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5400
                                    require return_data.size >= _5304 + (32 * _5400) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5400] = mem[(10 * ceil32(return_data.size)) + _5304 + 602 len 32 * _5400]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7128 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7128] == bool(mem[_7128])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7512 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7608 = mem[_7512]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7608
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7608
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7896 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7896] == bool(mem[_7896])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5309 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5405 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5405
                                require return_data.size >= _5309 + (32 * _5405) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5405] = mem[(10 * ceil32(return_data.size)) + _5309 + 602 len 32 * _5405]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7133 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7133] == bool(mem[_7133])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7517 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7613 = mem[_7517]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7613
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7613
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7901 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7901] == bool(mem[_7901])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5308 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5404 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5404
                                    require return_data.size >= _5308 + (32 * _5404) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5404] = mem[(10 * ceil32(return_data.size)) + _5308 + 602 len 32 * _5404]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7132 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7132] == bool(mem[_7132])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7516 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7612 = mem[_7516]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7612
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7612
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7900 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7900] == bool(mem[_7900])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5307 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5403 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5403
                                    require return_data.size >= _5307 + (32 * _5403) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5403] = mem[(10 * ceil32(return_data.size)) + _5307 + 602 len 32 * _5403]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7131 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7131] == bool(mem[_7131])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7515 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7611 = mem[_7515]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7611
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7611
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7899 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7899] == bool(mem[_7899])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5312 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5408 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5408
                                require return_data.size >= _5312 + (32 * _5408) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5408] = mem[(10 * ceil32(return_data.size)) + _5312 + 602 len 32 * _5408]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7136 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7136] == bool(mem[_7136])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7520 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7616 = mem[_7520]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7616
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7616
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7904 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7904] == bool(mem[_7904])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5311 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5407 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5407
                                    require return_data.size >= _5311 + (32 * _5407) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5407] = mem[(10 * ceil32(return_data.size)) + _5311 + 602 len 32 * _5407]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7135 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7135] == bool(mem[_7135])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7519 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7615 = mem[_7519]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7615
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7615
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7903 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7903] == bool(mem[_7903])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5310 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5406 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5406
                                    require return_data.size >= _5310 + (32 * _5406) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5406] = mem[(10 * ceil32(return_data.size)) + _5310 + 602 len 32 * _5406]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7134 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7134] == bool(mem[_7134])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7518 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7614 = mem[_7518]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7614
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7614
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7902 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7902] == bool(mem[_7902])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5315 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5411 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5411
                                require return_data.size >= _5315 + (32 * _5411) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5411] = mem[(10 * ceil32(return_data.size)) + _5315 + 602 len 32 * _5411]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7139 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7139] == bool(mem[_7139])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7523 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7619 = mem[_7523]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7619
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7619
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7907 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7907] == bool(mem[_7907])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5314 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5410 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5410
                                    require return_data.size >= _5314 + (32 * _5410) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5410] = mem[(10 * ceil32(return_data.size)) + _5314 + 602 len 32 * _5410]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7138 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7138] == bool(mem[_7138])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7522 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7618 = mem[_7522]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7618
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7618
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7906 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7906] == bool(mem[_7906])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5313 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5409 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5409
                                    require return_data.size >= _5313 + (32 * _5409) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5409] = mem[(10 * ceil32(return_data.size)) + _5313 + 602 len 32 * _5409]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7137 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7137] == bool(mem[_7137])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7521 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7617 = mem[_7521]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7617
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7617
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7905 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7905] == bool(mem[_7905])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5318 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5414 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5414
                                require return_data.size >= _5318 + (32 * _5414) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5414] = mem[(10 * ceil32(return_data.size)) + _5318 + 602 len 32 * _5414]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7142 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7142] == bool(mem[_7142])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7526 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7622 = mem[_7526]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7622
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7622
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7910 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7910] == bool(mem[_7910])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5317 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5413 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5413
                                    require return_data.size >= _5317 + (32 * _5413) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5413] = mem[(10 * ceil32(return_data.size)) + _5317 + 602 len 32 * _5413]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7141 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7141] == bool(mem[_7141])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7525 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7621 = mem[_7525]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7621
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7621
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7909 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7909] == bool(mem[_7909])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5316 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5412 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5412
                                    require return_data.size >= _5316 + (32 * _5412) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5412] = mem[(10 * ceil32(return_data.size)) + _5316 + 602 len 32 * _5412]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7140 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7140] == bool(mem[_7140])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7524 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7620 = mem[_7524]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7620
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7620
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7908 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7908] == bool(mem[_7908])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5321 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5417 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5417
                                require return_data.size >= _5321 + (32 * _5417) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5417] = mem[(10 * ceil32(return_data.size)) + _5321 + 602 len 32 * _5417]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7145 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7145] == bool(mem[_7145])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7529 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7625 = mem[_7529]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7625
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7625
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7913 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7913] == bool(mem[_7913])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5320 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5416 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5416
                                    require return_data.size >= _5320 + (32 * _5416) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5416] = mem[(10 * ceil32(return_data.size)) + _5320 + 602 len 32 * _5416]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7144 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7144] == bool(mem[_7144])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7528 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7624 = mem[_7528]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7624
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7624
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7912 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7912] == bool(mem[_7912])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5319 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5415 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5415
                                    require return_data.size >= _5319 + (32 * _5415) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5415] = mem[(10 * ceil32(return_data.size)) + _5319 + 602 len 32 * _5415]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7143 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7143] == bool(mem[_7143])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7527 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7623 = mem[_7527]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7623
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7623
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7911 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7911] == bool(mem[_7911])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5324 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5420 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5420
                                require return_data.size >= _5324 + (32 * _5420) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5420] = mem[(10 * ceil32(return_data.size)) + _5324 + 602 len 32 * _5420]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7148 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7148] == bool(mem[_7148])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7532 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7628 = mem[_7532]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7628
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7628
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7916 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7916] == bool(mem[_7916])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5323 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5419 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5419
                                    require return_data.size >= _5323 + (32 * _5419) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5419] = mem[(10 * ceil32(return_data.size)) + _5323 + 602 len 32 * _5419]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7147 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7147] == bool(mem[_7147])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7531 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7627 = mem[_7531]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7627
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7627
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7915 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7915] == bool(mem[_7915])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5322 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5418 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5418
                                    require return_data.size >= _5322 + (32 * _5418) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5418] = mem[(10 * ceil32(return_data.size)) + _5322 + 602 len 32 * _5418]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7146 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7146] == bool(mem[_7146])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7530 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7626 = mem[_7530]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7626
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7626
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7914 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7914] == bool(mem[_7914])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5327 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5423 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5423
                                require return_data.size >= _5327 + (32 * _5423) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5423] = mem[(10 * ceil32(return_data.size)) + _5327 + 602 len 32 * _5423]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7151 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7151] == bool(mem[_7151])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7535 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7631 = mem[_7535]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7631
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7631
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7919 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7919] == bool(mem[_7919])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5326 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5422 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5422
                                    require return_data.size >= _5326 + (32 * _5422) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5422] = mem[(10 * ceil32(return_data.size)) + _5326 + 602 len 32 * _5422]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7150 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7150] == bool(mem[_7150])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7534 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7630 = mem[_7534]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7630
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7630
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7918 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7918] == bool(mem[_7918])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5325 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5421 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5421
                                    require return_data.size >= _5325 + (32 * _5421) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5421] = mem[(10 * ceil32(return_data.size)) + _5325 + 602 len 32 * _5421]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7149 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7149] == bool(mem[_7149])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7533 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7629 = mem[_7533]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7629
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7629
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7917 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7917] == bool(mem[_7917])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5330 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5426 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5426
                                require return_data.size >= _5330 + (32 * _5426) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5426] = mem[(10 * ceil32(return_data.size)) + _5330 + 602 len 32 * _5426]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7154 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7154] == bool(mem[_7154])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7538 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7634 = mem[_7538]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7634
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7634
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7922] == bool(mem[_7922])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5329 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5425 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5425
                                    require return_data.size >= _5329 + (32 * _5425) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5425] = mem[(10 * ceil32(return_data.size)) + _5329 + 602 len 32 * _5425]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7153] == bool(mem[_7153])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7537 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7633 = mem[_7537]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7633
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7633
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7921 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7921] == bool(mem[_7921])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5328 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5424 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5424
                                    require return_data.size >= _5328 + (32 * _5424) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5424] = mem[(10 * ceil32(return_data.size)) + _5328 + 602 len 32 * _5424]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7152 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7152] == bool(mem[_7152])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7536 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7632 = mem[_7536]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7632
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7632
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7920 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7920] == bool(mem[_7920])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5333 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5429 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5429
                                require return_data.size >= _5333 + (32 * _5429) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5429] = mem[(10 * ceil32(return_data.size)) + _5333 + 602 len 32 * _5429]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7157 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7157] == bool(mem[_7157])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7541 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7637 = mem[_7541]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7637
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7637
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7925 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7925] == bool(mem[_7925])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5332 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5428 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5428
                                    require return_data.size >= _5332 + (32 * _5428) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5428] = mem[(10 * ceil32(return_data.size)) + _5332 + 602 len 32 * _5428]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7156] == bool(mem[_7156])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7540 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7636 = mem[_7540]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7636
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7636
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7924 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7924] == bool(mem[_7924])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5331 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5427 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5427
                                    require return_data.size >= _5331 + (32 * _5427) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5427] = mem[(10 * ceil32(return_data.size)) + _5331 + 602 len 32 * _5427]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7155 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7155] == bool(mem[_7155])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7539 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7635 = mem[_7539]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7635
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7635
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7923 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7923] == bool(mem[_7923])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5336 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5432 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5432
                                require return_data.size >= _5336 + (32 * _5432) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5432] = mem[(10 * ceil32(return_data.size)) + _5336 + 602 len 32 * _5432]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7160 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7160] == bool(mem[_7160])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7544 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7640 = mem[_7544]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7640
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7640
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7928] == bool(mem[_7928])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5335 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5431 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5431
                                    require return_data.size >= _5335 + (32 * _5431) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5431] = mem[(10 * ceil32(return_data.size)) + _5335 + 602 len 32 * _5431]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7159] == bool(mem[_7159])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7543 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7639 = mem[_7543]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7639
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7639
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7927 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7927] == bool(mem[_7927])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5334 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5430 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5430
                                    require return_data.size >= _5334 + (32 * _5430) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5430] = mem[(10 * ceil32(return_data.size)) + _5334 + 602 len 32 * _5430]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7158] == bool(mem[_7158])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7542 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7638 = mem[_7542]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7638
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7638
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7926 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7926] == bool(mem[_7926])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5339 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5435 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5435
                                require return_data.size >= _5339 + (32 * _5435) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5435] = mem[(10 * ceil32(return_data.size)) + _5339 + 602 len 32 * _5435]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7163] == bool(mem[_7163])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7547 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7643 = mem[_7547]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7643
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7643
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7931 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7931] == bool(mem[_7931])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5338 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5434 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5434
                                    require return_data.size >= _5338 + (32 * _5434) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5434] = mem[(10 * ceil32(return_data.size)) + _5338 + 602 len 32 * _5434]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7162 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7162] == bool(mem[_7162])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7546 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7642 = mem[_7546]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7642
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7642
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7930 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7930] == bool(mem[_7930])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5337 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5433 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5433
                                    require return_data.size >= _5337 + (32 * _5433) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5433] = mem[(10 * ceil32(return_data.size)) + _5337 + 602 len 32 * _5433]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7161 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7161] == bool(mem[_7161])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7545 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7641 = mem[_7545]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7641
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7641
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7929 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7929] == bool(mem[_7929])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5342 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5438 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = _5438
                                require return_data.size >= _5342 + (32 * _5438) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5438] = mem[(10 * ceil32(return_data.size)) + _5342 + 602 len 32 * _5438]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7166] == bool(mem[_7166])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7550 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7646 = mem[_7550]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7646
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7646
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7934 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7934] == bool(mem[_7934])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5341 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5437 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5437
                                    require return_data.size >= _5341 + (32 * _5437) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5437] = mem[(10 * ceil32(return_data.size)) + _5341 + 602 len 32 * _5437]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7165 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7165] == bool(mem[_7165])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7549 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7645 = mem[_7549]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7645
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7645
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7933 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7933] == bool(mem[_7933])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5340 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5436 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = _5436
                                    require return_data.size >= _5340 + (32 * _5436) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5436] = mem[(10 * ceil32(return_data.size)) + _5340 + 602 len 32 * _5436]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7164 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7164] == bool(mem[_7164])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7548 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7644 = mem[_7548]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7644
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7644
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7932 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7932] == bool(mem[_7932])
}



}
