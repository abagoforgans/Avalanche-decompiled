contract main {




// =====================  Runtime code  =====================


#
#  - sub_13045004(?)
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - sub_f3efcc98(?)
#  - _fallback()
#
const decimals = 18

const BURN_ADDRESS = 57005


mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
uint256 totalShares;
uint256 totalReleased;
mapping of uint256 shares;
mapping of uint256 released;
array of address payee;
mapping of uint256 totalReleased;
mapping of uint256 released;
address joePairAddress;
address sub_527509f3Address;
address rewardsPoolAddress;
uint256 cashoutFee;
uint8 stor17;
uint256 totalClaimed;
uint8 isTradingEnabled;
uint8 sub_fabc4035; offset 8
uint8 antiBot; offset 16
uint8 sub_a5355989; offset 24
uint256 stor19; offset 16
uint256 stor19; offset 8
uint256 sub_335e2e5e;
uint8 sub_9eea7a41;
uint256 sub_aac46d06;
uint256 sub_0fef3680;
uint8 sub_8a73fffd; offset 160
uint128 stor24; offset 160
address sub_bb31085fAddress;
uint256 stor25;
uint256 stor26;
uint256 stor28;
uint256 stor29;
uint256 stor30;
uint256 launchedAtTime;
uint256 sub_629c7074;
uint256 currentBlock;
uint16 sellTax;
uint16 sub_8124f7ac; offset 16
address stor34;
address stor34; offset 32
uint8 stor35; offset 160
address stor35;
address sub_68f2c919Address;
address stor37;
array of address stor38;
mapping of uint8 stor39;
mapping of uint8 stor40;
mapping of uint256 sub_32dbbdad;
mapping of uint256 sub_4d5496a8;
mapping of uint8 stor43;
mapping of uint256 sub_69d89b98;

function rewardsPool() {
    return rewardsPoolAddress
}

function isTradingEnabled() {
    return bool(isTradingEnabled)
}

function sub_0fef3680(?) {
    return sub_0fef3680
}

function totalSupply() {
    return totalSupply
}

function sub_32dbbdad(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_32dbbdad[arg1]
}

function sub_335e2e5e(?) {
    return sub_335e2e5e
}

function totalShares() {
    return totalShares
}

function released(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return released[address(arg1)][address(arg2)]
}

function sub_4d5496a8(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_4d5496a8[arg1]
}

function sub_527509f3(?) {
    return sub_527509f3Address
}

function sub_537266da(?) {
    return bool(stor17)
}

function sub_629c7074(?) {
    return sub_629c7074
}

function sub_68f2c919(?) {
    return sub_68f2c919Address
}

function sub_69d89b98(?) {
    require calldata.size - 4 >= 32
    return sub_69d89b98[arg1]
}

function joePair() {
    return joePairAddress
}

function cashoutFee() {
    return cashoutFee
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function antiBot() {
    return bool(antiBot)
}

function sub_8124f7ac(?) {
    return sub_8124f7ac
}

function sub_8a73fffd(?) {
    return bool(sub_8a73fffd)
}

function payee(uint256 arg1) {
    require calldata.size - 4 >= 32
    if arg1 >= payee.length:
        revert with 0, 50
    return payee[arg1]
}

function owner() {
    return owner
}

function released(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return released[address(arg1)]
}

function sub_9eea7a41(?) {
    return bool(sub_9eea7a41)
}

function launchedAtTime() {
    return launchedAtTime
}

function sub_a5355989(?) {
    return bool(sub_a5355989)
}

function sub_aac46d06(?) {
    return sub_aac46d06
}

function automatedMarketMakerPairs(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor40[arg1])
}

function sub_bb31085f(?) {
    return sub_bb31085fAddress
}

function sellTax() {
    return sellTax
}

function shares(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return shares[address(arg1)]
}

function totalClaimed() {
    return totalClaimed
}

function totalReleased(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return totalReleased[address(arg1)]
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function currentBlock() {
    return currentBlock
}

function totalReleased() {
    return totalReleased
}

function sub_fabc4035(?) {
    return bool(sub_fabc4035)
}

function sub_fb3ac5a7(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor43[arg1])
}

function isBlacklisted(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor39[arg1])
}

function sub_07e727d5(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor25 = arg1
}

function sub_3eb310f7(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor28 = arg1
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_5cc15b65(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_629c7074 = arg1
}

function updateCashoutFee(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    cashoutFee = arg1
}

function sub_9c138b7b(?) {
    require calldata.size - 4 >= 32
    require arg1 == uint16(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sellTax = uint16(arg1)
}

function sub_2be07995(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor17 = uint8(bool(arg1))
}

function sub_09dcb7b0(?) {
    require calldata.size - 4 >= 32
    require arg1 == uint16(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8124f7ac = uint16(arg1)
}

function sub_d1bbad21(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor24 = Mask(96, 0, bool(arg1))
}

function sub_6653a340(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardsPoolAddress = address(arg1)
}

function sub_67db79c4(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_bb31085fAddress = address(arg1)
}

function setAntiBot(bool arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(240, 0, stor19.field_16) = Mask(240, 0, arg1)
}

function sub_f4e27dc8(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(248, 0, stor19.field_8) = Mask(248, 0, bool(arg1))
}

function sub_6ca4e5e0(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    stor26 = 60 * arg1
}

function sub_2ae883fd(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    isTradingEnabled = uint8(bool(arg1))
    if not launchedAtTime:
        launchedAtTime = block.timestamp
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function setAutomatedMarketMakerPair(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if joePairAddress == arg1:
        revert with 0, 'TKN:2'
    if arg2 == bool(stor40[address(arg1)]):
        revert with 0, 'TKN:3'
    stor40[address(arg1)] = uint8(arg2)
    emit SetAutomatedMarketMakerPair(arg1, arg2);
}

function sub_c5ef3ec5(?) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if 0 >= arg1.length:
        return 0
    if 0 >= arg1.length:
        revert with 0, 50
    revert with 0, 17
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function burn(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if balanceOf[address(arg1)] < arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn amount exceeds balance'
    balanceOf[address(arg1)] -= arg2
    if totalSupply < arg2:
        revert with 0, 17
    totalSupply -= arg2
    emit Transfer(arg2, arg1, 0);
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 0, 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: decreased allowance below zero'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function sub_7335b22e(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    mem[96] = 0x1fae658200000000000000000000000000000000000000000000000000000000
    mem[100] = address(arg1)
    require ext_code.size(stor37)
    staticcall stor37.getAllNodes(address arg1) with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    require mem[96 len 4], address(arg1) << 64 <= test266151307()
    require return_data.size + 96 > mem[96 len 4], address(arg1) << 64 + 127
    if mem[mem[96 len 4], address(arg1) << 64 + 96] > test266151307():
        revert with 0, 65
    if ceil32(32 * mem[mem[96 len 4], address(arg1) << 64 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], address(arg1) << 64 + 96]) + 97 > test266151307():
        revert with 0, 65
    require mem[96 len 4], address(arg1) << 64 + (32 * mem[mem[96 len 4], address(arg1) << 64 + 96]) + 32 <= return_data.size
    return memory
      from mem[96 len 4], address(arg1) << 64 + 96
       len 32
}

function sub_5c69cb5d(?) {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0, 'COMP:1'
    if stor39[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'COMP:2'
    require ext_code.size(address(stor35.field_0))
    staticcall address(stor35.field_0).getNodeReward(address arg1, uint256 arg2) with:
            gas gas_remaining wei
           args msg.sender, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'COMP:3'
    if not this.address:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !ext_call.return_data[0]:
        revert with 0, 17
    totalSupply += ext_call.return_data[0]
    if balanceOf[address(this.address)] > !ext_call.return_data[0]:
        revert with 0, 17
    balanceOf[address(this.address)] += ext_call.return_data[0]
    emit Transfer(ext_call.return_data[0], 0, this.address);
    require ext_code.size(address(stor35.field_0))
    call address(stor35.field_0).0xcbd14993 with:
         gas gas_remaining wei
        args msg.sender, arg1, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Compound(ext_call.return_data[0], msg.sender, arg1);
}

function sub_e159b3ae(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if address(stor34.field_32) == address(arg1):
        revert with 0, 'TKN:1'
    emit 0xb172ff8d: address(arg1), address(stor34.field_32)
    require ext_code.size(address(stor34.field_32))
    staticcall address(stor34.field_32).factory() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg1))
    staticcall address(arg1).WAVAX() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).0xc9c65396 with:
         gas gas_remaining wei
        args address(this.address), address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    joePairAddress = ext_call.return_data[12 len 20]
    sub_527509f3Address = address(arg1)
}

function sub_120ccbf9(?) {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0, 'COMP:1'
    if stor39[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'COMP:2'
    require ext_code.size(address(stor35.field_0))
    staticcall address(stor35.field_0).getAllNodesRewards(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'COMP:3'
    if not this.address:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !ext_call.return_data[0]:
        revert with 0, 17
    totalSupply += ext_call.return_data[0]
    if balanceOf[address(this.address)] > !ext_call.return_data[0]:
        revert with 0, 17
    balanceOf[address(this.address)] += ext_call.return_data[0]
    emit Transfer(ext_call.return_data[0], 0, this.address);
    require ext_code.size(address(stor35.field_0))
    call address(stor35.field_0).0xcbd14993 with:
         gas gas_remaining wei
        args msg.sender, arg1, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(stor35.field_0))
    call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
         gas gas_remaining wei
        args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Compound(ext_call.return_data[0], msg.sender, arg1);
}

function migrate(address[] arg1, uint256[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg1.length) + 97 < 96 or ceil32(32 * arg1.length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    s = arg1 + 36
    t = 128
    idx = 0
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg2.length) + 98 < 97 or ceil32(32 * arg1.length) + ceil32(32 * arg2.length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * arg1.length) + 97] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = ceil32(32 * arg1.length) + 129
    while idx < arg2.length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < arg1.length:
        if idx >= mem[96]:
            revert with 0, 50
        _42 = mem[(32 * idx) + 128]
        if idx >= mem[ceil32(32 * arg1.length) + 97]:
            revert with 0, 50
        _44 = mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        if not mem[(32 * idx) + 140 len 20]:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !mem[(32 * idx) + ceil32(32 * arg1.length) + 129]:
            revert with 0, 17
        totalSupply += mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 0
        if balanceOf[mem[(32 * idx) + 140 len 20]] > !mem[(32 * idx) + ceil32(32 * arg1.length) + 129]:
            revert with 0, 17
        balanceOf[mem[(32 * idx) + 140 len 20]] += mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        mem[ceil32(32 * arg1.length) + ceil32(32 * arg2.length) + 98] = mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        emit Transfer(_44, 0, address(_42));
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function release(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not shares[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PaymentSplitter: account has no shares'
    if eth.balance(this.address) > !totalReleased:
        revert with 0, 17
    if eth.balance(this.address) + totalReleased and shares[address(arg1)] > -1 / eth.balance(this.address) + totalReleased:
        revert with 0, 17
    if not totalShares:
        revert with 0, 18
    if (eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares < released[address(arg1)]:
        revert with 0, 17
    if not ((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PaymentSplitter: account is not due payment'
    if released[address(arg1)] > !(((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]):
        revert with 0, 17
    released[address(arg1)] = (eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares
    if totalReleased > !(((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]):
        revert with 0, 17
    totalReleased = totalReleased + ((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]
    if eth.balance(this.address) < ((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]:
        revert with 0, 'Address: insufficient balance'
    call arg1 with:
       value ((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)] wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'Address: unable to send value, recipient may have reverted'
    else:
        if not ext_call.success:
            revert with 0, 'Address: unable to send value, recipient may have reverted'
    ('bool', 'ext_call.success')
    emit PaymentReleased(address(arg1), ((eth.balance(this.address) * shares[address(arg1)]) + (totalReleased * shares[address(arg1)]) / totalShares) - released[address(arg1)]);
}

function sub_9581372b(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if block.timestamp < sub_4d5496a8[address(arg1)]:
        revert with 0, 17
    else:
        require ext_code.size(sub_bb31085fAddress)
        staticcall sub_bb31085fAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                return 0
            else:
                require ext_code.size(address(stor35.field_0))
                staticcall address(stor35.field_0).getNodeNumberOf(address arg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= ext_call.return_data[0]:
                        if ext_call.return_data[0] != ext_call.return_data[0]:
                            if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                    revert with 0, 17
                                else:
                                    if not stor26:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor26)
                        else:
                            if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                    revert with 0, 17
                                else:
                                    if not stor26:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor26)
                    else:
                        if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        else:
                            if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                revert with 0, 17
                            else:
                                if not stor26:
                                    revert with 0, 18
                                else:
                                    return (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor26)
}

function sub_7416bf4c(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < ('cd', 68).length:
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if not address(cd[((32 * idx) + cd[68] + 36)]):
            revert with 0, 'NC:2'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        mem[0] = address(cd[((32 * idx) + cd[68] + 36)])
        mem[32] = 39
        if stor39[address(cd[((32 * idx) + cd[68] + 36)])]:
            revert with 0, 'BLACKLISTED'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if address(cd[((32 * idx) + cd[68] + 36)]) == rewardsPoolAddress:
            revert with 0, 'NC:4'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if idx >= ('cd', 4).length:
            revert with 0, 50
        require cd[(cd[4] + (32 * idx) + 36)] < calldata.size + -cd[4] - 67
        require cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)] <= test266151307()
        require cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 68 <= calldata.size - cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]
        if idx >= ('cd', 36).length:
            revert with 0, 50
        mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = address(cd[((32 * idx) + cd[68] + 36)])
        mem[mem[64] + 36] = 96
        mem[mem[64] + 100] = cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]
        mem[mem[64] + 132 len cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]] = call.data[cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 68 len cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]]
        mem[mem[64] + cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)] + 132] = 0
        mem[mem[64] + 68] = cd[((32 * idx) + cd[36] + 36)]
        require ext_code.size(address(stor35.field_0))
        call address(stor35.field_0).0x90219732 with:
             gas gas_remaining wei
            args address(cd[((32 * idx) + cd[68] + 36)]), Array(len=cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)], data=call.data[cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 68 len cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]]), cd[((32 * idx) + cd[36] + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_ee892778(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    require ext_code.size(sub_bb31085fAddress)
    staticcall sub_bb31085fAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    else:
        require return_data.size >= 32
        require ext_code.size(address(stor35.field_0))
        staticcall address(stor35.field_0).getAllNodesRewards(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                return 0
            else:
                require ext_code.size(address(stor35.field_0))
                staticcall address(stor35.field_0).getNodeNumberOf(address arg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= ext_call.return_data[0]:
                        if ext_call.return_data[0] != ext_call.return_data[0]:
                            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        else:
                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                revert with 0, 17
                            else:
                                if not ext_call.return_data[0]:
                                    revert with 0, 18
                                else:
                                    return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        else:
            if bool(stor3.length) == stor3.length.field_1 < 32:
                revert with 0, 34
            if stor3.length.field_1:
                if 31 < stor3.length.field_1:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    else:
        if bool(stor3.length) == stor3.length.field_1 < 32:
            revert with 0, 34
        if stor3.length.field_1:
            if 31 < stor3.length.field_1:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    mem[ceil32(stor3.length.field_1) + 192 len ceil32(stor3.length.field_1)] = mem[128 len ceil32(stor3.length.field_1)]
    if ceil32(stor3.length.field_1) > stor3.length.field_1:
        mem[stor3.length.field_1 + ceil32(stor3.length.field_1) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)], mem[(2 * ceil32(stor3.length.field_1)) + 192 len 2 * ceil32(stor3.length.field_1)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 0, 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 0, 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[stor4.length.field_1 + ceil32(stor4.length.field_1) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function cashoutReward(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0, 'CASHOUT:1'
    if stor39[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'CASHOUT:3'
    require ext_code.size(address(stor35.field_0))
    staticcall address(stor35.field_0).getNodeReward(address arg1, uint256 arg2) with:
            gas gas_remaining wei
           args msg.sender, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'CASHOUT:4'
    if not sub_fabc4035:
        if not msg.sender:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !ext_call.return_data[0]:
            revert with 0, 17
        totalSupply += ext_call.return_data[0]
        if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
            revert with 0, 17
        balanceOf[address(msg.sender)] += ext_call.return_data[0]
        emit Transfer(ext_call.return_data[0], 0, msg.sender);
        require ext_code.size(address(stor35.field_0))
        call address(stor35.field_0).cashoutNodeReward(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args msg.sender, arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if totalClaimed > !ext_call.return_data[0]:
            revert with 0, 17
        totalClaimed += ext_call.return_data[0]
        emit Cashout(ext_call.return_data[0], msg.sender, arg1);
    else:
        if not cashoutFee:
            if ext_call.return_data[0] < 0:
                revert with 0, 17
            if not msg.sender:
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !ext_call.return_data[0]:
                revert with 0, 17
            totalSupply += ext_call.return_data[0]
            if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                revert with 0, 17
            balanceOf[address(msg.sender)] += ext_call.return_data[0]
            emit Transfer(ext_call.return_data[0], 0, msg.sender);
            require ext_code.size(address(stor35.field_0))
            call address(stor35.field_0).cashoutNodeReward(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args msg.sender, arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if totalClaimed > !ext_call.return_data[0]:
                revert with 0, 17
            totalClaimed += ext_call.return_data[0]
            emit Cashout(ext_call.return_data[0], msg.sender, arg1);
        else:
            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                revert with 0, 17
            if not msg.sender:
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                revert with 0, 17
            totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
            if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                revert with 0, 17
            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
            require ext_code.size(address(stor35.field_0))
            call address(stor35.field_0).cashoutNodeReward(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args msg.sender, arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                revert with 0, 17
            totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
            emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, arg1);
}

function release(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if not shares[address(arg2)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PaymentSplitter: account has no shares'
    mem[100] = this.address
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > !totalReleased[address(arg1)]:
        revert with 0, 17
    if ext_call.return_data[0] + totalReleased[address(arg1)] and shares[address(arg2)] > -1 / ext_call.return_data[0] + totalReleased[address(arg1)]:
        revert with 0, 17
    if not totalShares:
        revert with 0, 18
    if (ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares < released[address(arg1)][address(arg2)]:
        revert with 0, 17
    if not ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)]:
        revert with 0, 'PaymentSplitter: account is not due payment'
    if released[address(arg1)][address(arg2)] > !(((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)]):
        revert with 0, 17
    released[address(arg1)][address(arg2)] = (ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares
    if totalReleased[address(arg1)] > !(((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)]):
        revert with 0, 17
    totalReleased[address(arg1)] = totalReleased[address(arg1)] + ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)]
    mem[ceil32(return_data.size) + 132] = arg2
    mem[ceil32(return_data.size) + 164] = ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)]
    mem[ceil32(return_data.size) + 96] = 68
    mem[ceil32(return_data.size) + 132 len 28] = address(arg2) << 64
    mem[ceil32(return_data.size) + 128 len 4] = unknown_0xa9059cbb(?????)
    mem[ceil32(return_data.size) + 196] = 32
    mem[ceil32(return_data.size) + 228] = 'SafeERC20: low-level call failed'
    if not ext_code.size(arg1):
        revert with 0, 'Address: call to non-contract'
    mem[ceil32(return_data.size) + 260 len 96] = unknown_0xa9059cbb(?????), address(arg2) << 64, 0, ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)], 0
    mem[ceil32(return_data.size) + 328] = 0
    call arg1 with:
       funct Mask(32, 224, unknown_0xa9059cbb(?????), address(arg2) << 64, 0, ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)], 0) >> 224
         gas gas_remaining wei
        args (Mask(512, -288, unknown_0xa9059cbb(?????), address(arg2) << 64, 0, ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)], 0) << 288)
    if not return_data.size:
        if not ext_call.success:
            if ext_call.return_data[0]:
                revert with memory
                  from 128
                   len ext_call.return_data[0]
            revert with 0, 'SafeERC20: low-level call failed'
        if ext_call.return_data[0]:
            require ext_call.return_data[0] >= 32
            require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
            if not uint32(this.address), mem[132 len 28]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    else:
        mem[ceil32(return_data.size) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 292] == bool(mem[ceil32(return_data.size) + 292])
            if not mem[ceil32(return_data.size) + 292]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    emit ERC20PaymentReleased(address(arg2), ((ext_call.return_data[0] * shares[address(arg2)]) + (totalReleased[address(arg1)] * shares[address(arg2)]) / totalShares) - released[address(arg1)][address(arg2)], arg1);
}

function sub_c3d4d940(?) {
    mem[0] = msg.sender
    mem[32] = 43
    if stor43[msg.sender]:
        revert with 0, 'Node has been already migrate'
    mem[100] = msg.sender
    require ext_code.size(stor37)
    staticcall stor37.getNodeNumberOf(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[ceil32(return_data.size) + 96] = 0x1fae658200000000000000000000000000000000000000000000000000000000
    mem[ceil32(return_data.size) + 100] = msg.sender
    require ext_code.size(stor37)
    staticcall stor37.getAllNodes(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(return_data.size) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = (2 * ceil32(return_data.size)) + 96
    require return_data.size >= 32
    _11 = mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32
    require mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 <= test266151307()
    require ceil32(return_data.size) + return_data.size + 96 > ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 127
    _12 = mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]
    if mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96] > test266151307():
        revert with 0, 65
    if ceil32(32 * mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 1 < 0 or (2 * ceil32(return_data.size)) + ceil32(32 * mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 97 > test266151307():
        revert with 0, 65
    mem[64] = (2 * ceil32(return_data.size)) + ceil32(32 * mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 97
    mem[(2 * ceil32(return_data.size)) + 96] = mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]
    require _11 + (32 * _12) + 32 <= return_data.size
    mem[(2 * ceil32(return_data.size)) + 128 len 32 * _12] = mem[ceil32(return_data.size) + _11 + 128 len 32 * _12]
    idx = 0
    while idx < _12:
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not ext_call.return_data[0]:
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(sub_68f2c919Address)
        staticcall sub_68f2c919Address.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _67 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if not msg.sender:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !mem[_67]:
            revert with 0, 17
        totalSupply += mem[_67]
        if balanceOf[address(msg.sender)] > !mem[_67]:
            revert with 0, 17
        balanceOf[address(msg.sender)] += mem[_67]
        mem[mem[64]] = mem[_67]
    else:
        idx = 0
        while idx <= ext_call.return_data[0]:
            mem[0] = sub_335e2e5e
            mem[32] = 44
            sub_69d89b98[stor20] = block.timestamp
            if ext_call.return_data[0] > 0x1d83c94fb6d2ac34a5663d3c7a0d865ca3c4ca40e0ea7cfe9:
                revert with 0, 17
            mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = 96
            mem[mem[64] + 100] = 7
            mem[mem[64] + 132] = 'NODE_V1' << 200
            mem[mem[64] + 68] = 10 * 10^18 * ext_call.return_data[0]
            require ext_code.size(address(stor35.field_0))
            call address(stor35.field_0).0x90219732 with:
                 gas gas_remaining wei
                args msg.sender, 'NODE_V1', 10 * 10^18 * ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if sub_335e2e5e == -1:
                revert with 0, 17
            sub_335e2e5e++
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(sub_68f2c919Address)
        staticcall sub_68f2c919Address.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _91 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if not msg.sender:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !mem[_91]:
            revert with 0, 17
        totalSupply += mem[_91]
        if balanceOf[address(msg.sender)] > !mem[_91]:
            revert with 0, 17
        balanceOf[address(msg.sender)] += mem[_91]
        mem[mem[64]] = mem[_91]
    emit Transfer(mem[mem[64]], 0, msg.sender);
    stor43[address(msg.sender)] = 1
}

function sub_6748b4d6(?) {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0, 'NC:2'
    if stor39[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'NC:4'
    if balanceOf[address(msg.sender)] < arg1:
        revert with 0, 'NC:5'
    if not sub_fabc4035:
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
        if not this.address:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
        if balanceOf[address(msg.sender)] < arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
    else:
        if uint8(stor35.field_160):
            if not msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
            if not this.address:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
            if balanceOf[address(msg.sender)] < arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
        else:
            if owner == msg.sender:
                if not msg.sender:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                if not this.address:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                if balanceOf[address(msg.sender)] < arg1:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
            else:
                if stor40[address(msg.sender)]:
                    if not msg.sender:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                    if not this.address:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                    if balanceOf[address(msg.sender)] < arg1:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                else:
                    if balanceOf[address(this.address)] < stor28:
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                    else:
                        uint8(stor35.field_160) = 1
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                        if not address(stor34.field_32):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                        allowance[address(this.address)][address(stor34.field_0)] = stor28
                        emit Approval(stor28, this.address, address(stor34.field_32));
                        mem[100] = stor28
                        mem[132] = 0
                        mem[164] = 160
                        mem[260] = stor38.length
                        idx = 0
                        s = 0
                        t = 292
                        while idx < stor38.length:
                            mem[t] = stor38[s]
                            idx = idx + 1
                            s = s + 1
                            t = t + 32
                            continue 
                        mem[196] = this.address
                        mem[228] = block.timestamp
                        require ext_code.size(address(stor34.field_32))
                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args stor28, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if eth.balance(this.address) < eth.balance(this.address):
                            revert with 0, 17
                        call rewardsPoolAddress with:
                             gas 2300 wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        uint8(stor35.field_160) = 0
                        if not msg.sender:
                            revert with 0, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg1:
                            revert with 0, 'ERC20: transfer amount exceeds balance'
    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('param', 'arg1'))
    balanceOf[address(msg.sender)] -= arg1
    if balanceOf[this.address] > !arg1:
        revert with 0, 17
    balanceOf[this.address] += arg1
    emit Transfer(arg1, msg.sender, this.address);
    sub_69d89b98[stor20] = block.timestamp
    if not sub_335e2e5e:
        require ext_code.size(address(stor35.field_0))
        call address(stor35.field_0).0x90219732 with:
             gas gas_remaining wei
            args msg.sender, 96, arg1, 1, 0, 0
    else:
        s = 0
        idx = sub_335e2e5e
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[96] = s
        mem[64] = ceil32(s) + 128
        if s:
            mem[128 len s] = call.data[calldata.size len s]
        t = s
        idx = sub_335e2e5e
        while idx:
            if t < 1:
                revert with 0, 17
            if idx / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                revert with 0, 17
            if idx < 10 * idx / 10:
                revert with 0, 17
            if 48 > -uint8(idx - (10 * idx / 10)) + 255:
                revert with 0, 17
            if t - 1 >= mem[96]:
                revert with 0, 50
            mem[t + 127 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 0), ('mul', -10, ('div', ('var', 0), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 0), ('mul', -10, ('div', ('var', 0), 10)))))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = 96
        mem[mem[64] + 100] = mem[96]
        mem[mem[64] + 132 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
        if ceil32(mem[96]) > mem[96]:
            mem[mem[96] + mem[64] + 132] = 0
        require ext_code.size(address(stor35.field_0))
        call address(stor35.field_0).0x90219732 with:
             gas gas_remaining wei
            args msg.sender, Array(len=mem[96], data=mem[mem[64] + 132 len ceil32(mem[96])]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if sub_335e2e5e == -1:
        revert with 0, 17
    sub_335e2e5e++
}

function sub_838150f8(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0, 'NC:2'
    if stor39[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'NC:4'
    if arg1 and arg2 > -1 / arg1:
        revert with 0, 17
    if balanceOf[address(msg.sender)] < arg1 * arg2:
        revert with 0, 'NC:5'
    if arg2 < 1:
        revert with 0, 'NC:5'
    if arg1 and arg2 > -1 / arg1:
        revert with 0, 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
    if not this.address:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
    if balanceOf[address(msg.sender)] < arg1 * arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
    mem[32] = 0
    balanceOf[address(msg.sender)] += -1 * arg1 * arg2
    mem[0] = this.address
    if balanceOf[this.address] > !(arg1 * arg2):
        revert with 0, 17
    balanceOf[this.address] += arg1 * arg2
    mem[96] = arg1 * arg2
    emit Transfer((arg1 * arg2), msg.sender, this.address);
    idx = 1
    while idx <= arg2:
        mem[0] = sub_335e2e5e
        mem[32] = 44
        sub_69d89b98[stor20] = block.timestamp
        if not sub_335e2e5e:
            _46 = mem[64]
            mem[64] = mem[64] + 64
            mem[_46] = 1
            mem[_46 + 32] = 0x3000000000000000000000000000000000000000000000000000000000000000
            if block.timestamp > !idx:
                revert with 0, 17
            mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = 128
            mem[mem[64] + 132] = 1
            s = 0
            while s < 1:
                mem[s + mem[64] + 164] = mem[s + _46 + 32]
                s = s + 32
                continue 
            mem[mem[64] + 165] = 0
            mem[mem[64] + 68] = arg1
            mem[mem[64] + 100] = block.timestamp + idx
            require ext_code.size(address(stor35.field_0))
            call address(stor35.field_0).0x6447efc5 with:
                 gas gas_remaining wei
                args msg.sender, 128, arg1, block.timestamp + idx, 1, mem[mem[64] + 164 len 1], 0
        else:
            t = 0
            s = sub_335e2e5e
            while s:
                if t == -1:
                    revert with 0, 17
                t = t + 1
                s = s / 10
                continue 
            if t > test266151307():
                revert with 0, 65
            _67 = mem[64]
            mem[mem[64]] = t
            mem[64] = mem[64] + ceil32(t) + 32
            if not t:
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_67]:
                        revert with 0, 50
                    mem[u + _67 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                if block.timestamp > !idx:
                    revert with 0, 17
                _84 = mem[64]
                mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 128
                _86 = mem[_67]
                mem[mem[64] + 132] = mem[_67]
                s = 0
                while s < _86:
                    mem[s + mem[64] + 164] = mem[s + _67 + 32]
                    s = s + 32
                    continue 
                if ceil32(_86) > _86:
                    mem[_86 + _84 + 164] = 0
                mem[_84 + 68] = arg1
                mem[_84 + 100] = block.timestamp + idx
                require ext_code.size(address(stor35.field_0))
                call address(stor35.field_0).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(_86) + _84 + -mem[64] + 160]
            else:
                mem[_67 + 32 len t] = call.data[calldata.size len t]
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_67]:
                        revert with 0, 50
                    mem[u + _67 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                if block.timestamp > !idx:
                    revert with 0, 17
                mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 128
                _87 = mem[_67]
                mem[mem[64] + 132] = mem[_67]
                s = 0
                while s < _87:
                    mem[s + mem[64] + 164] = mem[s + _67 + 32]
                    s = s + 32
                    continue 
                if ceil32(_87) > _87:
                    mem[_87 + mem[64] + 164] = 0
                mem[mem[64] + 68] = arg1
                mem[mem[64] + 100] = block.timestamp + idx
                require ext_code.size(address(stor35.field_0))
                call address(stor35.field_0).0x6447efc5 with:
                     gas gas_remaining wei
                    args msg.sender, 128, arg1, block.timestamp + idx, mem[mem[64] + 132 len ceil32(_87) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if sub_fabc4035:
        if not uint8(stor35.field_160):
            if owner != msg.sender:
                if not stor40[address(msg.sender)]:
                    if stor28 and arg2 > -1 / stor28:
                        revert with 0, 17
                    if balanceOf[address(this.address)] >= stor28 * arg2:
                        uint8(stor35.field_160) = 1
                        if stor28 and arg2 > -1 / stor28:
                            revert with 0, 17
                        if not this.address:
                            revert with 0, 'ERC20: approve from the zero address'
                        if not address(stor34.field_32):
                            revert with 0, 'ERC20: approve to the zero address'
                        allowance[address(this.address)][address(stor34.field_0)] = stor28 * arg2
                        emit Approval((stor28 * arg2), this.address, address(stor34.field_32));
                        idx = 0
                        s = 0
                        t = mem[64] + 196
                        while idx < stor38.length:
                            mem[t] = stor38[s]
                            idx = idx + 1
                            s = s + 1
                            t = t + 32
                            continue 
                        require ext_code.size(address(stor34.field_32))
                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args stor28 * arg2, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if eth.balance(this.address) < eth.balance(this.address):
                            revert with 0, 17
                        call rewardsPoolAddress with:
                             gas 2300 wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        uint8(stor35.field_160) = 0
}

function cashoutAll() {
    if not msg.sender:
        revert with 0, 'CASHOUT:5'
    else:
        if stor39[address(msg.sender)]:
            revert with 0, 'BLACKLISTED'
        else:
            if rewardsPoolAddress == msg.sender:
                revert with 0, 'CASHOUT:7'
            else:
                require ext_code.size(address(stor35.field_0))
                staticcall address(stor35.field_0).getAllNodesRewards(address arg1) with:
                        gas gas_remaining wei
                       args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= 0:
                        revert with 0, 'CASHOUT:8'
                    else:
                        if not sub_fabc4035:
                            if not msg.sender:
                                revert with 0, 'ERC20: mint to the zero address'
                            else:
                                if totalSupply > !ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    totalSupply += ext_call.return_data[0]
                                    if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                        revert with 0, 17
                                    else:
                                        balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                        emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                        require ext_code.size(address(stor35.field_0))
                                        call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                             gas gas_remaining wei
                                            args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if totalClaimed > !ext_call.return_data[0]:
                                                revert with 0, 17
                                            else:
                                                totalClaimed += ext_call.return_data[0]
                                                emit Cashout(ext_call.return_data[0], msg.sender, 0);
                        else:
                            if not sub_8a73fffd:
                                if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0] * cashoutFee / 100:
                                        if not msg.sender:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        else:
                                            if totalSupply > !ext_call.return_data[0]:
                                                revert with 0, 17
                                            else:
                                                totalSupply += ext_call.return_data[0]
                                                if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                                    revert with 0, 17
                                                else:
                                                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                                    require ext_code.size(address(stor35.field_0))
                                                    call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if totalClaimed > !ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            totalClaimed += ext_call.return_data[0]
                                                            emit Cashout(ext_call.return_data[0], msg.sender, 0);
                                    else:
                                        if not this.address:
                                            revert with 0, 'ERC20: approve from the zero address'
                                        else:
                                            if not address(stor34.field_32):
                                                revert with 0, 'ERC20: approve to the zero address'
                                            else:
                                                allowance[address(this.address)][address(stor34.field_0)] = ext_call.return_data[0] * cashoutFee / 100
                                                emit Approval((ext_call.return_data[0] * cashoutFee / 100), this.address, address(stor34.field_32));
                                                idx = 0
                                                s = 0
                                                t = ceil32(return_data.size) + 292
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0] * cashoutFee / 100, 0, 160, address(this.address), block.timestamp, stor38.length, mem[ceil32(return_data.size) + 292 len 32 * stor38.length]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                        revert with 0, 17
                                                    else:
                                                        call rewardsPoolAddress with:
                                                             gas 2300 wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                                                                revert with 0, 17
                                                            else:
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                else:
                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                        revert with 0, 17
                                                                    else:
                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                            revert with 0, 17
                                                                        else:
                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
                                                                            require ext_code.size(address(stor35.field_0))
                                                                            call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, 0);
                            else:
                                if block.timestamp < sub_4d5496a8[address(msg.sender)]:
                                    revert with 0, 17
                                else:
                                    require ext_code.size(sub_bb31085fAddress)
                                    staticcall sub_bb31085fAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            else:
                                                if not ext_call.return_data[0] * cashoutFee / 100:
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: mint to the zero address'
                                                    else:
                                                        if totalSupply > !ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            totalSupply += ext_call.return_data[0]
                                                            if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                                                emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                                                require ext_code.size(address(stor35.field_0))
                                                                call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if totalClaimed > !ext_call.return_data[0]:
                                                                        revert with 0, 17
                                                                    else:
                                                                        totalClaimed += ext_call.return_data[0]
                                                                        emit Cashout(ext_call.return_data[0], msg.sender, 0);
                                                else:
                                                    if not this.address:
                                                        revert with 0, 'ERC20: approve from the zero address'
                                                    else:
                                                        if not address(stor34.field_32):
                                                            revert with 0, 'ERC20: approve to the zero address'
                                                        else:
                                                            allowance[address(this.address)][address(stor34.field_0)] = ext_call.return_data[0] * cashoutFee / 100
                                                            emit Approval((ext_call.return_data[0] * cashoutFee / 100), this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = (2 * ceil32(return_data.size)) + 292
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args ext_call.return_data[0] * cashoutFee / 100, 0, 160, address(this.address), block.timestamp, stor38.length, mem[(2 * ceil32(return_data.size)) + 292 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                else:
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                            else:
                                                                                if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                        emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
                                                                                        require ext_code.size(address(stor35.field_0))
                                                                                        call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                                emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, 0);
                                        else:
                                            require ext_code.size(address(stor35.field_0))
                                            staticcall address(stor35.field_0).getNodeNumberOf(address arg1) with:
                                                    gas gas_remaining wei
                                                   args msg.sender
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] <= ext_call.return_data[0]:
                                                    if ext_call.return_data[0] != ext_call.return_data[0]:
                                                        if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                                                revert with 0, 17
                                                            else:
                                                                if not stor26:
                                                                    revert with 0, 18
                                                                else:
                                                                    if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if not ext_call.return_data[0]:
                                                                                revert with 0, 18
                                                                            else:
                                                                                if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                    if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                        if ext_call.return_data[0] > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            else:
                                                                                                if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                        emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                        require ext_code.size(address(stor35.field_0))
                                                                                                        call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
                                                                                    else:
                                                                                        if not this.address:
                                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                                        else:
                                                                                            if not address(stor34.field_32):
                                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                                            else:
                                                                                                allowance[address(this.address)][address(stor34.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor34.field_32));
                                                                                                idx = 0
                                                                                                s = 0
                                                                                                t = (4 * ceil32(return_data.size)) + 292
                                                                                                while idx < stor38.length:
                                                                                                    mem[t] = stor38[s]
                                                                                                    idx = idx + 1
                                                                                                    s = s + 1
                                                                                                    t = t + 32
                                                                                                    continue 
                                                                                                require ext_code.size(address(stor34.field_32))
                                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor38.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor38.length]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                             gas 2300 wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    if not msg.sender:
                                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                                    else:
                                                                                                                        if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                            if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                                revert with 0, 17
                                                                                                                            else:
                                                                                                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                                emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                                                require ext_code.size(address(stor35.field_0))
                                                                                                                                call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args msg.sender
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                                        revert with 0, 17
                                                                                                                                    else:
                                                                                                                                        totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                                        emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
                                                    else:
                                                        if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                                                revert with 0, 17
                                                            else:
                                                                if not stor26:
                                                                    revert with 0, 18
                                                                else:
                                                                    if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if not ext_call.return_data[0]:
                                                                                revert with 0, 18
                                                                            else:
                                                                                if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                    if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                        if ext_call.return_data[0] > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            else:
                                                                                                if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                        emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                        require ext_code.size(address(stor35.field_0))
                                                                                                        call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
                                                                                    else:
                                                                                        if not this.address:
                                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                                        else:
                                                                                            if not address(stor34.field_32):
                                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                                            else:
                                                                                                allowance[address(this.address)][address(stor34.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor34.field_32));
                                                                                                idx = 0
                                                                                                s = 0
                                                                                                t = (4 * ceil32(return_data.size)) + 292
                                                                                                while idx < stor38.length:
                                                                                                    mem[t] = stor38[s]
                                                                                                    idx = idx + 1
                                                                                                    s = s + 1
                                                                                                    t = t + 32
                                                                                                    continue 
                                                                                                require ext_code.size(address(stor34.field_32))
                                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor38.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor38.length]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                             gas 2300 wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    if not msg.sender:
                                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                                    else:
                                                                                                                        if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                            if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                                revert with 0, 17
                                                                                                                            else:
                                                                                                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                                emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                                                require ext_code.size(address(stor35.field_0))
                                                                                                                                call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args msg.sender
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                                        revert with 0, 17
                                                                                                                                    else:
                                                                                                                                        totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                                        emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
                                                else:
                                                    if ext_call.return_data[0] and stor25 > -1 / ext_call.return_data[0]:
                                                        revert with 0, 17
                                                    else:
                                                        if ext_call.return_data[0] * stor25 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor25:
                                                            revert with 0, 17
                                                        else:
                                                            if not stor26:
                                                                revert with 0, 18
                                                            else:
                                                                if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                    revert with 0, 17
                                                                else:
                                                                    if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if not ext_call.return_data[0]:
                                                                            revert with 0, 18
                                                                        else:
                                                                            if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                revert with 0, 17
                                                                            else:
                                                                                sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                    if ext_call.return_data[0] > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        if not msg.sender:
                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                        else:
                                                                                            if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                    emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                    require ext_code.size(address(stor35.field_0))
                                                                                                    call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args msg.sender
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                            emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
                                                                                else:
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    else:
                                                                                        if not address(stor34.field_32):
                                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                                        else:
                                                                                            allowance[address(this.address)][address(stor34.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                            emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor34.field_32));
                                                                                            idx = 0
                                                                                            s = 0
                                                                                            t = (4 * ceil32(return_data.size)) + 292
                                                                                            while idx < stor38.length:
                                                                                                mem[t] = stor38[s]
                                                                                                idx = idx + 1
                                                                                                s = s + 1
                                                                                                t = t + 32
                                                                                                continue 
                                                                                            require ext_code.size(address(stor34.field_32))
                                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                 gas gas_remaining wei
                                                                                                args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor38.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor38.length]
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    call rewardsPoolAddress with:
                                                                                                         gas 2300 wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if not msg.sender:
                                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                                else:
                                                                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), 0, msg.sender);
                                                                                                                            require ext_code.size(address(stor35.field_0))
                                                                                                                            call address(stor35.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args msg.sender
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)):
                                                                                                                                    revert with 0, 17
                                                                                                                                else:
                                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)
                                                                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor25 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor26)), msg.sender, 0);
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if bool(antiBot) != 1:
        if stor39[address(msg.sender)]:
            revert with 0, 'BLACKLISTED'
        if stor39[address(arg1)]:
            revert with 0, 'BLACKLISTED'
        if not msg.sender:
            revert with 0, 'ERC20:1'
        if not arg1:
            revert with 0, 'ERC20:2'
        if owner == msg.sender:
            if joePairAddress == msg.sender:
                if arg2 > !balanceOf[address(msg.sender)]:
                    revert with 0, 17
                if arg2 + balanceOf[address(msg.sender)] > stor30:
                    revert with 0, 'Total holding is limited'
            else:
                if joePairAddress != arg1:
                    if not sub_a5355989:
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[arg1] > !arg2:
                            revert with 0, 17
                        balanceOf[arg1] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                    else:
                        if arg2 and sub_8124f7ac > -1 / arg2:
                            revert with 0, 17
                        if arg2 < arg2 * sub_8124f7ac / 100:
                            revert with 0, 17
                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                            revert with 0, 17
                        if arg2 != arg2:
                            revert with 0, 'Invalid Tax'
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                            revert with 0, 17
                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                            revert with 0, 17
                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                else:
                    if not sellTax:
                        if not sub_a5355989:
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[arg1] > !arg2:
                                revert with 0, 17
                            balanceOf[arg1] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            if arg2 and sub_8124f7ac > -1 / arg2:
                                revert with 0, 17
                            if arg2 < arg2 * sub_8124f7ac / 100:
                                revert with 0, 17
                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            if arg2 != arg2:
                                revert with 0, 'Invalid Tax'
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not this.address:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                revert with 0, 17
                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                    else:
                        if not stor17:
                            if not sub_a5355989:
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sub_9eea7a41:
                                if arg2 and sellTax > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sellTax / 100:
                                    revert with 0, 17
                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sellTax / 100
                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                if not sub_fabc4035:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                else:
                                    if uint8(stor35.field_160):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        if owner == msg.sender:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if stor40[address(msg.sender)]:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if balanceOf[address(this.address)] < stor29:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    uint8(stor35.field_160) = 1
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                    if not address(stor34.field_32):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                    idx = 0
                                                    s = 0
                                                    t = 292
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                        revert with 0, 17
                                                    call rewardsPoolAddress with:
                                                         gas 2300 wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                            else:
                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[100] = arg2
                                mem[132] = 64
                                mem[164] = stor38.length
                                mem[0] = 38
                                idx = 0
                                s = 0
                                t = 196
                                while idx < stor38.length:
                                    mem[t] = stor38[s]
                                    idx = idx + 1
                                    s = s + 1
                                    t = t + 32
                                    continue 
                                require ext_code.size(address(stor34.field_32))
                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                        gas gas_remaining wei
                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _18990 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                _19032 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                mem[ceil32(return_data.size) + 96] = _19032
                                require _18990 + (32 * _19032) + 32 <= return_data.size
                                mem[ceil32(return_data.size) + 128 len 32 * _19032] = mem[_18990 + 128 len 32 * _19032]
                                if 1 >= _19032:
                                    revert with 0, 50
                                if 24 * 3600 > !launchedAtTime:
                                    revert with 0, 17
                                if block.timestamp > launchedAtTime + (24 * 3600):
                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                else:
                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                if arg2 and sellTax > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sellTax / 100:
                                    revert with 0, 17
                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sellTax / 100
                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                if sub_fabc4035:
                                    if not uint8(stor35.field_160):
                                        if owner != msg.sender:
                                            if not stor40[address(msg.sender)]:
                                                if balanceOf[address(this.address)] >= stor29:
                                                    uint8(stor35.field_160) = 1
                                                    if not this.address:
                                                        revert with 0, 'ERC20: approve from the zero address'
                                                    if not address(stor34.field_32):
                                                        revert with 0, 'ERC20: approve to the zero address'
                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                    idx = 0
                                                    s = 0
                                                    t = mem[64] + 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                        revert with 0, 17
                                                    call rewardsPoolAddress with:
                                                         gas 2300 wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    uint8(stor35.field_160) = 0
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
        else:
            if joePairAddress == arg1:
                if joePairAddress == msg.sender:
                    if arg2 > !balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                        revert with 0, 'Total holding is limited'
                else:
                    if joePairAddress != arg1:
                        if not sub_a5355989:
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[arg1] > !arg2:
                                revert with 0, 17
                            balanceOf[arg1] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            if arg2 and sub_8124f7ac > -1 / arg2:
                                revert with 0, 17
                            if arg2 < arg2 * sub_8124f7ac / 100:
                                revert with 0, 17
                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            if arg2 != arg2:
                                revert with 0, 'Invalid Tax'
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not this.address:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                revert with 0, 17
                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                    else:
                        if not sellTax:
                            if not sub_a5355989:
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not stor17:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sub_9eea7a41:
                                    if arg2 and sellTax > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sellTax / 100:
                                        revert with 0, 17
                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sellTax / 100
                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                    if not sub_fabc4035:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        if uint8(stor35.field_160):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if owner == msg.sender:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if stor40[address(msg.sender)]:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if balanceOf[address(this.address)] < stor29:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        uint8(stor35.field_160) = 1
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                        if not address(stor34.field_32):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                        idx = 0
                                                        s = 0
                                                        t = 292
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                            revert with 0, 17
                                                        call rewardsPoolAddress with:
                                                             gas 2300 wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                else:
                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[100] = arg2
                                    mem[132] = 64
                                    mem[164] = stor38.length
                                    mem[0] = 38
                                    idx = 0
                                    s = 0
                                    t = 196
                                    while idx < stor38.length:
                                        mem[t] = stor38[s]
                                        idx = idx + 1
                                        s = s + 1
                                        t = t + 32
                                        continue 
                                    require ext_code.size(address(stor34.field_32))
                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                            gas gas_remaining wei
                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _18991 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                    _19033 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                        revert with 0, 65
                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                    mem[ceil32(return_data.size) + 96] = _19033
                                    require _18991 + (32 * _19033) + 32 <= return_data.size
                                    mem[ceil32(return_data.size) + 128 len 32 * _19033] = mem[_18991 + 128 len 32 * _19033]
                                    if 1 >= _19033:
                                        revert with 0, 50
                                    if 24 * 3600 > !launchedAtTime:
                                        revert with 0, 17
                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                    else:
                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                    if arg2 and sellTax > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sellTax / 100:
                                        revert with 0, 17
                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sellTax / 100
                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                    if sub_fabc4035:
                                        if not uint8(stor35.field_160):
                                            if owner != msg.sender:
                                                if not stor40[address(msg.sender)]:
                                                    if balanceOf[address(this.address)] >= stor29:
                                                        uint8(stor35.field_160) = 1
                                                        if not this.address:
                                                            revert with 0, 'ERC20: approve from the zero address'
                                                        if not address(stor34.field_32):
                                                            revert with 0, 'ERC20: approve to the zero address'
                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                        idx = 0
                                                        s = 0
                                                        t = mem[64] + 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                            revert with 0, 17
                                                        call rewardsPoolAddress with:
                                                             gas 2300 wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        uint8(stor35.field_160) = 0
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if address(stor34.field_32) == arg1:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not sub_a5355989:
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not stor17:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_9eea7a41:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not sub_fabc4035:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor35.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor40[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor29:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor38.length
                                        mem[0] = 38
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor38.length:
                                            mem[t] = stor38[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        require ext_code.size(address(stor34.field_32))
                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _18992 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19034 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19034
                                        require _18992 + (32 * _19034) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len 32 * _19034] = mem[_18992 + 128 len 32 * _19034]
                                        if 1 >= _19034:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if sub_fabc4035:
                                            if not uint8(stor35.field_160):
                                                if owner != msg.sender:
                                                    if not stor40[address(msg.sender)]:
                                                        if balanceOf[address(this.address)] >= stor29:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = mem[64] + 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if this.address == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18993 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19035 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19035
                                            require _18993 + (32 * _19035) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19035] = mem[_18993 + 128 len 32 * _19035]
                                            if 1 >= _19035:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if this.address == msg.sender:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18994 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19036 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19036
                                                require _18994 + (32 * _19036) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19036] = mem[_18994 + 128 len 32 * _19036]
                                                if 1 >= _19036:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if not isTradingEnabled:
                                revert with 0, 'TRADING_DISABLED'
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18995 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19037 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19037
                                                require _18995 + (32 * _19037) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19037] = mem[_18995 + 128 len 32 * _19037]
                                                if 1 >= _19037:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
    else:
        if joePairAddress != msg.sender:
            if joePairAddress != arg1:
                if stor39[address(msg.sender)]:
                    revert with 0, 'BLACKLISTED'
                if stor39[address(arg1)]:
                    revert with 0, 'BLACKLISTED'
                if not msg.sender:
                    revert with 0, 'ERC20:1'
                if not arg1:
                    revert with 0, 'ERC20:2'
                if owner == msg.sender:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not sub_a5355989:
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not stor17:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_9eea7a41:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not sub_fabc4035:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor35.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor40[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor29:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor38.length
                                        mem[0] = 38
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor38.length:
                                            mem[t] = stor38[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        require ext_code.size(address(stor34.field_32))
                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _18996 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19038 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19038
                                        require _18996 + (32 * _19038) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len 32 * _19038] = mem[_18996 + 128 len 32 * _19038]
                                        if 1 >= _19038:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if sub_fabc4035:
                                            if not uint8(stor35.field_160):
                                                if owner != msg.sender:
                                                    if not stor40[address(msg.sender)]:
                                                        if balanceOf[address(this.address)] >= stor29:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = mem[64] + 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if joePairAddress == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18997 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19039 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19039
                                            require _18997 + (32 * _19039) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19039] = mem[_18997 + 128 len 32 * _19039]
                                            if 1 >= _19039:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if address(stor34.field_32) == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18998 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19040 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19040
                                                require _18998 + (32 * _19040) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19040] = mem[_18998 + 128 len 32 * _19040]
                                                if 1 >= _19040:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if this.address == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _18999 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19041 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19041
                                                    require _18999 + (32 * _19041) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19041] = mem[_18999 + 128 len 32 * _19041]
                                                    if 1 >= _19041:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == msg.sender:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19000 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19042 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19042
                                                        require _19000 + (32 * _19042) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19042] = mem[_19000 + 128 len 32 * _19042]
                                                        if 1 >= _19042:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if not isTradingEnabled:
                                        revert with 0, 'TRADING_DISABLED'
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19001 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19043 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19043
                                                        require _19001 + (32 * _19043) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19043] = mem[_19001 + 128 len 32 * _19043]
                                                        if 1 >= _19043:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if sub_32dbbdad[address(msg.sender)] > !sub_629c7074:
                    revert with 0, 17
                if block.number > sub_32dbbdad[address(msg.sender)] + sub_629c7074:
                    if stor39[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor39[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if not arg1:
                        revert with 0, 'ERC20:2'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19002 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19044 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19044
                                            require _19002 + (32 * _19044) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19044] = mem[_19002 + 128 len 32 * _19044]
                                            if 1 >= _19044:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19003 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19045 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19045
                                                require _19003 + (32 * _19045) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19045] = mem[_19003 + 128 len 32 * _19045]
                                                if 1 >= _19045:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor34.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19004 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19046 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19046
                                                    require _19004 + (32 * _19046) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19046] = mem[_19004 + 128 len 32 * _19046]
                                                    if 1 >= _19046:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19005 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19047 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19047
                                                        require _19005 + (32 * _19047) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19047] = mem[_19005 + 128 len 32 * _19047]
                                                        if 1 >= _19047:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19006 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19048 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19048
                                                            require _19006 + (32 * _19048) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19048] = mem[_19006 + 128 len 32 * _19048]
                                                            if 1 >= _19048:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not isTradingEnabled:
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19007 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19049 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19049
                                                            require _19007 + (32 * _19049) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19049] = mem[_19007 + 128 len 32 * _19049]
                                                            if 1 >= _19049:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    stor39[address(msg.sender)] = 1
                    if stor39[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor39[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if not arg1:
                        revert with 0, 'ERC20:2'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19008 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19050 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19050
                                            require _19008 + (32 * _19050) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19050] = mem[_19008 + 128 len 32 * _19050]
                                            if 1 >= _19050:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19009 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19051 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19051
                                                require _19009 + (32 * _19051) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19051] = mem[_19009 + 128 len 32 * _19051]
                                                if 1 >= _19051:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor34.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19010 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19052 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19052
                                                    require _19010 + (32 * _19052) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19052] = mem[_19010 + 128 len 32 * _19052]
                                                    if 1 >= _19052:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19011 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19053 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19053
                                                        require _19011 + (32 * _19053) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19053] = mem[_19011 + 128 len 32 * _19053]
                                                        if 1 >= _19053:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19012 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19054 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19054
                                                            require _19012 + (32 * _19054) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19054] = mem[_19012 + 128 len 32 * _19054]
                                                            if 1 >= _19054:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not isTradingEnabled:
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19013 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19055 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19055
                                                            require _19013 + (32 * _19055) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19055] = mem[_19013 + 128 len 32 * _19055]
                                                            if 1 >= _19055:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
        else:
            sub_32dbbdad[address(msg.sender)] = block.number
            if joePairAddress != arg1:
                if stor39[address(msg.sender)]:
                    revert with 0, 'BLACKLISTED'
                if stor39[address(arg1)]:
                    revert with 0, 'BLACKLISTED'
                if not msg.sender:
                    revert with 0, 'ERC20:1'
                if not arg1:
                    revert with 0, 'ERC20:2'
                if owner == msg.sender:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not sub_a5355989:
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not stor17:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_9eea7a41:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not sub_fabc4035:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor35.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor40[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor29:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor38.length
                                        mem[0] = 38
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor38.length:
                                            mem[t] = stor38[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        require ext_code.size(address(stor34.field_32))
                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _19014 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19056 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19056
                                        require _19014 + (32 * _19056) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len 32 * _19056] = mem[_19014 + 128 len 32 * _19056]
                                        if 1 >= _19056:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if sub_fabc4035:
                                            if not uint8(stor35.field_160):
                                                if owner != msg.sender:
                                                    if not stor40[address(msg.sender)]:
                                                        if balanceOf[address(this.address)] >= stor29:
                                                            uint8(stor35.field_160) = 1
                                                            if not this.address:
                                                                revert with 0, 'ERC20: approve from the zero address'
                                                            if not address(stor34.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = mem[64] + 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                revert with 0, 17
                                                            call rewardsPoolAddress with:
                                                                 gas 2300 wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            uint8(stor35.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if joePairAddress == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19015 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19057 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19057
                                            require _19015 + (32 * _19057) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19057] = mem[_19015 + 128 len 32 * _19057]
                                            if 1 >= _19057:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if address(stor34.field_32) == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19016 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19058 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19058
                                                require _19016 + (32 * _19058) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19058] = mem[_19016 + 128 len 32 * _19058]
                                                if 1 >= _19058:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if this.address == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19017 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19059 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19059
                                                    require _19017 + (32 * _19059) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19059] = mem[_19017 + 128 len 32 * _19059]
                                                    if 1 >= _19059:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == msg.sender:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19018 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19060 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19060
                                                        require _19018 + (32 * _19060) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19060] = mem[_19018 + 128 len 32 * _19060]
                                                        if 1 >= _19060:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if not isTradingEnabled:
                                        revert with 0, 'TRADING_DISABLED'
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19019 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19061 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19061
                                                        require _19019 + (32 * _19061) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19061] = mem[_19019 + 128 len 32 * _19061]
                                                        if 1 >= _19061:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if sub_32dbbdad[address(msg.sender)] > !sub_629c7074:
                    revert with 0, 17
                if block.number > sub_32dbbdad[address(msg.sender)] + sub_629c7074:
                    if stor39[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor39[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if not arg1:
                        revert with 0, 'ERC20:2'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19020 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19062 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19062
                                            require _19020 + (32 * _19062) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19062] = mem[_19020 + 128 len 32 * _19062]
                                            if 1 >= _19062:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19021 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19063 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19063
                                                require _19021 + (32 * _19063) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19063] = mem[_19021 + 128 len 32 * _19063]
                                                if 1 >= _19063:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor34.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19022 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19064 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19064
                                                    require _19022 + (32 * _19064) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19064] = mem[_19022 + 128 len 32 * _19064]
                                                    if 1 >= _19064:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19023 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19065 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19065
                                                        require _19023 + (32 * _19065) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19065] = mem[_19023 + 128 len 32 * _19065]
                                                        if 1 >= _19065:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19024 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19066 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19066
                                                            require _19024 + (32 * _19066) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19066] = mem[_19024 + 128 len 32 * _19066]
                                                            if 1 >= _19066:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not isTradingEnabled:
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19025 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19067 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19067
                                                            require _19025 + (32 * _19067) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19067] = mem[_19025 + 128 len 32 * _19067]
                                                            if 1 >= _19067:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    stor39[address(msg.sender)] = 1
                    if stor39[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor39[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if not arg1:
                        revert with 0, 'ERC20:2'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not sub_a5355989:
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor17:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_9eea7a41:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not sub_fabc4035:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor35.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor40[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor29:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor38.length
                                            mem[0] = 38
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor38.length:
                                                mem[t] = stor38[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            require ext_code.size(address(stor34.field_32))
                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19026 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19068 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19068
                                            require _19026 + (32 * _19068) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len 32 * _19068] = mem[_19026 + 128 len 32 * _19068]
                                            if 1 >= _19068:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if sub_fabc4035:
                                                if not uint8(stor35.field_160):
                                                    if owner != msg.sender:
                                                        if not stor40[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor29:
                                                                uint8(stor35.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor34.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor38.length:
                                                                    mem[t] = stor38[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor34.field_32))
                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                    revert with 0, 17
                                                                call rewardsPoolAddress with:
                                                                     gas 2300 wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                uint8(stor35.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor30:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not sub_a5355989:
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor17:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_9eea7a41:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not sub_fabc4035:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor35.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor40[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor29:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor38.length
                                                mem[0] = 38
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor38.length:
                                                    mem[t] = stor38[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor34.field_32))
                                                staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19027 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19069 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19069
                                                require _19027 + (32 * _19069) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len 32 * _19069] = mem[_19027 + 128 len 32 * _19069]
                                                if 1 >= _19069:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if sub_fabc4035:
                                                    if not uint8(stor35.field_160):
                                                        if owner != msg.sender:
                                                            if not stor40[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor29:
                                                                    uint8(stor35.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor34.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                    emit Approval(stor29, this.address, address(stor34.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor38.length:
                                                                        mem[t] = stor38[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor34.field_32))
                                                                    call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    if eth.balance(this.address) < eth.balance(this.address):
                                                                        revert with 0, 17
                                                                    call rewardsPoolAddress with:
                                                                         gas 2300 wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    uint8(stor35.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor34.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor30:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not sub_a5355989:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor17:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_9eea7a41:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not sub_fabc4035:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor35.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor40[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor29:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor38.length
                                                    mem[0] = 38
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor38.length:
                                                        mem[t] = stor38[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor34.field_32))
                                                    staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19028 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19070 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19070
                                                    require _19028 + (32 * _19070) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len 32 * _19070] = mem[_19028 + 128 len 32 * _19070]
                                                    if 1 >= _19070:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if sub_fabc4035:
                                                        if not uint8(stor35.field_160):
                                                            if owner != msg.sender:
                                                                if not stor40[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor29:
                                                                        uint8(stor35.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor34.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                        emit Approval(stor29, this.address, address(stor34.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor38.length:
                                                                            mem[t] = stor38[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor34.field_32))
                                                                        call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        if eth.balance(this.address) < eth.balance(this.address):
                                                                            revert with 0, 17
                                                                        call rewardsPoolAddress with:
                                                                             gas 2300 wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        uint8(stor35.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor30:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not sub_a5355989:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor17:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_9eea7a41:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not sub_fabc4035:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor35.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor40[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor29:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor38.length
                                                        mem[0] = 38
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor38.length:
                                                            mem[t] = stor38[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor34.field_32))
                                                        staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19029 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19071 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19071
                                                        require _19029 + (32 * _19071) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len 32 * _19071] = mem[_19029 + 128 len 32 * _19071]
                                                        if 1 >= _19071:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if sub_fabc4035:
                                                            if not uint8(stor35.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor40[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor29:
                                                                            uint8(stor35.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor34.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                            emit Approval(stor29, this.address, address(stor34.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor38.length:
                                                                                mem[t] = stor38[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor34.field_32))
                                                                            call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            if eth.balance(this.address) < eth.balance(this.address):
                                                                                revert with 0, 17
                                                                            call rewardsPoolAddress with:
                                                                                 gas 2300 wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            uint8(stor35.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19030 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19072 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19072
                                                            require _19030 + (32 * _19072) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19072] = mem[_19030 + 128 len 32 * _19072]
                                                            if 1 >= _19072:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not isTradingEnabled:
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor30:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not sub_a5355989:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not sub_a5355989:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor17:
                                                        if not sub_a5355989:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not sub_9eea7a41:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not sub_fabc4035:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor35.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor40[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor29:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[292 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor38.length
                                                            mem[0] = 38
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor38.length:
                                                                mem[t] = stor38[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor34.field_32))
                                                            staticcall address(stor34.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor38.length, data=mem[196 len 32 * stor38.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19031 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19073 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19073
                                                            require _19031 + (32 * _19073) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len 32 * _19073] = mem[_19031 + 128 len 32 * _19073]
                                                            if 1 >= _19073:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if sub_fabc4035:
                                                                if not uint8(stor35.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor40[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor29:
                                                                                uint8(stor35.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor34.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor34.field_0)] = stor29
                                                                                emit Approval(stor29, this.address, address(stor34.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor38.length:
                                                                                    mem[t] = stor38[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor34.field_32))
                                                                                call address(stor34.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor29, 0, 160, address(this.address), block.timestamp, stor38.length, mem[mem[64] + 196 len 32 * stor38.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                if eth.balance(this.address) < eth.balance(this.address):
                                                                                    revert with 0, 17
                                                                                call rewardsPoolAddress with:
                                                                                     gas 2300 wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                uint8(stor35.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 34))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
    return 1
}



}
