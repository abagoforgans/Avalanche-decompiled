contract main {




// =====================  Runtime code  =====================


#
#  - tokenURI(uint256 arg1)
#
array of struct stor0;
array of struct stor1;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor5;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor7;
array of uint256 tokenByIndex;
mapping of uint256 stor9;
uint256 stor10;
uint8 paused; offset 160
uint8 revealed; offset 168
uint8 sub_a0ba1bbf; offset 176
uint8 sub_4f8a1db5; offset 184
uint128 stor11; offset 184
uint128 stor11; offset 176
uint128 stor11; offset 160
address owner;
array of struct stor12;
array of struct stor13;
array of uint256 stor14;
uint256 cost;
uint256 maxSupply;
uint256 reservedSupply;
uint256 sub_2f98ea73;
uint256 sub_2dfa9d00;
uint256 royalties;
uint256 dust;
uint256 mintRewards;
uint256 sub_e02f3993;
uint256 sub_176b48ee;
uint256 sub_e8365027;
mapping of uint256 stor26;
address stor27;
address stor28;
address stor29;
array of struct sub_84917f4a;
uint256 stor31;
array of uint256 stor36516136433507714556481507284757523525550975291680945358964353894568634540880;
array of uint256 stor36516136433507714556481507284757523525550975291680945358964353894568634540881;
array of address stor36516136433507714556481507284757523525550975291680945358964353894568634540882;
array of uint256 stor36516136433507714556481507284757523525550975291680945358964353894568634540883;

function getApproved(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function cost() {
    return cost
}

function sub_176b48ee(?) {
    return sub_176b48ee
}

function totalSupply() {
    return tokenByIndex.length
}

function mintRewards() {
    return mintRewards
}

function sub_2dfa9d00(?) {
    return sub_2dfa9d00
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_2f98ea73(?) {
    return sub_2f98ea73
}

function reservedSupply() {
    return reservedSupply
}

function tokenByIndex(uint256 arg1) {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function sub_4f8a1db5(?) {
    return bool(sub_4f8a1db5)
}

function revealed() {
    return bool(revealed)
}

function paused() {
    return bool(paused)
}

function ownerOf(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_84917f4a(?) {
    require calldata.size - 4 >= 32
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg1:
            if idx >= sub_84917f4a.length:
                revert with 0, 50
            return sub_84917f4a[idx].field_0, sub_84917f4a[idx].field_256, sub_84917f4a[idx].field_512, sub_84917f4a[idx].field_768
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    revert with 0, 'ERC721 Marketplace: Token is not listed'
}

function owner() {
    return owner
}

function sub_a0ba1bbf(?) {
    return bool(sub_a0ba1bbf)
}

function maxSupply() {
    return maxSupply
}

function sub_e02f3993(?) {
    return sub_e02f3993
}

function sub_e8365027(?) {
    return sub_e8365027
}

function isApprovedForAll(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor5[address(arg1)][address(arg2)])
}

function royalties() {
    return royalties
}

function dust() {
    return dust
}

function setDust(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    dust = arg1
}

function setCost(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    cost = arg1
}

function sub_d6fb650c(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mintRewards = arg1
}

function sub_4e9be749(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_2f98ea73 = arg1
}

function sub_56fcf95b(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e02f3993 = arg1
}

function sub_8e6fe1a3(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_2dfa9d00 = arg1
}

function sub_d3dc1bd1(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_176b48ee = arg1
}

function flipPausedState() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(96, 0, stor11.field_160) = Mask(96, 0, not paused)
}

function sub_0798e5c9(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(72, 0, stor11.field_184) = Mask(72, 0, not sub_4f8a1db5)
}

function sub_a17bd783(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(80, 0, stor11.field_176) = Mask(80, 0, not sub_a0ba1bbf)
}

function setRoyalties(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    royalties = arg1
}

function setMaxSupply(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    maxSupply = arg1
}

function setReservedSupply(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    reservedSupply = arg1
}

function sub_4501b558(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor29 = address(arg1)
}

function sub_5f4966f7(?) {
    require calldata.size - 4 >= 32
    if stor31 < arg1:
        revert with 0, 'Query for nonexistent token'
    if sub_176b48ee < stor26[arg1]:
        revert with 0, 17
    return (sub_176b48ee - stor26[arg1])
}

function sub_7ef6f656(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor27 = address(arg1)
    stor28 = address(arg2)
}

function royaltyInfo(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if royalties > !sub_e02f3993:
        revert with 0, 17
    if arg2 and royalties + sub_e02f3993 > -1 / arg2:
        revert with 0, 17
    return address(this.address), (royalties * arg2) + (sub_e02f3993 * arg2) / 10000
}

function isTokenListed(uint256 arg1) {
    require calldata.size - 4 >= 32
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg1:
            return 1, idx
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return 0
}

function setApprovalForAll(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor5[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_b5350ebf(?) payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not stor31:
        revert with 0, 18
    if msg.value / stor31 and stor31 > -1 / msg.value / stor31:
        revert with 0, 17
    if sub_176b48ee > !(msg.value / stor31):
        revert with 0, 17
    sub_176b48ee += msg.value / stor31
    if sub_e8365027 > !(msg.value / stor31 * stor31):
        revert with 0, 17
    sub_e8365027 += msg.value / stor31 * stor31
    emit 0xf47d3b55: msg.value
}

function supportsInterface(bytes4 arg1) {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x2a55205a00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function emergencyWithdraw() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        42,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds' << 176
    else:
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
    ('bool', 'ext_call.success')
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor5[stor2[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function getListings() {
    mem[64] = (32 * sub_84917f4a.length) + 128
    mem[96] = sub_84917f4a.length
    s = 128
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        _13 = mem[64]
        mem[64] = mem[64] + 128
        mem[_13] = sub_84917f4a[idx].field_0
        mem[_13 + 32] = sub_84917f4a[idx].field_256
        mem[_13 + 64] = sub_84917f4a[idx].field_512
        mem[_13 + 96] = sub_84917f4a[idx].field_768
        mem[s] = _13
        s = s + 32
        idx = idx + 1
        continue 
    _14 = mem[64]
    mem[mem[64]] = 32
    _15 = mem[96]
    mem[mem[64] + 32] = mem[96]
    idx = 0
    s = mem[64] + 64
    t = 128
    while idx < _15:
        _22 = mem[t]
        mem[s] = mem[mem[t]]
        mem[s + 32] = mem[_22 + 32]
        mem[s + 64] = mem[_22 + 76 len 20]
        mem[s + 96] = mem[_22 + 96]
        idx = idx + 1
        s = s + 128
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _14 + (128 * _15) + -mem[64] + 64
}

function sub_aff72141(?) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor14.length):
        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor14.length) == stor14.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while stor14.length.field_1 + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function setBaseURI(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor13.length):
        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor13.length) == stor13.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while stor13.length.field_1 + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function setUnrevealedURI(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor12.length):
        if bool(stor12.length) == uint255(stor12.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor12[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor12.length = 0
            idx = 0
            while (uint255(stor12.length) * 0.5) + 31 / 32 > idx:
                stor12[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor12.length) == stor12.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor12[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor12.length = 0
            idx = 0
            while stor12.length.field_1 + 31 / 32 > idx:
                stor12[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function reveal(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    revealed = 1
    if bool(stor13.length):
        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor13.length) == stor13.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while stor13.length.field_1 + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function createListing(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not sub_a0ba1bbf:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'ERC721 Marketplace: Listings are currently disabled'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Invalid listing price'
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Caller is not the owner'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is already listed'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    sub_84917f4a.length++
    stor50BB[stor30.length] = arg1
    stor50BB[stor30.length] = arg2
    stor50BB[stor30.length] = msg.sender
    stor50BB[stor30.length] = block.timestamp
    emit 0xda5118e1: arg2, arg1, msg.sender
    stor10 = 1
}

function sub_aeccec8c(?) payable {
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only the owner of a token can claim rewards'
    if stor31 < arg1:
        revert with 0, 'Query for nonexistent token'
    if sub_176b48ee < stor26[arg1]:
        revert with 0, 17
    if sub_176b48ee - stor26[arg1] <= 0:
        revert with 0, 'You don't have any rewards'
    if sub_e8365027 < sub_176b48ee - stor26[arg1]:
        revert with 0, 17
    sub_e8365027 = sub_e8365027 - sub_176b48ee + stor26[arg1]
    stor26[arg1] = sub_176b48ee
    call ownerOf[arg1] with:
       value sub_176b48ee - stor26[arg1] wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        42,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds' << 176
    else:
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
    ('bool', 'ext_call.success')
    emit ClaimedRewards((sub_176b48ee - stor26[arg1]), ownerOf[arg1]);
    stor10 = 1
}

function sub_aec6e273(?) {
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 != arg1:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        if sub_84917f4a[idx].field_512 != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Caller is not the owner'
        if sub_84917f4a.length < 1:
            revert with 0, 17
        if sub_84917f4a.length - 1 >= sub_84917f4a.length:
            revert with 0, 50
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
        sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
        sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
        sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
        if not sub_84917f4a.length:
            revert with 0, 49
        sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
        sub_84917f4a.length--
        emit 0xd61f1a8b: arg1
        stor10 = 1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is not listed'
}

function sub_ef0c016f(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    idx = 0
    s = 0
    while idx < balanceOf[address(arg1)]:
        if not address(arg1):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
        if idx >= balanceOf[address(arg1)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
        if stor31 < tokenOfOwnerByIndex[address(arg1)][idx]:
            revert with 0, 'Query for nonexistent token'
        mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
        mem[32] = 26
        if sub_176b48ee < stor26[stor6[address(arg1)][idx]]:
            revert with 0, 17
        if s > !(sub_176b48ee - stor26[stor6[address(arg1)][idx]]):
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + sub_176b48ee - stor26[stor6[address(arg1)][idx]]
        continue 
    return (s * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)] * balanceOf[address(arg1)])
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor5[stor2[arg3]][address(msg.sender)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer to the zero address'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg3:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721 Marketplace: Unable to transfer a listed token'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not arg1:
        stor9[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor7[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor7[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1]
                stor7[stor6[address(arg1)][stor3[address(arg1)] - 1]] = stor7[arg3]
            stor7[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor3[address(arg2)]] = arg3
            stor7[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor9[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor9[arg3]] = tokenByIndex[tokenByIndex.length]
        stor9[stor8[stor8.length]] = stor9[arg3]
        stor9[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
}

function name() {
    if bool(stor0.length):
        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor0.length):
            if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor0.length):
                if 31 < uint255(stor0.length) * 0.5:
                    mem[128] = uint256(stor0.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor0.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor0[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)])
                mem[128] = 256 * stor0.length.field_8
        else:
            if bool(stor0.length) == stor0.length.field_1 < 32:
                revert with 0, 34
            if stor0.length.field_1:
                if 31 < stor0.length.field_1:
                    mem[128] = uint256(stor0.field_0)
                    idx = 128
                    s = 0
                    while stor0.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor0[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)])
                mem[128] = 256 * stor0.length.field_8
        mem[ceil32(uint255(stor0.length) * 0.5) + 192 len ceil32(uint255(stor0.length) * 0.5)] = mem[128 len ceil32(uint255(stor0.length) * 0.5)]
        if ceil32(uint255(stor0.length) * 0.5) > uint255(stor0.length) * 0.5:
            mem[(uint255(stor0.length) * 0.5) + ceil32(uint255(stor0.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)], mem[(2 * ceil32(uint255(stor0.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor0.length) * 0.5)]), 
    if bool(stor0.length) == stor0.length.field_1 < 32:
        revert with 0, 34
    if bool(stor0.length):
        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor0.length):
            if 31 < uint255(stor0.length) * 0.5:
                mem[128] = uint256(stor0.field_0)
                idx = 128
                s = 0
                while (uint255(stor0.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor0[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)])
            mem[128] = 256 * stor0.length.field_8
    else:
        if bool(stor0.length) == stor0.length.field_1 < 32:
            revert with 0, 34
        if stor0.length.field_1:
            if 31 < stor0.length.field_1:
                mem[128] = uint256(stor0.field_0)
                idx = 128
                s = 0
                while stor0.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor0[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)])
            mem[128] = 256 * stor0.length.field_8
    mem[ceil32(stor0.length.field_1) + 192 len ceil32(stor0.length.field_1)] = mem[128 len ceil32(stor0.length.field_1)]
    if ceil32(stor0.length.field_1) > stor0.length.field_1:
        mem[stor0.length.field_1 + ceil32(stor0.length.field_1) + 192] = 0
    return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)], mem[(2 * ceil32(stor0.length.field_1)) + 192 len 2 * ceil32(stor0.length.field_1)]), 
}

function symbol() {
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor1.length):
            if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor1.length):
                if 31 < uint255(stor1.length) * 0.5:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor1.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * stor1.length.field_8
        else:
            if bool(stor1.length) == stor1.length.field_1 < 32:
                revert with 0, 34
            if stor1.length.field_1:
                if 31 < stor1.length.field_1:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * stor1.length.field_8
        mem[ceil32(uint255(stor1.length) * 0.5) + 192 len ceil32(uint255(stor1.length) * 0.5)] = mem[128 len ceil32(uint255(stor1.length) * 0.5)]
        if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
            mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
    if bool(stor1.length) == stor1.length.field_1 < 32:
        revert with 0, 34
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor1.length):
            if 31 < uint255(stor1.length) * 0.5:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while (uint255(stor1.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    else:
        if bool(stor1.length) == stor1.length.field_1 < 32:
            revert with 0, 34
        if stor1.length.field_1:
            if 31 < stor1.length.field_1:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    mem[ceil32(stor1.length.field_1) + 192 len ceil32(stor1.length.field_1)] = mem[128 len ceil32(stor1.length.field_1)]
    if ceil32(stor1.length.field_1) > stor1.length.field_1:
        mem[stor1.length.field_1 + ceil32(stor1.length.field_1) + 192] = 0
    return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 192 len 2 * ceil32(stor1.length.field_1)]), 
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor5[stor2[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg3:
            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not arg1:
        stor9[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor7[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor7[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1]
                stor7[stor6[address(arg1)][stor3[address(arg1)] - 1]] = stor7[arg3]
            stor7[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor3[address(arg2)]] = arg3
            stor7[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor9[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor9[arg3]] = tokenByIndex[tokenByIndex.length]
        stor9[stor8[stor8.length]] = stor9[arg3]
        stor9[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
        if not ext_call.success:
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function withdraw() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if eth.balance(this.address) < sub_e8365027:
        revert with 0, 17
    if eth.balance(this.address) - sub_e8365027 > 0x1999999999999999999999999999999999999999999999999999999999999999:
        revert with 0, 17
    if (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 > 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
        revert with 0, 17
    call stor27 with:
       value 4 * (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        63,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds to community wallet!'
        call stor28 with:
           value (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 wei
             gas gas_remaining wei
        if not return_data.size:
            if not ext_call.success:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            62,
                            0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                            'sfer funds to donation wallet!'
            if sub_e8365027 > !dust:
                revert with 0, 17
            if eth.balance(this.address) < sub_e8365027 + dust:
                revert with 0, 17
            call owner with:
               value eth.balance(this.address) - sub_e8365027 - dust wei
                 gas gas_remaining wei
            if not return_data.size:
                if not ext_call.success:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                63,
                                0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                                'sfer funds to the owner wallet!'
            else:
                if not ext_call.success:
                    revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
        else:
            if not ext_call.success:
                revert with 0, 32, 62, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to donation wallet!'
            if sub_e8365027 > !dust:
                revert with 0, 17
            if eth.balance(this.address) < sub_e8365027 + dust:
                revert with 0, 17
            call owner with:
               value eth.balance(this.address) - sub_e8365027 - dust wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
    else:
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
        call stor28 with:
           value (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 62, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to donation wallet!'
        if sub_e8365027 > !dust:
            revert with 0, 17
        if eth.balance(this.address) < sub_e8365027 + dust:
            revert with 0, 17
        call owner with:
           value eth.balance(this.address) - sub_e8365027 - dust wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
    ('bool', 'ext_call.success')
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    require arg4 + arg4.length + 36 <= calldata.size
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor5[stor2[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 == arg3:
            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not arg1:
        stor9[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor7[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor7[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1]
                stor7[stor6[address(arg1)][stor3[address(arg1)] - 1]] = stor7[arg3]
            stor7[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor3[address(arg2)]] = arg3
            stor7[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor9[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor9[arg3]] = tokenByIndex[tokenByIndex.length]
        stor9[stor8[stor8.length]] = stor9[arg3]
        stor9[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
        if not ext_call.success:
            if not return_data.size:
                if not arg4.length:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with arg4[all]
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function sub_3912fc85(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 30
        if sub_84917f4a[idx].field_0 != arg1:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        mem[128] = sub_84917f4a[idx].field_256
        mem[160] = sub_84917f4a[idx].field_512
        mem[192] = sub_84917f4a[idx].field_768
        if sub_84917f4a[idx].field_512 == msg.sender:
            revert with 0, 'ERC721 Marketplace: Buyer and seller must be be different addresses'
        if msg.value < sub_84917f4a[idx].field_256:
            revert with 0, 'ERC721 Marketplace: Insufficient funds'
        if msg.value and royalties > -1 / msg.value:
            revert with 0, 17
        if stor31 < 1:
            revert with 0, 17
        if msg.value and sub_e02f3993 > -1 / msg.value:
            revert with 0, 17
        if not stor31 - 1:
            revert with 0, 18
        if stor31 < 1:
            revert with 0, 17
        if msg.value * sub_e02f3993 / 10000 / stor31 - 1 and stor31 - 1 > -1 / msg.value * sub_e02f3993 / 10000 / stor31 - 1:
            revert with 0, 17
        if sub_84917f4a.length < 1:
            revert with 0, 17
        if sub_84917f4a.length - 1 >= sub_84917f4a.length:
            revert with 0, 50
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
        sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
        sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
        sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
        if not sub_84917f4a.length:
            revert with 0, 49
        sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
        sub_84917f4a.length--
        if sub_176b48ee > !(msg.value * sub_e02f3993 / 10000 / stor31 - 1):
            revert with 0, 17
        sub_176b48ee += msg.value * sub_e02f3993 / 10000 / stor31 - 1
        if stor26[arg1] > !(msg.value * sub_e02f3993 / 10000 / stor31 - 1):
            revert with 0, 17
        stor26[arg1] += msg.value * sub_e02f3993 / 10000 / stor31 - 1
        if sub_e8365027 > !(-(msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)):
            revert with 0, 17
        sub_e8365027 = sub_e8365027 - (msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)
        emit 0x3d5eb834: msg.value, arg1, sub_84917f4a[idx].field_512, msg.sender
        mem[224] = 0
        if not ownerOf[arg1]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg1] != sub_84917f4a[idx].field_512:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not msg.sender:
            revert with 0, 'ERC721: transfer to the zero address'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 30
            if sub_84917f4a[s].field_0 == arg1:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        if not sub_84917f4a[idx].field_512:
            stor9[arg1] = tokenByIndex.length
            tokenByIndex.length++
            tokenByIndex[tokenByIndex.length] = arg1
        else:
            if sub_84917f4a[idx].field_512 != msg.sender:
                if not sub_84917f4a[idx].field_512:
                    revert with 0, 'ERC721: balance query for the zero address'
                if balanceOf[stor30[idx].field_512] < 1:
                    revert with 0, 17
                if balanceOf[stor30[idx].field_512] - 1 != stor7[arg1]:
                    tokenOfOwnerByIndex[stor30[idx].field_512][stor7[arg1]] = tokenOfOwnerByIndex[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1]
                    stor7[stor6[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1]] = stor7[arg1]
                stor7[arg1] = 0
                tokenOfOwnerByIndex[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1] = 0
        if msg.sender:
            if sub_84917f4a[idx].field_512 != msg.sender:
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = arg1
                stor7[arg1] = balanceOf[address(msg.sender)]
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[arg1] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[arg1]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[arg1]
            stor9[arg1] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
        approved[arg1] = 0
        if not ownerOf[arg1]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        emit Approval(ownerOf[arg1], 0, arg1);
        if balanceOf[stor30[idx].field_512] < 1:
            revert with 0, 17
        balanceOf[stor30[idx].field_512]--
        if balanceOf[address(msg.sender)] > -2:
            revert with 0, 17
        balanceOf[address(msg.sender)]++
        ownerOf[arg1] = msg.sender
        emit Transfer(sub_84917f4a[idx].field_512, msg.sender, arg1);
        if ext_code.size(msg.sender):
            mem[256] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
            mem[260] = msg.sender
            mem[292] = sub_84917f4a[idx].field_512
            mem[324] = arg1
            mem[356] = 128
            mem[388] = 0
            s = 0
            while s < 0:
                mem[s + 420] = mem[s + 256]
                s = s + 32
                continue 
            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                 gas gas_remaining wei
                args msg.sender, sub_84917f4a[idx].field_512, arg1, 128, 0
            mem[256] = ext_call.return_data[0]
            if not ext_call.success:
                if not return_data.size:
                    if not sub_84917f4a[idx].field_0:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with memory
                      from 128
                       len sub_84917f4a[idx].field_0
                if not return_data.size:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        if msg.value * royalties / 10000 > !(-(msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)):
            revert with 0, 17
        if msg.value < (msg.value * royalties / 10000) - (msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1):
            revert with 0, 17
        call sub_84917f4a[idx].field_512 with:
           value msg.value - (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000 / stor31 - 1) - (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1) wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
        stor10 = 1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is not listed'
}

function sub_4bbedc29(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_2f98ea73 > arg1:
        revert with 0, 'Token already airdropped!'
    if arg1 > 4444:
        revert with 0, 'Last token must be 4444 or less.'
    idx = sub_2f98ea73
    while idx <= arg1:
        stor31++
        mem[mem[64] + 4] = idx
        staticcall stor29.0x6352211e with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _146 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _147 = mem[_146]
        require mem[_146] == mem[_146 + 12 len 20]
        _148 = mem[64]
        mem[64] = mem[64] + 32
        mem[_148] = 0
        if not address(_147):
            revert with 0, 'ERC721: mint to the zero address'
        if ownerOf[stor31]:
            revert with 0, 'ERC721: token already minted'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 30
            if sub_84917f4a[s].field_0 == stor31:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        stor9[stor31] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = stor31
        if address(_147):
            if not address(_147):
                if balanceOf[address(_147)] > -2:
                    revert with 0, 17
                balanceOf[address(_147)]++
                mem[0] = stor31
                mem[32] = 2
                ownerOf[stor31] = address(_147)
                emit Transfer(0, address(_147), stor31);
                if ext_code.size(address(_147)):
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor31
                    mem[mem[64] + 100] = 128
                    _303 = mem[_148]
                    mem[mem[64] + 132] = mem[_148]
                    s = 0
                    while s < _303:
                        mem[s + mem[64] + 164] = mem[s + _148 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_303) <= _303:
                        call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_303) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _417 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_417] == Mask(32, 224, mem[_417])
                        if Mask(32, 224, mem[_417]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_303 + mem[64] + 164] = 0
                        call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_303) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_418] == Mask(32, 224, mem[_418])
                        if Mask(32, 224, mem[_418]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if not address(_147):
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(_147)][stor3[address(_147)]] = stor31
                stor7[stor31] = balanceOf[address(_147)]
                if balanceOf[address(_147)] > -2:
                    revert with 0, 17
                balanceOf[address(_147)]++
                mem[0] = stor31
                mem[32] = 2
                ownerOf[stor31] = address(_147)
                emit Transfer(0, address(_147), stor31);
                if ext_code.size(address(_147)):
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor31
                    mem[mem[64] + 100] = 128
                    _311 = mem[_148]
                    mem[mem[64] + 132] = mem[_148]
                    s = 0
                    while s < _311:
                        mem[s + mem[64] + 164] = mem[s + _148 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_311) <= _311:
                        call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_311) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_419] == Mask(32, 224, mem[_419])
                        if Mask(32, 224, mem[_419]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_311 + mem[64] + 164] = 0
                        call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_311) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_420] == Mask(32, 224, mem[_420])
                        if Mask(32, 224, mem[_420]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[stor31] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[stor31]
            stor9[stor31] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
            if balanceOf[address(_147)] > -2:
                revert with 0, 17
            balanceOf[address(_147)]++
            mem[0] = stor31
            mem[32] = 2
            ownerOf[stor31] = address(_147)
            emit Transfer(0, address(_147), stor31);
            if ext_code.size(address(_147)):
                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = stor31
                mem[mem[64] + 100] = 128
                _316 = mem[_148]
                mem[mem[64] + 132] = mem[_148]
                s = 0
                while s < _316:
                    mem[s + mem[64] + 164] = mem[s + _148 + 32]
                    s = s + 32
                    continue 
                if ceil32(_316) <= _316:
                    call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_316) + 32]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_421] == Mask(32, 224, mem[_421])
                    if Mask(32, 224, mem[_421]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    mem[_316 + mem[64] + 164] = 0
                    call address(_147).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_316) + 32]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _422 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_422] == Mask(32, 224, mem[_422])
                    if Mask(32, 224, mem[_422]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        mem[0] = stor31
        mem[32] = 26
        stor26[stor31] = sub_176b48ee
        if reservedSupply < 1:
            revert with 0, 17
        reservedSupply--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if 1 > !arg1:
        revert with 0, 17
    sub_2f98ea73 = arg1 + 1
}

function mint(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not arg1:
        revert with 0, 'Invalid mint amount'
    if arg1 > sub_2dfa9d00:
        revert with 0, 'Invalid mint amount'
    if stor31 > !arg1:
        revert with 0, 17
    if stor31 + arg1 > maxSupply:
        revert with 0, 'Max token supply exceeded'
    if maxSupply < reservedSupply:
        revert with 0, 17
    if stor31 + arg1 > maxSupply - reservedSupply:
        revert with 0, 'Remaining tokens are reserved'
    if paused:
        revert with 0, 'Minting is paused'
    if cost and arg1 > -1 / cost:
        revert with 0, 17
    if msg.value < cost * arg1:
        revert with 0, 'Insufficient funds'
    idx = 0
    while idx < arg1:
        stor31++
        _139 = mem[64]
        mem[64] = mem[64] + 32
        mem[_139] = 0
        if not msg.sender:
            revert with 0, 'ERC721: mint to the zero address'
        if ownerOf[stor31]:
            revert with 0, 'ERC721: token already minted'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 30
            if sub_84917f4a[s].field_0 == stor31:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        stor9[stor31] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = stor31
        if msg.sender:
            if not msg.sender:
                if balanceOf[address(msg.sender)] > -2:
                    revert with 0, 17
                balanceOf[address(msg.sender)]++
                mem[0] = stor31
                mem[32] = 2
                ownerOf[stor31] = msg.sender
                emit Transfer(0, msg.sender, stor31);
                if ext_code.size(msg.sender):
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor31
                    mem[mem[64] + 100] = 128
                    _288 = mem[_139]
                    mem[mem[64] + 132] = mem[_139]
                    s = 0
                    while s < _288:
                        mem[s + mem[64] + 164] = mem[s + _139 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_288) <= _288:
                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_288) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_394] == Mask(32, 224, mem[_394])
                        if Mask(32, 224, mem[_394]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_288 + mem[64] + 164] = 0
                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_288) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _395 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_395] == Mask(32, 224, mem[_395])
                        if Mask(32, 224, mem[_395]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = stor31
                stor7[stor31] = balanceOf[address(msg.sender)]
                if balanceOf[address(msg.sender)] > -2:
                    revert with 0, 17
                balanceOf[address(msg.sender)]++
                mem[0] = stor31
                mem[32] = 2
                ownerOf[stor31] = msg.sender
                emit Transfer(0, msg.sender, stor31);
                if ext_code.size(msg.sender):
                    _294 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor31
                    mem[mem[64] + 100] = 128
                    _295 = mem[_139]
                    mem[mem[64] + 132] = mem[_139]
                    s = 0
                    while s < _295:
                        mem[s + mem[64] + 164] = mem[s + _139 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_295) <= _295:
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_295) + _294 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _396 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_396] == Mask(32, 224, mem[_396])
                        if Mask(32, 224, mem[_396]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_295 + _294 + 164] = 0
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_295) + _294 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_397] == Mask(32, 224, mem[_397])
                        if Mask(32, 224, mem[_397]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[stor31] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[stor31]
            stor9[stor31] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
            if balanceOf[address(msg.sender)] > -2:
                revert with 0, 17
            balanceOf[address(msg.sender)]++
            mem[0] = stor31
            mem[32] = 2
            ownerOf[stor31] = msg.sender
            emit Transfer(0, msg.sender, stor31);
            if ext_code.size(msg.sender):
                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = stor31
                mem[mem[64] + 100] = 128
                _299 = mem[_139]
                mem[mem[64] + 132] = mem[_139]
                s = 0
                while s < _299:
                    mem[s + mem[64] + 164] = mem[s + _139 + 32]
                    s = s + 32
                    continue 
                if ceil32(_299) <= _299:
                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_299) + 32]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_398] == Mask(32, 224, mem[_398])
                    if Mask(32, 224, mem[_398]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    mem[_299 + mem[64] + 164] = 0
                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_299) + 32]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _399 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_399] == Mask(32, 224, mem[_399])
                    if Mask(32, 224, mem[_399]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    idx = 0
    s = stor31
    t = 0
    while idx < arg1:
        if not s:
            if s == -1:
                revert with 0, 17
            mem[0] = s + 1
            mem[32] = 26
            stor26[s + 1] = sub_176b48ee
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + 1
            t = t
            continue 
        if msg.value and mintRewards > -1 / msg.value:
            revert with 0, 17
        if not arg1:
            revert with 0, 18
        if not s:
            revert with 0, 18
        if msg.value * mintRewards / 10000 / arg1 / s and s > -1 / msg.value * mintRewards / 10000 / arg1 / s:
            revert with 0, 17
        if t > !(msg.value * mintRewards / 10000 / arg1 / s * s):
            revert with 0, 17
        if sub_176b48ee > !(msg.value * mintRewards / 10000 / arg1 / s):
            revert with 0, 17
        sub_176b48ee += msg.value * mintRewards / 10000 / arg1 / s
        if s == -1:
            revert with 0, 17
        mem[0] = s + 1
        mem[32] = 26
        stor26[s + 1] = sub_176b48ee
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        t = t + (msg.value * mintRewards / 10000 / arg1 / s * s)
        continue 
    if sub_e8365027 > !t:
        revert with 0, 17
    sub_e8365027 += t
    stor10 = 1
}

function claimRewards() payable {
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    idx = 0
    s = 0
    while idx < balanceOf[address(msg.sender)]:
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
        if idx >= balanceOf[address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
        if stor31 < tokenOfOwnerByIndex[address(msg.sender)][idx]:
            revert with 0, 'Query for nonexistent token'
        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
        mem[32] = 26
        if sub_176b48ee < stor26[stor6[address(msg.sender)][idx]]:
            revert with 0, 17
        if s > !(sub_176b48ee - stor26[stor6[address(msg.sender)][idx]]):
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + sub_176b48ee - stor26[stor6[address(msg.sender)][idx]]
        continue 
    if s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] <= 0:
        revert with 0, 'You don't have any rewards'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    idx = 0
    while idx < balanceOf[address(msg.sender)]:
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
        if idx >= balanceOf[address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
        mem[32] = 26
        stor26[stor6[address(msg.sender)][idx]] = sub_176b48ee
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if sub_e8365027 < s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]:
        revert with 0, 17
    sub_e8365027 += -1 * s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]
    call msg.sender with:
       value s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        42,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds' << 176
    else:
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
    ('bool', 'ext_call.success')
    emit ClaimedRewards((s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]), msg.sender);
    stor10 = 1
}

function sub_f9daade4(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if ('cd', 36).length != ('cd', 4).length:
        revert with 0, 1
    if not ('cd', 4).length:
        revert with 0, 1
    if not ('cd', 36).length:
        revert with 0, 1
    idx = 0
    s = 0
    while idx < ('cd', 36).length:
        require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
        if s > !uint8(cd[((32 * idx) + cd[36] + 36)]):
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + uint8(cd[((32 * idx) + cd[36] + 36)])
        continue 
    if stor31 > !(s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length):
        revert with 0, 17
    if stor31 + (s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length) > maxSupply:
        revert with 0, 'Max token supply exceeded'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
        s = 0
        while s < uint8(cd[((32 * idx) + cd[36] + 36)]):
            stor31++
            if idx >= ('cd', 4).length:
                revert with 0, 50
            require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
            _406 = mem[64]
            mem[64] = mem[64] + 32
            mem[_406] = 0
            if not address(cd[((32 * idx) + cd[4] + 36)]):
                revert with 0, 'ERC721: mint to the zero address'
            if ownerOf[stor31]:
                revert with 0, 'ERC721: token already minted'
            t = 0
            while t < sub_84917f4a.length:
                mem[0] = 30
                if sub_84917f4a[t].field_0 == stor31:
                    revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                if t == -1:
                    revert with 0, 17
                t = t + 1
                continue 
            stor9[stor31] = tokenByIndex.length
            tokenByIndex.length++
            tokenByIndex[tokenByIndex.length] = stor31
            if address(cd[((32 * idx) + cd[4] + 36)]):
                if not address(cd[((32 * idx) + cd[4] + 36)]):
                    if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                        revert with 0, 17
                    balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                    mem[0] = stor31
                    mem[32] = 2
                    ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                    emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                    if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                        _559 = mem[64]
                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = stor31
                        mem[mem[64] + 100] = 128
                        _561 = mem[_406]
                        mem[mem[64] + 132] = mem[_406]
                        t = 0
                        while t < _561:
                            mem[t + mem[64] + 164] = mem[t + _406 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_561) <= _561:
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_561) + _559 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _675 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_675] == Mask(32, 224, mem[_675])
                            if Mask(32, 224, mem[_675]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[_561 + _559 + 164] = 0
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_561) + _559 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _676 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_676] == Mask(32, 224, mem[_676])
                            if Mask(32, 224, mem[_676]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not address(cd[((32 * idx) + cd[4] + 36)]):
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(cd[((32 * idx) + cd[4] + 36)])][stor3[address(cd[((32 * idx) + cd[4] + 36)])]] = stor31
                    stor7[stor31] = balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]
                    if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                        revert with 0, 17
                    balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                    mem[0] = stor31
                    mem[32] = 2
                    ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                    emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                    if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                        _568 = mem[64]
                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = stor31
                        mem[mem[64] + 100] = 128
                        _569 = mem[_406]
                        mem[mem[64] + 132] = mem[_406]
                        t = 0
                        while t < _569:
                            mem[t + mem[64] + 164] = mem[t + _406 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_569) <= _569:
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_569) + _568 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _677 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_677] == Mask(32, 224, mem[_677])
                            if Mask(32, 224, mem[_677]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[_569 + _568 + 164] = 0
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_569) + _568 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _678 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_678] == Mask(32, 224, mem[_678])
                            if Mask(32, 224, mem[_678]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor9[stor31] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
                stor9[stor8[stor8.length]] = stor9[stor31]
                stor9[stor31] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
                if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                    revert with 0, 17
                balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                mem[0] = stor31
                mem[32] = 2
                ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor31
                    mem[mem[64] + 100] = 128
                    _574 = mem[_406]
                    mem[mem[64] + 132] = mem[_406]
                    t = 0
                    while t < _574:
                        mem[t + mem[64] + 164] = mem[t + _406 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_574) <= _574:
                        call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_574) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_679] == Mask(32, 224, mem[_679])
                        if Mask(32, 224, mem[_679]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_574 + mem[64] + 164] = 0
                        call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_574) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_680] == Mask(32, 224, mem[_680])
                        if Mask(32, 224, mem[_680]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            mem[0] = stor31
            mem[32] = 26
            stor26[stor31] = sub_176b48ee
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function _fallback() payable {
    mem[64] = 128
    if calldata.size < 4:
        require not calldata.size
        if 1 == bool(sub_4f8a1db5):
            if stor31 > 0:
                if sub_e02f3993 > !royalties:
                    revert with 0, 17
                if not sub_e02f3993 + royalties:
                    revert with 0, 18
                if msg.value / sub_e02f3993 + royalties and sub_e02f3993 > -1 / msg.value / sub_e02f3993 + royalties:
                    revert with 0, 17
                if not stor31:
                    revert with 0, 18
                if msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31 and stor31 > -1 / msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31:
                    revert with 0, 17
                if sub_176b48ee > !(msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31):
                    revert with 0, 17
                sub_176b48ee += msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31
                if sub_e8365027 > !(msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31 * stor31):
                    revert with 0, 17
                sub_e8365027 += msg.value / sub_e02f3993 + royalties * sub_e02f3993 / stor31 * stor31
    else:
        if unknown_0x6352211e(?????) > uint32(call.func_hash) >> 224:
            if unknown_0x3912fc85(?????) > uint32(call.func_hash) >> 224:
                if unknown_0x1e13f86b(?????) > uint32(call.func_hash) >> 224:
                    if approve(address arg1, uint256 arg2) <= uint32(call.func_hash) >> 224:
                        if uint32(call.func_hash) >> 224 != approve(address arg1, uint256 arg2):
                            if unknown_0x13faede6(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return cost
                            if unknown_0x176b48ee(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return sub_176b48ee
                            require unknown_0x18160ddd(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            return tokenByIndex.length
                        require not msg.value
                        require calldata.size - 4 >= 64
                        require cd[4] == address(cd[4])
                        if not ownerOf[cd[36]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if address(cd[4]) == ownerOf[cd[36]]:
                            revert with 0, 'ERC721: approval to current owner'
                        if ownerOf[cd[36]] != msg.sender:
                            if not stor5[stor2[cd[36]]][address(msg.sender)]:
                                revert with 0, 'ERC721: approve caller is not owner nor approved for all'
                        approved[cd[36]] = address(cd[4])
                        if not ownerOf[cd[36]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[cd[36]], address(cd[4]), cd[36]);
                    if supportsInterface(bytes4 arg1) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] == Mask(32, 224, cd[4])
                        if 0x2a55205a00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        return (Mask(32, 224, cd[4]) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
                    if uint32(call.func_hash) >> 224 != name():
                        if unknown_0x0798e5c9(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            Mask(72, 0, stor11.field_184) = Mask(72, 0, not sub_4f8a1db5)
                        require getApproved(uint256 arg1) == uint32(call.func_hash) >> 224
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if not ownerOf[cd[4]]:
                            revert with 0, 'ERC721: approved query for nonexistent token'
                        return approved[cd[4]]
                    require not msg.value
                    if bool(stor0.length):
                        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                            revert with 0, 34
                        if bool(stor0.length):
                            if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, stor0.length):
                                if 31 < uint255(stor0.length) * 0.5:
                                    mem[160] = uint256(stor0.field_0)
                                    idx = 160
                                    s = 0
                                    while (uint255(stor0.length) * 0.5) + 128 > idx:
                                        mem[idx + 32] = stor0[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)])
                                mem[160] = 256 * stor0.length.field_8
                        else:
                            if bool(stor0.length) == stor0.length.field_1 < 32:
                                revert with 0, 34
                            if stor0.length.field_1:
                                if 31 < stor0.length.field_1:
                                    mem[160] = uint256(stor0.field_0)
                                    idx = 160
                                    s = 0
                                    while stor0.length.field_1 + 128 > idx:
                                        mem[idx + 32] = stor0[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)])
                                mem[160] = 256 * stor0.length.field_8
                        mem[ceil32(uint255(stor0.length) * 0.5) + 224 len ceil32(uint255(stor0.length) * 0.5)] = mem[160 len ceil32(uint255(stor0.length) * 0.5)]
                        if ceil32(uint255(stor0.length) * 0.5) > uint255(stor0.length) * 0.5:
                            mem[(uint255(stor0.length) * 0.5) + ceil32(uint255(stor0.length) * 0.5) + 224] = 0
                        return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)], mem[(2 * ceil32(uint255(stor0.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor0.length) * 0.5)]), 
                    if bool(stor0.length) == stor0.length.field_1 < 32:
                        revert with 0, 34
                    if bool(stor0.length):
                        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, stor0.length):
                            if 31 < uint255(stor0.length) * 0.5:
                                mem[160] = uint256(stor0.field_0)
                                idx = 160
                                s = 0
                                while (uint255(stor0.length) * 0.5) + 128 > idx:
                                    mem[idx + 32] = stor0[s].field_256
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)])
                            mem[160] = 256 * stor0.length.field_8
                    else:
                        if bool(stor0.length) == stor0.length.field_1 < 32:
                            revert with 0, 34
                        if stor0.length.field_1:
                            if 31 < stor0.length.field_1:
                                mem[160] = uint256(stor0.field_0)
                                idx = 160
                                s = 0
                                while stor0.length.field_1 + 128 > idx:
                                    mem[idx + 32] = stor0[s].field_256
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)])
                            mem[160] = 256 * stor0.length.field_8
                    mem[ceil32(stor0.length.field_1) + 224 len ceil32(stor0.length.field_1)] = mem[160 len ceil32(stor0.length.field_1)]
                    if ceil32(stor0.length.field_1) > stor0.length.field_1:
                        mem[stor0.length.field_1 + ceil32(stor0.length.field_1) + 224] = 0
                    return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)], mem[(2 * ceil32(stor0.length.field_1)) + 224 len 2 * ceil32(stor0.length.field_1)]), 
                if unknown_0x2b80183f(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0x2b80183f(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        royalties = cd[4]
                    else:
                        if unknown_0x2dfa9d00(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return sub_2dfa9d00
                        if unknown_0x2f745c59(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] == address(cd[4])
                            if not address(cd[4]):
                                revert with 0, 'ERC721: balance query for the zero address'
                            if cd[36] >= balanceOf[address(cd[4])]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            return tokenOfOwnerByIndex[address(cd[4])][cd[36]]
                        if unknown_0x2f98ea73(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return sub_2f98ea73
                        require unknown_0x372500ab(?????) == uint32(call.func_hash) >> 224
                        if stor10 == 2:
                            revert with 0, 'ReentrancyGuard: reentrant call'
                        stor10 = 2
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        idx = 0
                        s = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if stor31 < tokenOfOwnerByIndex[address(msg.sender)][idx]:
                                revert with 0, 'Query for nonexistent token'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 26
                            if sub_176b48ee < stor26[stor6[address(msg.sender)][idx]]:
                                revert with 0, 17
                            if s > !(sub_176b48ee - stor26[stor6[address(msg.sender)][idx]]):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + sub_176b48ee - stor26[stor6[address(msg.sender)][idx]]
                            continue 
                        if s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] <= 0:
                            revert with 0, 'You don't have any rewards'
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 26
                            stor26[stor6[address(msg.sender)][idx]] = sub_176b48ee
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if sub_e8365027 < s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        sub_e8365027 += -1 * s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]
                        call msg.sender with:
                           value s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                        emit ClaimedRewards((s * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)] * balanceOf[address(msg.sender)]), msg.sender);
                        stor10 = 1
                else:
                    if unknown_0x1e13f86b(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        reservedSupply = cd[4]
                    else:
                        if unknown_0x234cb051(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return mintRewards
                        if uint32(call.func_hash) >> 224 != unknown_0x23b872dd(?????):
                            require unknown_0x2a55205a(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 64
                            if royalties > !sub_e02f3993:
                                revert with 0, 17
                            if cd[36] and royalties + sub_e02f3993 > -1 / cd[36]:
                                revert with 0, 17
                            return address(this.address), (royalties * cd[36]) + (sub_e02f3993 * cd[36]) / 10000
                        require not msg.value
                        require calldata.size - 4 >= 96
                        require cd[4] == address(cd[4])
                        require cd[36] == address(cd[36])
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: operator query for nonexistent token'
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if ownerOf[cd[68]] != msg.sender:
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: approved query for nonexistent token'
                            if approved[cd[68]] != msg.sender:
                                if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                    revert with 0, 'ERC721: transfer caller is not owner nor approved'
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if ownerOf[cd[68]] != address(cd[4]):
                            revert with 0, 'ERC721: transfer from incorrect owner'
                        if not address(cd[36]):
                            revert with 0, 'ERC721: transfer to the zero address'
                        idx = 0
                        while idx < sub_84917f4a.length:
                            mem[0] = 30
                            if sub_84917f4a[idx].field_0 == cd[68]:
                                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if not address(cd[4]):
                            stor9[cd[68]] = tokenByIndex.length
                            tokenByIndex.length++
                            tokenByIndex[tokenByIndex.length] = cd[68]
                        else:
                            if address(cd[4]) != address(cd[36]):
                                if not address(cd[4]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(cd[4])] < 1:
                                    revert with 0, 17
                                if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                    tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                    stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                stor7[cd[68]] = 0
                                tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                        if address(cd[36]):
                            if address(cd[36]) != address(cd[4]):
                                if not address(cd[36]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                stor7[cd[68]] = balanceOf[address(cd[36])]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor9[cd[68]] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                            stor9[stor8[stor8.length]] = stor9[cd[68]]
                            stor9[cd[68]] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[cd[68]] = 0
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[cd[68]], 0, cd[68]);
                        if balanceOf[address(cd[4])] < 1:
                            revert with 0, 17
                        balanceOf[address(cd[4])]--
                        if balanceOf[address(cd[36])] > -2:
                            revert with 0, 17
                        balanceOf[address(cd[36])]++
                        ownerOf[cd[68]] = address(cd[36])
                        emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
            else:
                if unknown_0x4c261247(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0x51830227(?????) > uint32(call.func_hash) >> 224:
                        if uint32(call.func_hash) >> 224 != unknown_0x4c261247(?????):
                            if unknown_0x4e9be749(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                sub_2f98ea73 = cd[4]
                            if uint32(call.func_hash) >> 224 != unknown_0x4f6ccce7(?????):
                                require unknown_0x4f8a1db5(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                return bool(sub_4f8a1db5)
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if cd[4] >= tokenByIndex.length:
                                revert with 0, 'ERC721Enumerable: global index out of bounds'
                            return tokenByIndex[cd[4]]
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] <= test266151307()
                        require calldata.size > cd[4] + 35
                        if ('cd', 4).length > test266151307():
                            revert with 0, 65
                        if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                            revert with 0, 65
                        require cd[4] + ('cd', 4).length + 36 <= calldata.size
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        revealed = 1
                        if bool(stor13.length):
                            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                revert with 0, 34
                            if ('cd', 4).length:
                                stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                            else:
                                stor13.length = 0
                                idx = 0
                                while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                                    stor13[idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if bool(stor13.length) == stor13.length.field_1 < 32:
                                revert with 0, 34
                            if ('cd', 4).length:
                                stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                            else:
                                stor13.length = 0
                                idx = 0
                                while stor13.length.field_1 + 31 / 32 > idx:
                                    stor13[idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                    else:
                        if unknown_0x51830227(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return bool(revealed)
                        if uint32(call.func_hash) >> 224 != unknown_0x55f804b3(?????):
                            if unknown_0x56fcf95b(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                sub_e02f3993 = cd[4]
                            if unknown_0x5c975abb(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return bool(paused)
                            require unknown_0x5f4966f7(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if stor31 < cd[4]:
                                revert with 0, 'Query for nonexistent token'
                            if sub_176b48ee < stor26[cd[4]]:
                                revert with 0, 17
                            return (sub_176b48ee - stor26[cd[4]])
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] <= test266151307()
                        require calldata.size > cd[4] + 35
                        if ('cd', 4).length > test266151307():
                            revert with 0, 65
                        if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                            revert with 0, 65
                        require cd[4] + ('cd', 4).length + 36 <= calldata.size
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        if bool(stor13.length):
                            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                revert with 0, 34
                            if ('cd', 4).length:
                                stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                            else:
                                stor13.length = 0
                                idx = 0
                                while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                                    stor13[idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if bool(stor13.length) == stor13.length.field_1 < 32:
                                revert with 0, 34
                            if ('cd', 4).length:
                                stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                            else:
                                stor13.length = 0
                                idx = 0
                                while stor13.length.field_1 + 31 / 32 > idx:
                                    stor13[idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                else:
                    if unknown_0x44a0d68a(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0x44a0d68a(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            cost = cd[4]
                        else:
                            if unknown_0x44d19d2b(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return reservedSupply
                            if unknown_0x4501b558(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                require cd[4] == address(cd[4])
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                stor29 = address(cd[4])
                            else:
                                require unknown_0x4bbedc29(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                if sub_2f98ea73 > cd[4]:
                                    revert with 0, 'Token already airdropped!'
                                if cd[4] > 4444:
                                    revert with 0, 'Last token must be 4444 or less.'
                                idx = sub_2f98ea73
                                while idx <= cd[4]:
                                    stor31++
                                    mem[mem[64] + 4] = idx
                                    staticcall stor29.0x6352211e with:
                                            gas gas_remaining wei
                                           args idx
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8142 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _8264 = mem[_8142]
                                    require mem[_8142] == mem[_8142 + 12 len 20]
                                    _8459 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8459] = 0
                                    if not address(_8264):
                                        revert with 0, 'ERC721: mint to the zero address'
                                    if ownerOf[stor31]:
                                        revert with 0, 'ERC721: token already minted'
                                    s = 0
                                    while s < sub_84917f4a.length:
                                        mem[0] = 30
                                        if sub_84917f4a[s].field_0 == stor31:
                                            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        continue 
                                    stor9[stor31] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = stor31
                                    if address(_8264):
                                        if not address(_8264):
                                            if balanceOf[address(_8264)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(_8264)]++
                                            mem[0] = stor31
                                            mem[32] = 2
                                            ownerOf[stor31] = address(_8264)
                                            emit Transfer(0, address(_8264), stor31);
                                            if ext_code.size(address(_8264)):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor31
                                                mem[mem[64] + 100] = 128
                                                _21746 = mem[_8459]
                                                mem[mem[64] + 132] = mem[_8459]
                                                s = 0
                                                while s < _21746:
                                                    mem[s + mem[64] + 164] = mem[s + _8459 + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_21746) <= _21746:
                                                    call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_21746) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _27922 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_27922] == Mask(32, 224, mem[_27922])
                                                    if Mask(32, 224, mem[_27922]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_21746 + mem[64] + 164] = 0
                                                    call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_21746) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _27923 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_27923] == Mask(32, 224, mem[_27923])
                                                    if Mask(32, 224, mem[_27923]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not address(_8264):
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(_8264)][stor3[address(_8264)]] = stor31
                                            stor7[stor31] = balanceOf[address(_8264)]
                                            if balanceOf[address(_8264)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(_8264)]++
                                            mem[0] = stor31
                                            mem[32] = 2
                                            ownerOf[stor31] = address(_8264)
                                            emit Transfer(0, address(_8264), stor31);
                                            if ext_code.size(address(_8264)):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor31
                                                mem[mem[64] + 100] = 128
                                                _23418 = mem[_8459]
                                                mem[mem[64] + 132] = mem[_8459]
                                                s = 0
                                                while s < _23418:
                                                    mem[s + mem[64] + 164] = mem[s + _8459 + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_23418) <= _23418:
                                                    call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23418) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _27924 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_27924] == Mask(32, 224, mem[_27924])
                                                    if Mask(32, 224, mem[_27924]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_23418 + mem[64] + 164] = 0
                                                    call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23418) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _27925 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_27925] == Mask(32, 224, mem[_27925])
                                                    if Mask(32, 224, mem[_27925]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor9[stor31] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
                                        stor9[stor8[stor8.length]] = stor9[stor31]
                                        stor9[stor31] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        if balanceOf[address(_8264)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(_8264)]++
                                        mem[0] = stor31
                                        mem[32] = 2
                                        ownerOf[stor31] = address(_8264)
                                        emit Transfer(0, address(_8264), stor31);
                                        if ext_code.size(address(_8264)):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = stor31
                                            mem[mem[64] + 100] = 128
                                            _23947 = mem[_8459]
                                            mem[mem[64] + 132] = mem[_8459]
                                            s = 0
                                            while s < _23947:
                                                mem[s + mem[64] + 164] = mem[s + _8459 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(_23947) <= _23947:
                                                call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23947) + 32]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _27926 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_27926] == Mask(32, 224, mem[_27926])
                                                if Mask(32, 224, mem[_27926]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[_23947 + mem[64] + 164] = 0
                                                call address(_8264).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23947) + 32]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _27927 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_27927] == Mask(32, 224, mem[_27927])
                                                if Mask(32, 224, mem[_27927]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    mem[0] = stor31
                                    mem[32] = 26
                                    stor26[stor31] = sub_176b48ee
                                    if reservedSupply < 1:
                                        revert with 0, 17
                                    reservedSupply--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if 1 > !cd[4]:
                                    revert with 0, 17
                                sub_2f98ea73 = cd[4] + 1
                    else:
                        if unknown_0x3912fc85(?????) == uint32(call.func_hash) >> 224:
                            require calldata.size - 4 >= 32
                            if stor10 == 2:
                                revert with 0, 'ReentrancyGuard: reentrant call'
                            stor10 = 2
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 30
                                if sub_84917f4a[idx].field_0 != cd[4]:
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                mem[128] = sub_84917f4a[idx].field_0
                                mem[160] = sub_84917f4a[idx].field_256
                                mem[192] = sub_84917f4a[idx].field_512
                                mem[224] = sub_84917f4a[idx].field_768
                                if sub_84917f4a[idx].field_512 == msg.sender:
                                    revert with 0, 'ERC721 Marketplace: Buyer and seller must be be different addresses'
                                if msg.value < sub_84917f4a[idx].field_256:
                                    revert with 0, 'ERC721 Marketplace: Insufficient funds'
                                if msg.value and royalties > -1 / msg.value:
                                    revert with 0, 17
                                if stor31 < 1:
                                    revert with 0, 17
                                if msg.value and sub_e02f3993 > -1 / msg.value:
                                    revert with 0, 17
                                if not stor31 - 1:
                                    revert with 0, 18
                                if stor31 < 1:
                                    revert with 0, 17
                                if msg.value * sub_e02f3993 / 10000 / stor31 - 1 and stor31 - 1 > -1 / msg.value * sub_e02f3993 / 10000 / stor31 - 1:
                                    revert with 0, 17
                                if sub_84917f4a.length < 1:
                                    revert with 0, 17
                                if sub_84917f4a.length - 1 >= sub_84917f4a.length:
                                    revert with 0, 50
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
                                sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
                                sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
                                sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
                                if not sub_84917f4a.length:
                                    revert with 0, 49
                                sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
                                sub_84917f4a.length--
                                if sub_176b48ee > !(msg.value * sub_e02f3993 / 10000 / stor31 - 1):
                                    revert with 0, 17
                                sub_176b48ee += msg.value * sub_e02f3993 / 10000 / stor31 - 1
                                if stor26[cd[4]] > !(msg.value * sub_e02f3993 / 10000 / stor31 - 1):
                                    revert with 0, 17
                                stor26[cd[4]] += msg.value * sub_e02f3993 / 10000 / stor31 - 1
                                if sub_e8365027 > !(-(msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)):
                                    revert with 0, 17
                                sub_e8365027 = sub_e8365027 - (msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)
                                emit 0x3d5eb834: msg.value, cd[4], sub_84917f4a[idx].field_512, msg.sender
                                mem[256] = 0
                                if not ownerOf[cd[4]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[4]] != sub_84917f4a[idx].field_512:
                                    revert with 0, 'ERC721: transfer from incorrect owner'
                                if not msg.sender:
                                    revert with 0, 'ERC721: transfer to the zero address'
                                s = 0
                                while s < sub_84917f4a.length:
                                    mem[0] = 30
                                    if sub_84917f4a[s].field_0 == cd[4]:
                                        revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                    if s == -1:
                                        revert with 0, 17
                                    s = s + 1
                                    continue 
                                if not sub_84917f4a[idx].field_512:
                                    stor9[cd[4]] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = cd[4]
                                else:
                                    if sub_84917f4a[idx].field_512 != msg.sender:
                                        if not sub_84917f4a[idx].field_512:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[stor30[idx].field_512] < 1:
                                            revert with 0, 17
                                        if balanceOf[stor30[idx].field_512] - 1 != stor7[cd[4]]:
                                            tokenOfOwnerByIndex[stor30[idx].field_512][stor7[cd[4]]] = tokenOfOwnerByIndex[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1]
                                            stor7[stor6[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1]] = stor7[cd[4]]
                                        stor7[cd[4]] = 0
                                        tokenOfOwnerByIndex[stor30[idx].field_512][stor3[stor30[idx].field_512] - 1] = 0
                                if msg.sender:
                                    if sub_84917f4a[idx].field_512 != msg.sender:
                                        if not msg.sender:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = cd[4]
                                        stor7[cd[4]] = balanceOf[address(msg.sender)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor9[cd[4]] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor9[cd[4]]] = tokenByIndex[tokenByIndex.length]
                                    stor9[stor8[stor8.length]] = stor9[cd[4]]
                                    stor9[cd[4]] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[cd[4]] = 0
                                if not ownerOf[cd[4]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[cd[4]], 0, cd[4]);
                                if balanceOf[stor30[idx].field_512] < 1:
                                    revert with 0, 17
                                balanceOf[stor30[idx].field_512]--
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                ownerOf[cd[4]] = msg.sender
                                emit Transfer(sub_84917f4a[idx].field_512, msg.sender, cd[4]);
                                if ext_code.size(msg.sender):
                                    mem[288] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                    mem[292] = msg.sender
                                    mem[324] = sub_84917f4a[idx].field_512
                                    mem[356] = cd[4]
                                    mem[388] = 128
                                    mem[420] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + 452] = mem[s + 288]
                                        s = s + 32
                                        continue 
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_84917f4a[idx].field_512, cd[4], 128, 0
                                    mem[288] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if msg.value * royalties / 10000 > !(-(msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1)):
                                    revert with 0, 17
                                if msg.value < (msg.value * royalties / 10000) - (msg.value * sub_e02f3993 / 10000 / stor31 - 1) + (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1):
                                    revert with 0, 17
                                call sub_84917f4a[idx].field_512 with:
                                   value msg.value - (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000 / stor31 - 1) - (stor31 * msg.value * sub_e02f3993 / 10000 / stor31 - 1) wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                                stor10 = 1
                            revert with 0, 'ERC721 Marketplace: Token is not listed'
                        if unknown_0x3ccfd60b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if eth.balance(this.address) < sub_e8365027:
                                revert with 0, 17
                            if eth.balance(this.address) - sub_e8365027 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                                revert with 0, 17
                            if (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 > 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                revert with 0, 17
                            call stor27 with:
                               value 4 * (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
                            call stor28 with:
                               value (10 * eth.balance(this.address)) - (10 * sub_e8365027) / 100 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 62, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to donation wallet!'
                            if sub_e8365027 > !dust:
                                revert with 0, 17
                            if eth.balance(this.address) < sub_e8365027 + dust:
                                revert with 0, 17
                            call owner with:
                               value eth.balance(this.address) - sub_e8365027 - dust wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0x42842e0e(?????):
                                require unknown_0x437552c0(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                dust = cd[4]
                            else:
                                require not msg.value
                                require calldata.size - 4 >= 96
                                require cd[4] == address(cd[4])
                                require cd[36] == address(cd[36])
                                mem[128] = 0
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: operator query for nonexistent token'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != msg.sender:
                                    if not ownerOf[cd[68]]:
                                        revert with 0, 'ERC721: approved query for nonexistent token'
                                    if approved[cd[68]] != msg.sender:
                                        if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                            revert with 0, 'ERC721: transfer caller is not owner nor approved'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != address(cd[4]):
                                    revert with 0, 'ERC721: transfer from incorrect owner'
                                if not address(cd[36]):
                                    revert with 0, 'ERC721: transfer to the zero address'
                                idx = 0
                                while idx < sub_84917f4a.length:
                                    mem[0] = 30
                                    if sub_84917f4a[idx].field_0 == cd[68]:
                                        revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if not address(cd[4]):
                                    stor9[cd[68]] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = cd[68]
                                else:
                                    if address(cd[4]) != address(cd[36]):
                                        if not address(cd[4]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(cd[4])] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                            tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                            stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                        stor7[cd[68]] = 0
                                        tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                                if address(cd[36]):
                                    if address(cd[36]) != address(cd[4]):
                                        if not address(cd[36]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                        stor7[cd[68]] = balanceOf[address(cd[36])]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor9[cd[68]] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                                    stor9[stor8[stor8.length]] = stor9[cd[68]]
                                    stor9[cd[68]] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[cd[68]] = 0
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[cd[68]], 0, cd[68]);
                                if balanceOf[address(cd[4])] < 1:
                                    revert with 0, 17
                                balanceOf[address(cd[4])]--
                                if balanceOf[address(cd[36])] > -2:
                                    revert with 0, 17
                                balanceOf[address(cd[36])]++
                                ownerOf[cd[68]] = address(cd[36])
                                emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
                                if ext_code.size(address(cd[36])):
                                    mem[164] = msg.sender
                                    mem[196] = address(cd[4])
                                    mem[228] = cd[68]
                                    mem[260] = 128
                                    mem[292] = 0
                                    mem[324 len 0] = None
                                    call address(cd[36]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(cd[4]), cd[68], 128, 0
                                    mem[160] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if unknown_0xaff72141(?????) > uint32(call.func_hash) >> 224:
                if unknown_0x95d89b41(?????) > uint32(call.func_hash) >> 224:
                    if unknown_0x84917f4a(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0x84917f4a(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 30
                                if sub_84917f4a[idx].field_0 == cd[4]:
                                    if idx >= sub_84917f4a.length:
                                        revert with 0, 50
                                    return sub_84917f4a[idx].field_0, sub_84917f4a[idx].field_256, sub_84917f4a[idx].field_512, sub_84917f4a[idx].field_768
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            revert with 0, 'ERC721 Marketplace: Token is not listed'
                        if unknown_0x8da5cb5b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return owner
                        if unknown_0x8e6fe1a3(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_2dfa9d00 = cd[4]
                        else:
                            require unknown_0x93eff851(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            Mask(96, 0, stor11.field_160) = Mask(96, 0, not paused)
                    else:
                        if unknown_0x6352211e(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if not ownerOf[cd[4]]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            return ownerOf[cd[4]]
                        if unknown_0x6f8b44b0(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            maxSupply = cd[4]
                        else:
                            if unknown_0x70a08231(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                require cd[4] == address(cd[4])
                                if not address(cd[4]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                return balanceOf[address(cd[4])]
                            require unknown_0x7ef6f656(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] == address(cd[4])
                            require cd[36] == address(cd[36])
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            stor27 = address(cd[4])
                            stor28 = address(cd[36])
                else:
                    if unknown_0xa17bd783(?????) > uint32(call.func_hash) >> 224:
                        if unknown_0x95d89b41(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if bool(stor1.length):
                                if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                    revert with 0, 34
                                if bool(stor1.length):
                                    if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if Mask(256, -1, stor1.length):
                                        if 31 < uint255(stor1.length) * 0.5:
                                            mem[160] = uint256(stor1.field_0)
                                            idx = 160
                                            s = 0
                                            while (uint255(stor1.length) * 0.5) + 128 > idx:
                                                mem[idx + 32] = stor1[s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)])
                                        mem[160] = 256 * stor1.length.field_8
                                else:
                                    if bool(stor1.length) == stor1.length.field_1 < 32:
                                        revert with 0, 34
                                    if stor1.length.field_1:
                                        if 31 < stor1.length.field_1:
                                            mem[160] = uint256(stor1.field_0)
                                            idx = 160
                                            s = 0
                                            while stor1.length.field_1 + 128 > idx:
                                                mem[idx + 32] = stor1[s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)])
                                        mem[160] = 256 * stor1.length.field_8
                                mem[ceil32(uint255(stor1.length) * 0.5) + 224 len ceil32(uint255(stor1.length) * 0.5)] = mem[160 len ceil32(uint255(stor1.length) * 0.5)]
                                if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
                                    mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 224] = 0
                                return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
                            if bool(stor1.length) == stor1.length.field_1 < 32:
                                revert with 0, 34
                            if bool(stor1.length):
                                if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                    revert with 0, 34
                                if Mask(256, -1, stor1.length):
                                    if 31 < uint255(stor1.length) * 0.5:
                                        mem[160] = uint256(stor1.field_0)
                                        idx = 160
                                        s = 0
                                        while (uint255(stor1.length) * 0.5) + 128 > idx:
                                            mem[idx + 32] = stor1[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)])
                                    mem[160] = 256 * stor1.length.field_8
                            else:
                                if bool(stor1.length) == stor1.length.field_1 < 32:
                                    revert with 0, 34
                                if stor1.length.field_1:
                                    if 31 < stor1.length.field_1:
                                        mem[160] = uint256(stor1.field_0)
                                        idx = 160
                                        s = 0
                                        while stor1.length.field_1 + 128 > idx:
                                            mem[idx + 32] = stor1[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)])
                                    mem[160] = 256 * stor1.length.field_8
                            mem[ceil32(stor1.length.field_1) + 224 len ceil32(stor1.length.field_1)] = mem[160 len ceil32(stor1.length.field_1)]
                            if ceil32(stor1.length.field_1) > stor1.length.field_1:
                                mem[stor1.length.field_1 + ceil32(stor1.length.field_1) + 224] = 0
                            return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 224 len 2 * ceil32(stor1.length.field_1)]), 
                        if unknown_0x9b83cddc(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 30
                                if sub_84917f4a[idx].field_0 == cd[4]:
                                    return 1, idx
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            return 0
                        if uint32(call.func_hash) >> 224 != unknown_0xa0712d68(?????):
                            require unknown_0xa0ba1bbf(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            return bool(sub_a0ba1bbf)
                        require calldata.size - 4 >= 32
                        if stor10 == 2:
                            revert with 0, 'ReentrancyGuard: reentrant call'
                        stor10 = 2
                        if not cd[4]:
                            revert with 0, 'Invalid mint amount'
                        if cd[4] > sub_2dfa9d00:
                            revert with 0, 'Invalid mint amount'
                        if stor31 > !cd[4]:
                            revert with 0, 17
                        if stor31 + cd[4] > maxSupply:
                            revert with 0, 'Max token supply exceeded'
                        if maxSupply < reservedSupply:
                            revert with 0, 17
                        if stor31 + cd[4] > maxSupply - reservedSupply:
                            revert with 0, 'Remaining tokens are reserved'
                        if paused:
                            revert with 0, 'Minting is paused'
                        if cost and cd[4] > -1 / cost:
                            revert with 0, 17
                        if msg.value < cost * cd[4]:
                            revert with 0, 'Insufficient funds'
                        idx = 0
                        while idx < cd[4]:
                            stor31++
                            _8143 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8143] = 0
                            if not msg.sender:
                                revert with 0, 'ERC721: mint to the zero address'
                            if ownerOf[stor31]:
                                revert with 0, 'ERC721: token already minted'
                            s = 0
                            while s < sub_84917f4a.length:
                                mem[0] = 30
                                if sub_84917f4a[s].field_0 == stor31:
                                    revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                if s == -1:
                                    revert with 0, 17
                                s = s + 1
                                continue 
                            stor9[stor31] = tokenByIndex.length
                            tokenByIndex.length++
                            tokenByIndex[tokenByIndex.length] = stor31
                            if msg.sender:
                                if not msg.sender:
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    mem[0] = stor31
                                    mem[32] = 2
                                    ownerOf[stor31] = msg.sender
                                    emit Transfer(0, msg.sender, stor31);
                                    if ext_code.size(msg.sender):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = stor31
                                        mem[mem[64] + 100] = 128
                                        _21749 = mem[_8143]
                                        mem[mem[64] + 132] = mem[_8143]
                                        s = 0
                                        while s < _21749:
                                            mem[s + mem[64] + 164] = mem[s + _8143 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_21749) <= _21749:
                                            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_21749) + 32]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _27928 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_27928] == Mask(32, 224, mem[_27928])
                                            if Mask(32, 224, mem[_27928]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[_21749 + mem[64] + 164] = 0
                                            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_21749) + 32]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _27929 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_27929] == Mask(32, 224, mem[_27929])
                                            if Mask(32, 224, mem[_27929]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not msg.sender:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = stor31
                                    stor7[stor31] = balanceOf[address(msg.sender)]
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    mem[0] = stor31
                                    mem[32] = 2
                                    ownerOf[stor31] = msg.sender
                                    emit Transfer(0, msg.sender, stor31);
                                    if ext_code.size(msg.sender):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = stor31
                                        mem[mem[64] + 100] = 128
                                        _23420 = mem[_8143]
                                        mem[mem[64] + 132] = mem[_8143]
                                        s = 0
                                        while s < _23420:
                                            mem[s + mem[64] + 164] = mem[s + _8143 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_23420) <= _23420:
                                            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23420) + 32]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _27930 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_27930] == Mask(32, 224, mem[_27930])
                                            if Mask(32, 224, mem[_27930]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[_23420 + mem[64] + 164] = 0
                                            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_23420) + 32]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _27931 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_27931] == Mask(32, 224, mem[_27931])
                                            if Mask(32, 224, mem[_27931]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor9[stor31] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
                                stor9[stor8[stor8.length]] = stor9[stor31]
                                stor9[stor31] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                mem[0] = stor31
                                mem[32] = 2
                                ownerOf[stor31] = msg.sender
                                emit Transfer(0, msg.sender, stor31);
                                if ext_code.size(msg.sender):
                                    _23421 = mem[64]
                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = stor31
                                    mem[mem[64] + 100] = 128
                                    _23950 = mem[_8143]
                                    mem[mem[64] + 132] = mem[_8143]
                                    s = 0
                                    while s < _23950:
                                        mem[s + mem[64] + 164] = mem[s + _8143 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(_23950) <= _23950:
                                        call msg.sender.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len ceil32(_23950) + _23421 + -mem[64] + 160]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _27932 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_27932] == Mask(32, 224, mem[_27932])
                                        if Mask(32, 224, mem[_27932]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[_23950 + _23421 + 164] = 0
                                        call msg.sender.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len ceil32(_23950) + _23421 + -mem[64] + 160]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _27933 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_27933] == Mask(32, 224, mem[_27933])
                                        if Mask(32, 224, mem[_27933]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        s = stor31
                        t = 0
                        while idx < cd[4]:
                            if not s:
                                if s == -1:
                                    revert with 0, 17
                                mem[0] = s + 1
                                mem[32] = 26
                                stor26[s + 1] = sub_176b48ee
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                t = t
                                continue 
                            if msg.value and mintRewards > -1 / msg.value:
                                revert with 0, 17
                            if not cd[4]:
                                revert with 0, 18
                            if not s:
                                revert with 0, 18
                            if msg.value * mintRewards / 10000 / cd[4] / s and s > -1 / msg.value * mintRewards / 10000 / cd[4] / s:
                                revert with 0, 17
                            if t > !(msg.value * mintRewards / 10000 / cd[4] / s * s):
                                revert with 0, 17
                            if sub_176b48ee > !(msg.value * mintRewards / 10000 / cd[4] / s):
                                revert with 0, 17
                            sub_176b48ee += msg.value * mintRewards / 10000 / cd[4] / s
                            if s == -1:
                                revert with 0, 17
                            mem[0] = s + 1
                            mem[32] = 26
                            stor26[s + 1] = sub_176b48ee
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + 1
                            t = t + (msg.value * mintRewards / 10000 / cd[4] / s * s)
                            continue 
                        if sub_e8365027 > !t:
                            revert with 0, 17
                        sub_e8365027 += t
                        stor10 = 1
                    else:
                        if unknown_0xa17bd783(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            Mask(80, 0, stor11.field_176) = Mask(80, 0, not sub_a0ba1bbf)
                        else:
                            if unknown_0xa22cb465(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 64
                                require cd[4] == address(cd[4])
                                require cd[36] == bool(cd[36])
                                if msg.sender == address(cd[4]):
                                    revert with 0, 'ERC721: approve to caller'
                                stor5[address(msg.sender)][address(cd[4])] = uint8(bool(cd[36]))
                                emit ApprovalForAll(bool(cd[36]), msg.sender, address(cd[4]));
                            else:
                                if unknown_0xa79123a9(?????) == uint32(call.func_hash) >> 224:
                                    require not msg.value
                                    require calldata.size - 4 >= 64
                                    if stor10 == 2:
                                        revert with 0, 'ReentrancyGuard: reentrant call'
                                    stor10 = 2
                                    if not sub_a0ba1bbf:
                                        revert with 0, 'ERC721 Marketplace: Listings are currently disabled'
                                    if cd[36] <= 0:
                                        revert with 0, 'ERC721 Marketplace: Invalid listing price'
                                    if not ownerOf[cd[4]]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    if ownerOf[cd[4]] != msg.sender:
                                        revert with 0, 'ERC721 Marketplace: Caller is not the owner'
                                    idx = 0
                                    while idx < sub_84917f4a.length:
                                        mem[0] = 30
                                        if sub_84917f4a[idx].field_0 == cd[4]:
                                            revert with 0, 'ERC721 Marketplace: Token is already listed'
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    sub_84917f4a.length++
                                    stor50BB[stor30.length] = cd[4]
                                    stor50BB[stor30.length] = cd[36]
                                    stor50BB[stor30.length] = msg.sender
                                    stor50BB[stor30.length] = block.timestamp
                                    emit 0xda5118e1: cd[36], cd[4], msg.sender
                                else:
                                    if unknown_0xaec6e273(?????) == uint32(call.func_hash) >> 224:
                                        require not msg.value
                                        require calldata.size - 4 >= 32
                                        if stor10 == 2:
                                            revert with 0, 'ReentrancyGuard: reentrant call'
                                        stor10 = 2
                                        idx = 0
                                        while idx < sub_84917f4a.length:
                                            mem[0] = 30
                                            if sub_84917f4a[idx].field_0 != cd[4]:
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                continue 
                                            if idx >= sub_84917f4a.length:
                                                revert with 0, 50
                                            if sub_84917f4a[idx].field_512 != msg.sender:
                                                revert with 0, 'ERC721 Marketplace: Caller is not the owner'
                                            if sub_84917f4a.length < 1:
                                                revert with 0, 17
                                            if sub_84917f4a.length - 1 >= sub_84917f4a.length:
                                                revert with 0, 50
                                            if idx >= sub_84917f4a.length:
                                                revert with 0, 50
                                            sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
                                            sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
                                            sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
                                            sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
                                            if not sub_84917f4a.length:
                                                revert with 0, 49
                                            sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
                                            sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
                                            sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
                                            sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
                                            sub_84917f4a.length--
                                            emit 0xd61f1a8b: cd[4]
                                            stor10 = 1
                                        revert with 0, 'ERC721 Marketplace: Token is not listed'
                                    require unknown_0xaeccec8c(?????) == uint32(call.func_hash) >> 224
                                    require calldata.size - 4 >= 32
                                    if stor10 == 2:
                                        revert with 0, 'ReentrancyGuard: reentrant call'
                                    stor10 = 2
                                    if not ownerOf[cd[4]]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    if ownerOf[cd[4]] != msg.sender:
                                        revert with 0, 'Only the owner of a token can claim rewards'
                                    if stor31 < cd[4]:
                                        revert with 0, 'Query for nonexistent token'
                                    if sub_176b48ee < stor26[cd[4]]:
                                        revert with 0, 17
                                    if sub_176b48ee - stor26[cd[4]] <= 0:
                                        revert with 0, 'You don't have any rewards'
                                    if sub_e8365027 < sub_176b48ee - stor26[cd[4]]:
                                        revert with 0, 17
                                    sub_e8365027 = sub_e8365027 - sub_176b48ee + stor26[cd[4]]
                                    stor26[cd[4]] = sub_176b48ee
                                    call ownerOf[cd[4]] with:
                                       value sub_176b48ee - stor26[cd[4]] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                                    emit ClaimedRewards((sub_176b48ee - stor26[cd[4]]), ownerOf[cd[4]]);
                                stor10 = 1
            else:
                if unknown_0xe8365027(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0xf1b2d6a3(?????) > uint32(call.func_hash) >> 224:
                        if unknown_0xe8365027(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return sub_e8365027
                        if unknown_0xe985e9c5(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] == address(cd[4])
                            require cd[36] == address(cd[36])
                            return bool(stor5[address(cd[4])][address(cd[36])])
                        if uint32(call.func_hash) >> 224 != unknown_0xef0c016f(?????):
                            require unknown_0xf053dc5c(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            return royalties
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] == address(cd[4])
                        if not address(cd[4]):
                            revert with 0, 'ERC721: balance query for the zero address'
                        idx = 0
                        s = 0
                        while idx < balanceOf[address(cd[4])]:
                            if not address(cd[4]):
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(cd[4])]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if stor31 < tokenOfOwnerByIndex[address(cd[4])][idx]:
                                revert with 0, 'Query for nonexistent token'
                            mem[0] = tokenOfOwnerByIndex[address(cd[4])][idx]
                            mem[32] = 26
                            if sub_176b48ee < stor26[stor6[address(cd[4])][idx]]:
                                revert with 0, 17
                            if s > !(sub_176b48ee - stor26[stor6[address(cd[4])][idx]]):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + sub_176b48ee - stor26[stor6[address(cd[4])][idx]]
                            continue 
                        return (s * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])] * balanceOf[address(cd[4])])
                    if unknown_0xf1b2d6a3(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        mem[64] = (32 * sub_84917f4a.length) + 160
                        mem[128] = sub_84917f4a.length
                        s = 160
                        idx = 0
                        while idx < sub_84917f4a.length:
                            mem[0] = 30
                            _8069 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_8069] = sub_84917f4a[idx].field_0
                            mem[_8069 + 32] = sub_84917f4a[idx].field_256
                            mem[_8069 + 64] = sub_84917f4a[idx].field_512
                            mem[_8069 + 96] = sub_84917f4a[idx].field_768
                            mem[s] = _8069
                            s = s + 32
                            idx = idx + 1
                            continue 
                        _8096 = mem[64]
                        mem[mem[64]] = 32
                        _8138 = mem[128]
                        mem[mem[64] + 32] = mem[128]
                        idx = 0
                        s = mem[64] + 64
                        t = 160
                        while idx < _8138:
                            _18166 = mem[t]
                            mem[s] = mem[mem[t]]
                            mem[s + 32] = mem[_18166 + 32]
                            mem[s + 64] = mem[_18166 + 76 len 20]
                            mem[s + 96] = mem[_18166 + 96]
                            idx = idx + 1
                            s = s + 128
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _8096 + (128 * _8138) + -mem[64] + 64
                    if unknown_0xf2fde38b(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] == address(cd[4])
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        if not address(cd[4]):
                            revert with 0, 'Ownable: new owner is the zero address'
                        owner = address(cd[4])
                        emit OwnershipTransferred(owner, address(cd[4]));
                    else:
                        if uint32(call.func_hash) >> 224 != unknown_0xf9daade4(?????):
                            if unknown_0xfad9aba3(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return dust
                            require unknown_0xfe2c7fee(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] <= test266151307()
                            require calldata.size > cd[4] + 35
                            if ('cd', 4).length > test266151307():
                                revert with 0, 65
                            if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                                revert with 0, 65
                            require cd[4] + ('cd', 4).length + 36 <= calldata.size
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if bool(stor12.length):
                                if bool(stor12.length) == uint255(stor12.length) * 0.5 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor12[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor12.length = 0
                                    idx = 0
                                    while (uint255(stor12.length) * 0.5) + 31 / 32 > idx:
                                        stor12[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if bool(stor12.length) == stor12.length.field_1 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor12[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor12.length = 0
                                    idx = 0
                                    while stor12.length.field_1 + 31 / 32 > idx:
                                        stor12[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                        else:
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] <= test266151307()
                            require cd[4] + 35 < calldata.size
                            require ('cd', 4).length <= test266151307()
                            require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
                            require cd[36] <= test266151307()
                            require cd[36] + 35 < calldata.size
                            require ('cd', 36).length <= test266151307()
                            require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if ('cd', 36).length != ('cd', 4).length:
                                revert with 0, 1
                            if not ('cd', 4).length:
                                revert with 0, 1
                            if not ('cd', 36).length:
                                revert with 0, 1
                            idx = 0
                            s = 0
                            while idx < ('cd', 36).length:
                                require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
                                if s > !uint8(cd[((32 * idx) + cd[36] + 36)]):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + uint8(cd[((32 * idx) + cd[36] + 36)])
                                continue 
                            if stor31 > !(s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length):
                                revert with 0, 17
                            if stor31 + (s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length) > maxSupply:
                                revert with 0, 'Max token supply exceeded'
                            idx = 0
                            while idx < ('cd', 4).length:
                                if idx >= ('cd', 36).length:
                                    revert with 0, 50
                                require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
                                s = 0
                                while s < uint8(cd[((32 * idx) + cd[36] + 36)]):
                                    stor31++
                                    if idx >= ('cd', 4).length:
                                        revert with 0, 50
                                    require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
                                    _28590 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_28590] = 0
                                    if not address(cd[((32 * idx) + cd[4] + 36)]):
                                        revert with 0, 'ERC721: mint to the zero address'
                                    if ownerOf[stor31]:
                                        revert with 0, 'ERC721: token already minted'
                                    t = 0
                                    while t < sub_84917f4a.length:
                                        mem[0] = 30
                                        if sub_84917f4a[t].field_0 == stor31:
                                            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                        if t == -1:
                                            revert with 0, 17
                                        t = t + 1
                                        continue 
                                    stor9[stor31] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = stor31
                                    if address(cd[((32 * idx) + cd[4] + 36)]):
                                        if not address(cd[((32 * idx) + cd[4] + 36)]):
                                            if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                                revert with 0, 17
                                            balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                            mem[0] = stor31
                                            mem[32] = 2
                                            ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                                            emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                                            if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor31
                                                mem[mem[64] + 100] = 128
                                                _36399 = mem[_28590]
                                                mem[mem[64] + 132] = mem[_28590]
                                                t = 0
                                                while t < _36399:
                                                    mem[t + mem[64] + 164] = mem[t + _28590 + 32]
                                                    t = t + 32
                                                    continue 
                                                if ceil32(_36399) <= _36399:
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_36399) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _38929 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_38929] == Mask(32, 224, mem[_38929])
                                                    if Mask(32, 224, mem[_38929]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_36399 + mem[64] + 164] = 0
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_36399) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _38930 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_38930] == Mask(32, 224, mem[_38930])
                                                    if Mask(32, 224, mem[_38930]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not address(cd[((32 * idx) + cd[4] + 36)]):
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(cd[((32 * idx) + cd[4] + 36)])][stor3[address(cd[((32 * idx) + cd[4] + 36)])]] = stor31
                                            stor7[stor31] = balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]
                                            if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                                revert with 0, 17
                                            balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                            mem[0] = stor31
                                            mem[32] = 2
                                            ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                                            emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                                            if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor31
                                                mem[mem[64] + 100] = 128
                                                _37367 = mem[_28590]
                                                mem[mem[64] + 132] = mem[_28590]
                                                t = 0
                                                while t < _37367:
                                                    mem[t + mem[64] + 164] = mem[t + _28590 + 32]
                                                    t = t + 32
                                                    continue 
                                                if ceil32(_37367) <= _37367:
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_37367) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _38931 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_38931] == Mask(32, 224, mem[_38931])
                                                    if Mask(32, 224, mem[_38931]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_37367 + mem[64] + 164] = 0
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_37367) + 32]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _38932 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_38932] == Mask(32, 224, mem[_38932])
                                                    if Mask(32, 224, mem[_38932]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor9[stor31] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor9[stor31]] = tokenByIndex[tokenByIndex.length]
                                        stor9[stor8[stor8.length]] = stor9[stor31]
                                        stor9[stor31] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                            revert with 0, 17
                                        balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                        mem[0] = stor31
                                        mem[32] = 2
                                        ownerOf[stor31] = address(cd[((32 * idx) + cd[4] + 36)])
                                        emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor31);
                                        if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = stor31
                                            mem[mem[64] + 100] = 128
                                            _37564 = mem[_28590]
                                            mem[mem[64] + 132] = mem[_28590]
                                            t = 0
                                            while t < _37564:
                                                mem[t + mem[64] + 164] = mem[t + _28590 + 32]
                                                t = t + 32
                                                continue 
                                            if ceil32(_37564) <= _37564:
                                                call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_37564) + 32]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _38933 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_38933] == Mask(32, 224, mem[_38933])
                                                if Mask(32, 224, mem[_38933]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[_37564 + mem[64] + 164] = 0
                                                call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 0, stor31, 128, mem[mem[64] + 132 len ceil32(_37564) + 32]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _38934 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_38934] == Mask(32, 224, mem[_38934])
                                                if Mask(32, 224, mem[_38934]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    mem[0] = stor31
                                    mem[32] = 26
                                    stor26[stor31] = sub_176b48ee
                                    if s == -1:
                                        revert with 0, 17
                                    s = s + 1
                                    continue 
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                else:
                    if unknown_0xd3dc1bd1(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0xd3dc1bd1(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_176b48ee = cd[4]
                        else:
                            if unknown_0xd5abeb01(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return maxSupply
                            if unknown_0xd6fb650c(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                mintRewards = cd[4]
                            else:
                                if uint32(call.func_hash) >> 224 != unknown_0xdb2e21bc(?????):
                                    require unknown_0xe02f3993(?????) == uint32(call.func_hash) >> 224
                                    require not msg.value
                                    return sub_e02f3993
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                call owner with:
                                   value eth.balance(this.address) wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                    else:
                        if unknown_0xaff72141(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] <= test266151307()
                            require calldata.size > cd[4] + 35
                            if ('cd', 4).length > test266151307():
                                revert with 0, 65
                            if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                                revert with 0, 65
                            require cd[4] + ('cd', 4).length + 36 <= calldata.size
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if bool(stor14.length):
                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor14.length = 0
                                    idx = 0
                                    while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                                        stor14[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor14.length = 0
                                    idx = 0
                                    while stor14.length.field_1 + 31 / 32 > idx:
                                        stor14[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                        else:
                            if unknown_0xb5350ebf(?????) == uint32(call.func_hash) >> 224:
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                if not stor31:
                                    revert with 0, 18
                                if msg.value / stor31 and stor31 > -1 / msg.value / stor31:
                                    revert with 0, 17
                                if sub_176b48ee > !(msg.value / stor31):
                                    revert with 0, 17
                                sub_176b48ee += msg.value / stor31
                                if sub_e8365027 > !(msg.value / stor31 * stor31):
                                    revert with 0, 17
                                sub_e8365027 += msg.value / stor31 * stor31
                                emit 0xf47d3b55: msg.value
                            else:
                                if uint32(call.func_hash) >> 224 != unknown_0xb88d4fde(?????):
                                    require unknown_0xc87b56dd(?????) == uint32(call.func_hash) >> 224
                                    require not msg.value
                                    require calldata.size - 4 >= 32
                                    mem[0] = cd[4]
                                    mem[32] = 2
                                    if not ownerOf[cd[4]]:
                                        revert with 0, 'ERC721Metadata: URI query for nonexistent token'
                                    if not revealed:
                                        if bool(stor12.length):
                                            if bool(stor12.length) == uint255(stor12.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if bool(stor12.length):
                                                if bool(stor12.length) == uint255(stor12.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor12.length):
                                                    if 31 < uint255(stor12.length) * 0.5:
                                                        mem[160] = uint256(stor12.field_0)
                                                        idx = 160
                                                        s = 0
                                                        while (uint255(stor12.length) * 0.5) + 128 > idx:
                                                            mem[idx + 32] = stor12[s].field_256
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        return Array(len=2 * Mask(256, -1, stor12.length), data=mem[160 len ceil32(uint255(stor12.length) * 0.5)])
                                                    mem[160] = 256 * stor12.length.field_8
                                            else:
                                                if bool(stor12.length) == stor12.length.field_1 < 32:
                                                    revert with 0, 34
                                                if stor12.length.field_1:
                                                    if 31 < stor12.length.field_1:
                                                        mem[160] = uint256(stor12.field_0)
                                                        idx = 160
                                                        s = 0
                                                        while stor12.length.field_1 + 128 > idx:
                                                            mem[idx + 32] = stor12[s].field_256
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        return Array(len=2 * Mask(256, -1, stor12.length), data=mem[160 len ceil32(uint255(stor12.length) * 0.5)])
                                                    mem[160] = 256 * stor12.length.field_8
                                            mem[ceil32(uint255(stor12.length) * 0.5) + 224 len ceil32(uint255(stor12.length) * 0.5)] = mem[160 len ceil32(uint255(stor12.length) * 0.5)]
                                            if ceil32(uint255(stor12.length) * 0.5) > uint255(stor12.length) * 0.5:
                                                mem[(uint255(stor12.length) * 0.5) + ceil32(uint255(stor12.length) * 0.5) + 224] = 0
                                            return Array(len=2 * Mask(256, -1, stor12.length), data=mem[160 len ceil32(uint255(stor12.length) * 0.5)], mem[(2 * ceil32(uint255(stor12.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor12.length) * 0.5)]), 
                                        if bool(stor12.length) == stor12.length.field_1 < 32:
                                            revert with 0, 34
                                        if bool(stor12.length):
                                            if bool(stor12.length) == uint255(stor12.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor12.length):
                                                if 31 < uint255(stor12.length) * 0.5:
                                                    mem[160] = uint256(stor12.field_0)
                                                    idx = 160
                                                    s = 0
                                                    while (uint255(stor12.length) * 0.5) + 128 > idx:
                                                        mem[idx + 32] = stor12[s].field_256
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    return Array(len=stor12.length % 128, data=mem[160 len ceil32(stor12.length.field_1)])
                                                mem[160] = 256 * stor12.length.field_8
                                        else:
                                            if bool(stor12.length) == stor12.length.field_1 < 32:
                                                revert with 0, 34
                                            if stor12.length.field_1:
                                                if 31 < stor12.length.field_1:
                                                    mem[160] = uint256(stor12.field_0)
                                                    idx = 160
                                                    s = 0
                                                    while stor12.length.field_1 + 128 > idx:
                                                        mem[idx + 32] = stor12[s].field_256
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    return Array(len=stor12.length % 128, data=mem[160 len ceil32(stor12.length.field_1)])
                                                mem[160] = 256 * stor12.length.field_8
                                        mem[ceil32(stor12.length.field_1) + 224 len ceil32(stor12.length.field_1)] = mem[160 len ceil32(stor12.length.field_1)]
                                        if ceil32(stor12.length.field_1) > stor12.length.field_1:
                                            mem[stor12.length.field_1 + ceil32(stor12.length.field_1) + 224] = 0
                                        return Array(len=stor12.length % 128, data=mem[160 len ceil32(stor12.length.field_1)], mem[(2 * ceil32(stor12.length.field_1)) + 224 len 2 * ceil32(stor12.length.field_1)]), 
                                    if bool(stor13.length):
                                        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                            revert with 0, 34
                                        mem[128] = uint255(stor13.length) * 0.5
                                        if bool(stor13.length):
                                            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not Mask(256, -1, stor13.length):
                                                if uint255(stor13.length) * 0.5 <= 0:
                                                    return ''
                                                if not cd[4]:
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                                    if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _20629 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                                if ceil32(_20629) > _20629:
                                                                    mem[_20629 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_20629) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            _27444 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            _27976 = mem[_27444]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27444]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_27976)] = mem[_27444 + 32 len ceil32(_27976)]
                                                            if ceil32(_27976) > _27976:
                                                                mem[_27976 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_27976) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20789 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20789) > _20789:
                                                                mem[_20789 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20789) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27445 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        _27977 = mem[_27445]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27445]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_27977)] = mem[_27445 + 32 len ceil32(_27977)]
                                                        if ceil32(_27977) > _27977:
                                                            mem[_27977 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_27977) + 32], 
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20635 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20635) > _20635:
                                                                mem[_20635 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20635) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27448 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _27980 = mem[_27448]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27448]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_27980)] = mem[_27448 + 32 len ceil32(_27980)]
                                                        if ceil32(_27980) > _27980:
                                                            mem[_27980 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_27980) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20793 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20793) > _20793:
                                                            mem[_20793 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20793) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27449 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    _27981 = mem[_27449]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27449]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_27981)] = mem[_27449 + 32 len ceil32(_27981)]
                                                    if ceil32(_27981) > _27981:
                                                        mem[_27981 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_27981) + 32], 
                                                s = 0
                                                idx = cd[4]
                                                while idx:
                                                    if s == -1:
                                                        revert with 0, 17
                                                    s = s + 1
                                                    idx = idx / 10
                                                    continue 
                                                if s > test266151307():
                                                    revert with 0, 65
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                                if not s:
                                                    t = s
                                                    idx = cd[4]
                                                    while idx:
                                                        if t < 1:
                                                            revert with 0, 17
                                                        if 48 > !(idx % 10):
                                                            revert with 0, 17
                                                        if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                            revert with 0, 50
                                                        mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                        t = t - 1
                                                        idx = idx / 10
                                                        continue 
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                    if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                        _27438 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                            if bool(stor14.length):
                                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor14.length):
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                    _34590 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34590)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34590)]
                                                                    if ceil32(_34590) > _34590:
                                                                        mem[_34590 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34590) + 32], 
                                                                if bool(stor14.length) != 1:
                                                                    mem[64] = 0
                                                                    _34818 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_34818) > _34818:
                                                                        mem[_34818 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_34818) + -mem[64] + 64
                                                                mem[0] = 14
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor14.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                                _38091 = mem[64]
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _38935 = mem[_38091]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 256] = mem[_38091]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38935)] = mem[_38091 + 32 len ceil32(_38935)]
                                                                if ceil32(_38935) > _38935:
                                                                    mem[_38935 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38935) + 32], 
                                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                                _34819 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34819)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34819)]
                                                                if ceil32(_34819) > _34819:
                                                                    mem[_34819 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34819) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _35079 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_35079) > _35079:
                                                                    mem[_35079 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_35079) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor14.length.field_1:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38092 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 224] = 32
                                                            _38936 = mem[_38092]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 256] = mem[_38092]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 288 len ceil32(_38936)] = mem[_38092 + 32 len ceil32(_38936)]
                                                            if ceil32(_38936) > _38936:
                                                                mem[_38936 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 256 len ceil32(_38936) + 32], 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34593 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34593)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34593)]
                                                                if ceil32(_34593) > _34593:
                                                                    mem[_34593 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34593) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34821 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34821) > _34821:
                                                                    mem[_34821 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34821) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38093 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38937 = mem[_38093]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 256] = mem[_38093]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38937)] = mem[_38093 + 32 len ceil32(_38937)]
                                                            if ceil32(_38937) > _38937:
                                                                mem[_38937 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38937) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34822 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34822)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34822)]
                                                            if ceil32(_34822) > _34822:
                                                                mem[_34822 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34822) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35081 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35081) > _35081:
                                                                mem[_35081 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35081) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38094 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 224] = 32
                                                        _38938 = mem[_38094]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 256] = mem[_38094]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 288 len ceil32(_38938)] = mem[_38094 + 32 len ceil32(_38938)]
                                                        if ceil32(_38938) > _38938:
                                                            mem[_38938 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27438 + stor14.length.field_1 + 256 len ceil32(_38938) + 32], 
                                                    mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                    _27439 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34596 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34596)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34596)]
                                                                if ceil32(_34596) > _34596:
                                                                    mem[_34596 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34596) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34824 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34824) > _34824:
                                                                    mem[_34824 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34824) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38095 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38939 = mem[_38095]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 256] = mem[_38095]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38939)] = mem[_38095 + 32 len ceil32(_38939)]
                                                            if ceil32(_38939) > _38939:
                                                                mem[_38939 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38939) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34825 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34825)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34825)]
                                                            if ceil32(_34825) > _34825:
                                                                mem[_34825 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34825) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35083 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35083) > _35083:
                                                                mem[_35083 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35083) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38096 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 224] = 32
                                                        _38940 = mem[_38096]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 256] = mem[_38096]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 288 len ceil32(_38940)] = mem[_38096 + 32 len ceil32(_38940)]
                                                        if ceil32(_38940) > _38940:
                                                            mem[_38940 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 256 len ceil32(_38940) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34599 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34599)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34599)]
                                                            if ceil32(_34599) > _34599:
                                                                mem[_34599 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34599) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34827 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34827) > _34827:
                                                                mem[_34827 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34827) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38097 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38941 = mem[_38097]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 256] = mem[_38097]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38941)] = mem[_38097 + 32 len ceil32(_38941)]
                                                        if ceil32(_38941) > _38941:
                                                            mem[_38941 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38941) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34828 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34828)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34828)]
                                                        if ceil32(_34828) > _34828:
                                                            mem[_34828 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34828) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35085 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35085) > _35085:
                                                            mem[_35085 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35085) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38098 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 224] = 32
                                                    _38942 = mem[_38098]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 256] = mem[_38098]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 288 len ceil32(_38942)] = mem[_38098 + 32 len ceil32(_38942)]
                                                    if ceil32(_38942) > _38942:
                                                        mem[_38942 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27439 + stor14.length.field_1 + 256 len ceil32(_38942) + 32], 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    _27440 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34602 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34602)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34602)]
                                                                if ceil32(_34602) > _34602:
                                                                    mem[_34602 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34602) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34830 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34830) > _34830:
                                                                    mem[_34830 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34830) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38099 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38943 = mem[_38099]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 256] = mem[_38099]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38943)] = mem[_38099 + 32 len ceil32(_38943)]
                                                            if ceil32(_38943) > _38943:
                                                                mem[_38943 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38943) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34831 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34831)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34831)]
                                                            if ceil32(_34831) > _34831:
                                                                mem[_34831 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34831) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35087 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35087) > _35087:
                                                                mem[_35087 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35087) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38100 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 224] = 32
                                                        _38944 = mem[_38100]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 256] = mem[_38100]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 288 len ceil32(_38944)] = mem[_38100 + 32 len ceil32(_38944)]
                                                        if ceil32(_38944) > _38944:
                                                            mem[_38944 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 256 len ceil32(_38944) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34605 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34605)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34605)]
                                                            if ceil32(_34605) > _34605:
                                                                mem[_34605 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34605) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34833 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34833) > _34833:
                                                                mem[_34833 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34833) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38101 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38945 = mem[_38101]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 256] = mem[_38101]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38945)] = mem[_38101 + 32 len ceil32(_38945)]
                                                        if ceil32(_38945) > _38945:
                                                            mem[_38945 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38945) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34834 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34834)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34834)]
                                                        if ceil32(_34834) > _34834:
                                                            mem[_34834 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34834) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35089 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35089) > _35089:
                                                            mem[_35089 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35089) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38102 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 224] = 32
                                                    _38946 = mem[_38102]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 256] = mem[_38102]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 288 len ceil32(_38946)] = mem[_38102 + 32 len ceil32(_38946)]
                                                    if ceil32(_38946) > _38946:
                                                        mem[_38946 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27440 + stor14.length.field_1 + 256 len ceil32(_38946) + 32], 
                                                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                _27441 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34608 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34608)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34608)]
                                                            if ceil32(_34608) > _34608:
                                                                mem[_34608 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34608) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34836 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34836) > _34836:
                                                                mem[_34836 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34836) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38103 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38947 = mem[_38103]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 256] = mem[_38103]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38947)] = mem[_38103 + 32 len ceil32(_38947)]
                                                        if ceil32(_38947) > _38947:
                                                            mem[_38947 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38947) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34837 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34837)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34837)]
                                                        if ceil32(_34837) > _34837:
                                                            mem[_34837 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34837) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35091 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35091) > _35091:
                                                            mem[_35091 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35091) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38104 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 224] = 32
                                                    _38948 = mem[_38104]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 256] = mem[_38104]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 288 len ceil32(_38948)] = mem[_38104 + 32 len ceil32(_38948)]
                                                    if ceil32(_38948) > _38948:
                                                        mem[_38948 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 256 len ceil32(_38948) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34611 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34611)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34611)]
                                                        if ceil32(_34611) > _34611:
                                                            mem[_34611 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34611) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34839 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34839) > _34839:
                                                            mem[_34839 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34839) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38105 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _38949 = mem[_38105]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 256] = mem[_38105]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38949)] = mem[_38105 + 32 len ceil32(_38949)]
                                                    if ceil32(_38949) > _38949:
                                                        mem[_38949 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38949) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34840 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34840)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34840)]
                                                    if ceil32(_34840) > _34840:
                                                        mem[_34840 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34840) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35093 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35093) > _35093:
                                                        mem[_35093 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35093) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38106 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 224] = 32
                                                _38950 = mem[_38106]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 256] = mem[_38106]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 288 len ceil32(_38950)] = mem[_38106 + 32 len ceil32(_38950)]
                                                if ceil32(_38950) > _38950:
                                                    mem[_38950 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27441 + stor14.length.field_1 + 256 len ceil32(_38950) + 32], 
                                            if 31 >= uint255(stor13.length) * 0.5:
                                                mem[160] = 256 * stor13.length.field_8
                                                if uint255(stor13.length) * 0.5 <= 0:
                                                    return ''
                                                if not cd[4]:
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                                    if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _20651 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                                if ceil32(_20651) > _20651:
                                                                    mem[_20651 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_20651) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            _27458 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            _27988 = mem[_27458]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27458]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_27988)] = mem[_27458 + 32 len ceil32(_27988)]
                                                            if ceil32(_27988) > _27988:
                                                                mem[_27988 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_27988) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20806 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20806) > _20806:
                                                                mem[_20806 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20806) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27459 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        _27989 = mem[_27459]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27459]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_27989)] = mem[_27459 + 32 len ceil32(_27989)]
                                                        if ceil32(_27989) > _27989:
                                                            mem[_27989 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_27989) + 32], 
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20657 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20657) > _20657:
                                                                mem[_20657 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20657) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27462 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _27992 = mem[_27462]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27462]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_27992)] = mem[_27462 + 32 len ceil32(_27992)]
                                                        if ceil32(_27992) > _27992:
                                                            mem[_27992 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_27992) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20810 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20810) > _20810:
                                                            mem[_20810 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20810) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27463 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    _27993 = mem[_27463]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27463]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_27993)] = mem[_27463 + 32 len ceil32(_27993)]
                                                    if ceil32(_27993) > _27993:
                                                        mem[_27993 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_27993) + 32], 
                                                s = 0
                                                idx = cd[4]
                                                while idx:
                                                    if s == -1:
                                                        revert with 0, 17
                                                    s = s + 1
                                                    idx = idx / 10
                                                    continue 
                                                if s > test266151307():
                                                    revert with 0, 65
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                                if not s:
                                                    t = s
                                                    idx = cd[4]
                                                    while idx:
                                                        if t < 1:
                                                            revert with 0, 17
                                                        if 48 > !(idx % 10):
                                                            revert with 0, 17
                                                        if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                            revert with 0, 50
                                                        mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                        t = t - 1
                                                        idx = idx / 10
                                                        continue 
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                    if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                            if bool(stor14.length):
                                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor14.length):
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                    _34622 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34622)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34622)]
                                                                    if ceil32(_34622) > _34622:
                                                                        mem[_34622 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34622) + 32], 
                                                                if bool(stor14.length) != 1:
                                                                    mem[64] = 0
                                                                    _34858 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_34858) > _34858:
                                                                        mem[_34858 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_34858) + -mem[64] + 64
                                                                mem[0] = 14
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor14.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                                _38107 = mem[64]
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _38959 = mem[_38107]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38107]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38959)] = mem[_38107 + 32 len ceil32(_38959)]
                                                                if ceil32(_38959) > _38959:
                                                                    mem[_38959 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38959) + 32], 
                                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                                _34859 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34859)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34859)]
                                                                if ceil32(_34859) > _34859:
                                                                    mem[_34859 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34859) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _35127 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_35127) > _35127:
                                                                    mem[_35127 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_35127) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor14.length.field_1:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38108 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _38960 = mem[_38108]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38108]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38960)] = mem[_38108 + 32 len ceil32(_38960)]
                                                            if ceil32(_38960) > _38960:
                                                                mem[_38960 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38960) + 32], 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34625 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34625)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34625)]
                                                                if ceil32(_34625) > _34625:
                                                                    mem[_34625 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34625) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34861 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34861) > _34861:
                                                                    mem[_34861 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34861) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38109 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38961 = mem[_38109]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38109]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38961)] = mem[_38109 + 32 len ceil32(_38961)]
                                                            if ceil32(_38961) > _38961:
                                                                mem[_38961 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38961) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34862 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34862)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34862)]
                                                            if ceil32(_34862) > _34862:
                                                                mem[_34862 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34862) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35129 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35129) > _35129:
                                                                mem[_35129 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35129) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38110 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _38962 = mem[_38110]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38110]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38962)] = mem[_38110 + 32 len ceil32(_38962)]
                                                        if ceil32(_38962) > _38962:
                                                            mem[_38962 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38962) + 32], 
                                                    mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34628 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34628)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34628)]
                                                                if ceil32(_34628) > _34628:
                                                                    mem[_34628 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34628) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34864 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34864) > _34864:
                                                                    mem[_34864 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34864) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38111 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38963 = mem[_38111]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38111]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38963)] = mem[_38111 + 32 len ceil32(_38963)]
                                                            if ceil32(_38963) > _38963:
                                                                mem[_38963 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38963) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34865 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34865)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34865)]
                                                            if ceil32(_34865) > _34865:
                                                                mem[_34865 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34865) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35131 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35131) > _35131:
                                                                mem[_35131 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35131) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38112 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _38964 = mem[_38112]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38112]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38964)] = mem[_38112 + 32 len ceil32(_38964)]
                                                        if ceil32(_38964) > _38964:
                                                            mem[_38964 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38964) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34631 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34631)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34631)]
                                                            if ceil32(_34631) > _34631:
                                                                mem[_34631 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34631) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34867 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34867) > _34867:
                                                                mem[_34867 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34867) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38113 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38965 = mem[_38113]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38113]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38965)] = mem[_38113 + 32 len ceil32(_38965)]
                                                        if ceil32(_38965) > _38965:
                                                            mem[_38965 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38965) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34868 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34868)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34868)]
                                                        if ceil32(_34868) > _34868:
                                                            mem[_34868 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34868) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35133 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35133) > _35133:
                                                            mem[_35133 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35133) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38114 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _38966 = mem[_38114]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38114]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38966)] = mem[_38114 + 32 len ceil32(_38966)]
                                                    if ceil32(_38966) > _38966:
                                                        mem[_38966 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38966) + 32], 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34634 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34634)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34634)]
                                                                if ceil32(_34634) > _34634:
                                                                    mem[_34634 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34634) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34870 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34870) > _34870:
                                                                    mem[_34870 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34870) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38115 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38967 = mem[_38115]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38115]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38967)] = mem[_38115 + 32 len ceil32(_38967)]
                                                            if ceil32(_38967) > _38967:
                                                                mem[_38967 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38967) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34871 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34871)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34871)]
                                                            if ceil32(_34871) > _34871:
                                                                mem[_34871 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34871) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35135 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35135) > _35135:
                                                                mem[_35135 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35135) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38116 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _38968 = mem[_38116]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38116]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38968)] = mem[_38116 + 32 len ceil32(_38968)]
                                                        if ceil32(_38968) > _38968:
                                                            mem[_38968 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38968) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34637 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34637)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34637)]
                                                            if ceil32(_34637) > _34637:
                                                                mem[_34637 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34637) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34873 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34873) > _34873:
                                                                mem[_34873 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34873) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38117 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38969 = mem[_38117]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38117]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38969)] = mem[_38117 + 32 len ceil32(_38969)]
                                                        if ceil32(_38969) > _38969:
                                                            mem[_38969 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38969) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34874 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34874)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34874)]
                                                        if ceil32(_34874) > _34874:
                                                            mem[_34874 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34874) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35137 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35137) > _35137:
                                                            mem[_35137 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35137) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38118 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _38970 = mem[_38118]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38118]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38970)] = mem[_38118 + 32 len ceil32(_38970)]
                                                    if ceil32(_38970) > _38970:
                                                        mem[_38970 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38970) + 32], 
                                                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34640 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34640)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34640)]
                                                            if ceil32(_34640) > _34640:
                                                                mem[_34640 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34640) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34876 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34876) > _34876:
                                                                mem[_34876 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34876) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38119 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38971 = mem[_38119]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38119]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38971)] = mem[_38119 + 32 len ceil32(_38971)]
                                                        if ceil32(_38971) > _38971:
                                                            mem[_38971 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38971) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34877 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34877)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34877)]
                                                        if ceil32(_34877) > _34877:
                                                            mem[_34877 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34877) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35139 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35139) > _35139:
                                                            mem[_35139 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35139) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38120 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _38972 = mem[_38120]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38120]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38972)] = mem[_38120 + 32 len ceil32(_38972)]
                                                    if ceil32(_38972) > _38972:
                                                        mem[_38972 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38972) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34643 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34643)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34643)]
                                                        if ceil32(_34643) > _34643:
                                                            mem[_34643 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34643) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34879 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34879) > _34879:
                                                            mem[_34879 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34879) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38121 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _38973 = mem[_38121]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38121]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38973)] = mem[_38121 + 32 len ceil32(_38973)]
                                                    if ceil32(_38973) > _38973:
                                                        mem[_38973 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38973) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34880 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34880)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34880)]
                                                    if ceil32(_34880) > _34880:
                                                        mem[_34880 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34880) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35141 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35141) > _35141:
                                                        mem[_35141 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35141) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38122 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _38974 = mem[_38122]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[_38122]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_38974)] = mem[_38122 + 32 len ceil32(_38974)]
                                                if ceil32(_38974) > _38974:
                                                    mem[_38974 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_38974) + 32], 
                                            mem[0] = 13
                                            mem[160] = uint256(stor13.field_0)
                                            idx = 160
                                            s = 0
                                            while (uint255(stor13.length) * 0.5) + 128 > idx:
                                                mem[idx + 32] = stor13[s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            if uint255(stor13.length) * 0.5 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    if not bool(stor14.length):
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) == 1:
                                                            idx = 0
                                                            s = 0
                                                            while idx < stor14.length.field_1:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        mem[64] = 0
                                                        _28986 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        var65001 = ceil32(_28986)
                                                        if ceil32(_28986) > _28986:
                                                            mem[_28986 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28986) + -mem[64] + 64
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    else:
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _28795 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_28795) > _28795:
                                                                mem[_28795 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_28795) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        var67001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])
                                                else:
                                                    if not bool(stor14.length):
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) == 1:
                                                            idx = 0
                                                            s = 0
                                                            while idx < stor14.length.field_1:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        mem[64] = 0
                                                        _28990 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        var65001 = ceil32(_28990)
                                                        if ceil32(_28990) > _28990:
                                                            mem[_28990 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28990) + -mem[64] + 64
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    else:
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _28801 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_28801) > _28801:
                                                                mem[_28801 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_28801) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        var67001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                    return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    _33530 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _39559 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39559)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39559)]
                                                                if ceil32(_39559) > _39559:
                                                                    mem[_39559 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39559) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _39668 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_39668) > _39668:
                                                                    mem[_39668 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_39668) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _40997 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _41637 = mem[_40997]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 256] = mem[_40997]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41637)] = mem[_40997 + 32 len ceil32(_41637)]
                                                            if ceil32(_41637) > _41637:
                                                                mem[_41637 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41637) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _39669 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39669)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39669)]
                                                            if ceil32(_39669) > _39669:
                                                                mem[_39669 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39669) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39796 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_39796) > _39796:
                                                                mem[_39796 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39796) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _40998 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 224] = 32
                                                        _41638 = mem[_40998]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 256] = mem[_40998]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 288 len ceil32(_41638)] = mem[_40998 + 32 len ceil32(_41638)]
                                                        if ceil32(_41638) > _41638:
                                                            mem[_41638 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 256 len ceil32(_41638) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39562 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39562)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39562)]
                                                            if ceil32(_39562) > _39562:
                                                                mem[_39562 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39562) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39671 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_39671) > _39671:
                                                                mem[_39671 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39671) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _40999 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _41639 = mem[_40999]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 256] = mem[_40999]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41639)] = mem[_40999 + 32 len ceil32(_41639)]
                                                        if ceil32(_41639) > _41639:
                                                            mem[_41639 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41639) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _39672 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39672)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39672)]
                                                        if ceil32(_39672) > _39672:
                                                            mem[_39672 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39672) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39798 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39798) > _39798:
                                                            mem[_39798 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39798) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41000 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 224] = 32
                                                    _41640 = mem[_41000]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 256] = mem[_41000]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 288 len ceil32(_41640)] = mem[_41000 + 32 len ceil32(_41640)]
                                                    if ceil32(_41640) > _41640:
                                                        mem[_41640 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33530 + stor14.length.field_1 + 256 len ceil32(_41640) + 32], 
                                                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                _33531 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39565 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39565)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39565)]
                                                            if ceil32(_39565) > _39565:
                                                                mem[_39565 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39565) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39674 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_39674) > _39674:
                                                                mem[_39674 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39674) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _41001 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _41641 = mem[_41001]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 256] = mem[_41001]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41641)] = mem[_41001 + 32 len ceil32(_41641)]
                                                        if ceil32(_41641) > _41641:
                                                            mem[_41641 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41641) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _39675 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39675)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39675)]
                                                        if ceil32(_39675) > _39675:
                                                            mem[_39675 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39675) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39800 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39800) > _39800:
                                                            mem[_39800 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39800) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41002 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 224] = 32
                                                    _41642 = mem[_41002]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 256] = mem[_41002]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 288 len ceil32(_41642)] = mem[_41002 + 32 len ceil32(_41642)]
                                                    if ceil32(_41642) > _41642:
                                                        mem[_41642 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 256 len ceil32(_41642) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39568 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39568)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39568)]
                                                        if ceil32(_39568) > _39568:
                                                            mem[_39568 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39568) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39677 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39677) > _39677:
                                                            mem[_39677 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39677) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41003 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41643 = mem[_41003]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 256] = mem[_41003]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41643)] = mem[_41003 + 32 len ceil32(_41643)]
                                                    if ceil32(_41643) > _41643:
                                                        mem[_41643 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41643) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39678 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39678)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39678)]
                                                    if ceil32(_39678) > _39678:
                                                        mem[_39678 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39678) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39802 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39802) > _39802:
                                                        mem[_39802 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39802) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41004 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 224] = 32
                                                _41644 = mem[_41004]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 256] = mem[_41004]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 288 len ceil32(_41644)] = mem[_41004 + 32 len ceil32(_41644)]
                                                if ceil32(_41644) > _41644:
                                                    mem[_41644 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33531 + stor14.length.field_1 + 256 len ceil32(_41644) + 32], 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                            if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                _33532 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                var57001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39571 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39571)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39571)]
                                                            if ceil32(_39571) > _39571:
                                                                mem[_39571 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39571) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39680 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_39680) > _39680:
                                                                mem[_39680 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39680) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _41005 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _41645 = mem[_41005]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 256] = mem[_41005]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41645)] = mem[_41005 + 32 len ceil32(_41645)]
                                                        if ceil32(_41645) > _41645:
                                                            mem[_41645 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41645) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _39681 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39681)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39681)]
                                                        if ceil32(_39681) > _39681:
                                                            mem[_39681 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39681) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39804 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39804) > _39804:
                                                            mem[_39804 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39804) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41006 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 224] = 32
                                                    _41646 = mem[_41006]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 256] = mem[_41006]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 288 len ceil32(_41646)] = mem[_41006 + 32 len ceil32(_41646)]
                                                    if ceil32(_41646) > _41646:
                                                        mem[_41646 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 256 len ceil32(_41646) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39574 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39574)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39574)]
                                                        if ceil32(_39574) > _39574:
                                                            mem[_39574 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39574) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39683 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39683) > _39683:
                                                            mem[_39683 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39683) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41007 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41647 = mem[_41007]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 256] = mem[_41007]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41647)] = mem[_41007 + 32 len ceil32(_41647)]
                                                    if ceil32(_41647) > _41647:
                                                        mem[_41647 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41647) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39684 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39684)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39684)]
                                                    if ceil32(_39684) > _39684:
                                                        mem[_39684 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39684) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39806 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39806) > _39806:
                                                        mem[_39806 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39806) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41008 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 224] = 32
                                                _41648 = mem[_41008]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 256] = mem[_41008]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 288 len ceil32(_41648)] = mem[_41008 + 32 len ceil32(_41648)]
                                                if ceil32(_41648) > _41648:
                                                    mem[_41648 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33532 + stor14.length.field_1 + 256 len ceil32(_41648) + 32], 
                                            mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                            _33533 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                            var57001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39577 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39577)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39577)]
                                                        if ceil32(_39577) > _39577:
                                                            mem[_39577 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39577) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39686 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39686) > _39686:
                                                            mem[_39686 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39686) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41009 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41649 = mem[_41009]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 256] = mem[_41009]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41649)] = mem[_41009 + 32 len ceil32(_41649)]
                                                    if ceil32(_41649) > _41649:
                                                        mem[_41649 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41649) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39687 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39687)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39687)]
                                                    if ceil32(_39687) > _39687:
                                                        mem[_39687 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39687) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39808 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39808) > _39808:
                                                        mem[_39808 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39808) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41010 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 224] = 32
                                                _41650 = mem[_41010]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 256] = mem[_41010]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 288 len ceil32(_41650)] = mem[_41010 + 32 len ceil32(_41650)]
                                                if ceil32(_41650) > _41650:
                                                    mem[_41650 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 256 len ceil32(_41650) + 32], 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39580 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39580)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39580)]
                                                    if ceil32(_39580) > _39580:
                                                        mem[_39580 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39580) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39689 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39689) > _39689:
                                                        mem[_39689 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39689) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41011 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41651 = mem[_41011]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 256] = mem[_41011]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41651)] = mem[_41011 + 32 len ceil32(_41651)]
                                                if ceil32(_41651) > _41651:
                                                    mem[_41651 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41651) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _39690 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39690)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39690)]
                                                if ceil32(_39690) > _39690:
                                                    mem[_39690 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39690) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39810 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_39810) > _39810:
                                                    mem[_39810 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39810) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41012 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 224] = 32
                                            _41652 = mem[_41012]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 256] = mem[_41012]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 288 len ceil32(_41652)] = mem[_41012 + 32 len ceil32(_41652)]
                                            if ceil32(_41652) > _41652:
                                                mem[_41652 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33533 + stor14.length.field_1 + 256 len ceil32(_41652) + 32], 
                                        if bool(stor13.length) == stor13.length.field_1 < 32:
                                            revert with 0, 34
                                        if not stor13.length.field_1:
                                            if uint255(stor13.length) * 0.5 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20663 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20663) > _20663:
                                                                mem[_20663 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20663) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27470 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _27996 = mem[_27470]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27470]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_27996)] = mem[_27470 + 32 len ceil32(_27996)]
                                                        if ceil32(_27996) > _27996:
                                                            mem[_27996 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_27996) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20814 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20814) > _20814:
                                                            mem[_20814 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20814) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27471 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    _27997 = mem[_27471]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27471]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_27997)] = mem[_27471 + 32 len ceil32(_27997)]
                                                    if ceil32(_27997) > _27997:
                                                        mem[_27997 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_27997) + 32], 
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20669 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20669) > _20669:
                                                            mem[_20669 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20669) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27474 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28000 = mem[_27474]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27474]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28000)] = mem[_27474 + 32 len ceil32(_28000)]
                                                    if ceil32(_28000) > _28000:
                                                        mem[_28000 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28000) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20818 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    if ceil32(_20818) > _20818:
                                                        mem[_20818 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20818) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27475 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                _28001 = mem[_27475]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27475]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_28001)] = mem[_27475 + 32 len ceil32(_28001)]
                                                if ceil32(_28001) > _28001:
                                                    mem[_28001 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_28001) + 32], 
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    _27464 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34646 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34646)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34646)]
                                                                if ceil32(_34646) > _34646:
                                                                    mem[_34646 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34646) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34882 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34882) > _34882:
                                                                    mem[_34882 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34882) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38123 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38975 = mem[_38123]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 256] = mem[_38123]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38975)] = mem[_38123 + 32 len ceil32(_38975)]
                                                            if ceil32(_38975) > _38975:
                                                                mem[_38975 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38975) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34883 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34883)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34883)]
                                                            if ceil32(_34883) > _34883:
                                                                mem[_34883 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34883) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35143 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35143) > _35143:
                                                                mem[_35143 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35143) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38124 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 224] = 32
                                                        _38976 = mem[_38124]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 256] = mem[_38124]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 288 len ceil32(_38976)] = mem[_38124 + 32 len ceil32(_38976)]
                                                        if ceil32(_38976) > _38976:
                                                            mem[_38976 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 256 len ceil32(_38976) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34649 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34649)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34649)]
                                                            if ceil32(_34649) > _34649:
                                                                mem[_34649 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34649) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34885 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34885) > _34885:
                                                                mem[_34885 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34885) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38125 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38977 = mem[_38125]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 256] = mem[_38125]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38977)] = mem[_38125 + 32 len ceil32(_38977)]
                                                        if ceil32(_38977) > _38977:
                                                            mem[_38977 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38977) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34886 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34886)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34886)]
                                                        if ceil32(_34886) > _34886:
                                                            mem[_34886 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34886) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35145 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35145) > _35145:
                                                            mem[_35145 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35145) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38126 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 224] = 32
                                                    _38978 = mem[_38126]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 256] = mem[_38126]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 288 len ceil32(_38978)] = mem[_38126 + 32 len ceil32(_38978)]
                                                    if ceil32(_38978) > _38978:
                                                        mem[_38978 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27464 + stor14.length.field_1 + 256 len ceil32(_38978) + 32], 
                                                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                _27465 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34652 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34652)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34652)]
                                                            if ceil32(_34652) > _34652:
                                                                mem[_34652 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34652) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34888 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34888) > _34888:
                                                                mem[_34888 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34888) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38127 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38979 = mem[_38127]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 256] = mem[_38127]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38979)] = mem[_38127 + 32 len ceil32(_38979)]
                                                        if ceil32(_38979) > _38979:
                                                            mem[_38979 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38979) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34889 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34889)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34889)]
                                                        if ceil32(_34889) > _34889:
                                                            mem[_34889 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34889) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35147 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35147) > _35147:
                                                            mem[_35147 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35147) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38128 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 224] = 32
                                                    _38980 = mem[_38128]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 256] = mem[_38128]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 288 len ceil32(_38980)] = mem[_38128 + 32 len ceil32(_38980)]
                                                    if ceil32(_38980) > _38980:
                                                        mem[_38980 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 256 len ceil32(_38980) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34655 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34655)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34655)]
                                                        if ceil32(_34655) > _34655:
                                                            mem[_34655 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34655) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34891 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34891) > _34891:
                                                            mem[_34891 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34891) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38129 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _38981 = mem[_38129]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 256] = mem[_38129]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38981)] = mem[_38129 + 32 len ceil32(_38981)]
                                                    if ceil32(_38981) > _38981:
                                                        mem[_38981 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38981) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34892 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34892)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34892)]
                                                    if ceil32(_34892) > _34892:
                                                        mem[_34892 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34892) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35149 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35149) > _35149:
                                                        mem[_35149 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35149) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38130 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 224] = 32
                                                _38982 = mem[_38130]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 256] = mem[_38130]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 288 len ceil32(_38982)] = mem[_38130 + 32 len ceil32(_38982)]
                                                if ceil32(_38982) > _38982:
                                                    mem[_38982 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27465 + stor14.length.field_1 + 256 len ceil32(_38982) + 32], 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                            if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                _27466 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34658 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34658)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34658)]
                                                            if ceil32(_34658) > _34658:
                                                                mem[_34658 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34658) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34894 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34894) > _34894:
                                                                mem[_34894 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34894) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38131 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _38983 = mem[_38131]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 256] = mem[_38131]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38983)] = mem[_38131 + 32 len ceil32(_38983)]
                                                        if ceil32(_38983) > _38983:
                                                            mem[_38983 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38983) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34895 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34895)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34895)]
                                                        if ceil32(_34895) > _34895:
                                                            mem[_34895 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34895) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35151 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35151) > _35151:
                                                            mem[_35151 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35151) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38132 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 224] = 32
                                                    _38984 = mem[_38132]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 256] = mem[_38132]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 288 len ceil32(_38984)] = mem[_38132 + 32 len ceil32(_38984)]
                                                    if ceil32(_38984) > _38984:
                                                        mem[_38984 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 256 len ceil32(_38984) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34661 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34661)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34661)]
                                                        if ceil32(_34661) > _34661:
                                                            mem[_34661 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34661) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34897 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34897) > _34897:
                                                            mem[_34897 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34897) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38133 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _38985 = mem[_38133]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 256] = mem[_38133]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38985)] = mem[_38133 + 32 len ceil32(_38985)]
                                                    if ceil32(_38985) > _38985:
                                                        mem[_38985 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38985) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34898 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34898)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34898)]
                                                    if ceil32(_34898) > _34898:
                                                        mem[_34898 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34898) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35153 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35153) > _35153:
                                                        mem[_35153 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35153) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38134 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 224] = 32
                                                _38986 = mem[_38134]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 256] = mem[_38134]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 288 len ceil32(_38986)] = mem[_38134 + 32 len ceil32(_38986)]
                                                if ceil32(_38986) > _38986:
                                                    mem[_38986 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27466 + stor14.length.field_1 + 256 len ceil32(_38986) + 32], 
                                            mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                            _27467 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34664 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34664)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34664)]
                                                        if ceil32(_34664) > _34664:
                                                            mem[_34664 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34664) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34900 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34900) > _34900:
                                                            mem[_34900 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34900) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38135 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _38987 = mem[_38135]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 256] = mem[_38135]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38987)] = mem[_38135 + 32 len ceil32(_38987)]
                                                    if ceil32(_38987) > _38987:
                                                        mem[_38987 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38987) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34901 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34901)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34901)]
                                                    if ceil32(_34901) > _34901:
                                                        mem[_34901 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34901) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35155 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35155) > _35155:
                                                        mem[_35155 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35155) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38136 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 224] = 32
                                                _38988 = mem[_38136]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 256] = mem[_38136]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 288 len ceil32(_38988)] = mem[_38136 + 32 len ceil32(_38988)]
                                                if ceil32(_38988) > _38988:
                                                    mem[_38988 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 256 len ceil32(_38988) + 32], 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34667 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34667)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34667)]
                                                    if ceil32(_34667) > _34667:
                                                        mem[_34667 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34667) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _34903 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_34903) > _34903:
                                                        mem[_34903 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_34903) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38137 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _38989 = mem[_38137]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 256] = mem[_38137]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38989)] = mem[_38137 + 32 len ceil32(_38989)]
                                                if ceil32(_38989) > _38989:
                                                    mem[_38989 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38989) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _34904 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34904)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34904)]
                                                if ceil32(_34904) > _34904:
                                                    mem[_34904 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34904) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35157 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_35157) > _35157:
                                                    mem[_35157 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35157) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38138 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 224] = 32
                                            _38990 = mem[_38138]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 256] = mem[_38138]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 288 len ceil32(_38990)] = mem[_38138 + 32 len ceil32(_38990)]
                                            if ceil32(_38990) > _38990:
                                                mem[_38990 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27467 + stor14.length.field_1 + 256 len ceil32(_38990) + 32], 
                                        if 31 >= stor13.length.field_1:
                                            mem[160] = 256 * stor13.length.field_8
                                            if uint255(stor13.length) * 0.5 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20685 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                            if ceil32(_20685) > _20685:
                                                                mem[_20685 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20685) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27484 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _28008 = mem[_27484]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27484]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28008)] = mem[_27484 + 32 len ceil32(_28008)]
                                                        if ceil32(_28008) > _28008:
                                                            mem[_28008 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28008) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20831 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20831) > _20831:
                                                            mem[_20831 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20831) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27485 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    _28009 = mem[_27485]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27485]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_28009)] = mem[_27485 + 32 len ceil32(_28009)]
                                                    if ceil32(_28009) > _28009:
                                                        mem[_28009 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_28009) + 32], 
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20691 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_20691) > _20691:
                                                            mem[_20691 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20691) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27488 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28012 = mem[_27488]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[_27488]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28012)] = mem[_27488 + 32 len ceil32(_28012)]
                                                    if ceil32(_28012) > _28012:
                                                        mem[_28012 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28012) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20835 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    if ceil32(_20835) > _20835:
                                                        mem[_20835 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20835) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27489 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                _28013 = mem[_27489]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[_27489]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(_28013)] = mem[_27489 + 32 len ceil32(_28013)]
                                                if ceil32(_28013) > _28013:
                                                    mem[_28013 + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(_28013) + 32], 
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                                if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                    _27478 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34678 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34678)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34678)]
                                                                if ceil32(_34678) > _34678:
                                                                    mem[_34678 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34678) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34922 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_34922) > _34922:
                                                                    mem[_34922 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34922) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38139 = mem[64]
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _38999 = mem[_38139]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 256] = mem[_38139]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_38999)] = mem[_38139 + 32 len ceil32(_38999)]
                                                            if ceil32(_38999) > _38999:
                                                                mem[_38999 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_38999) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34923 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34923)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34923)]
                                                            if ceil32(_34923) > _34923:
                                                                mem[_34923 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34923) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35191 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_35191) > _35191:
                                                                mem[_35191 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35191) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38140 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 224] = 32
                                                        _39000 = mem[_38140]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 256] = mem[_38140]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 288 len ceil32(_39000)] = mem[_38140 + 32 len ceil32(_39000)]
                                                        if ceil32(_39000) > _39000:
                                                            mem[_39000 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 256 len ceil32(_39000) + 32], 
                                                    mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34681 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34681)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34681)]
                                                            if ceil32(_34681) > _34681:
                                                                mem[_34681 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34681) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34925 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34925) > _34925:
                                                                mem[_34925 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34925) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38141 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39001 = mem[_38141]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 256] = mem[_38141]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39001)] = mem[_38141 + 32 len ceil32(_39001)]
                                                        if ceil32(_39001) > _39001:
                                                            mem[_39001 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39001) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34926 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34926)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34926)]
                                                        if ceil32(_34926) > _34926:
                                                            mem[_34926 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34926) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35193 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35193) > _35193:
                                                            mem[_35193 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35193) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38142 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 224] = 32
                                                    _39002 = mem[_38142]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 256] = mem[_38142]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 288 len ceil32(_39002)] = mem[_38142 + 32 len ceil32(_39002)]
                                                    if ceil32(_39002) > _39002:
                                                        mem[_39002 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27478 + stor14.length.field_1 + 256 len ceil32(_39002) + 32], 
                                                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                                _27479 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34684 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34684)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34684)]
                                                            if ceil32(_34684) > _34684:
                                                                mem[_34684 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34684) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34928 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34928) > _34928:
                                                                mem[_34928 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34928) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38143 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39003 = mem[_38143]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 256] = mem[_38143]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39003)] = mem[_38143 + 32 len ceil32(_39003)]
                                                        if ceil32(_39003) > _39003:
                                                            mem[_39003 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39003) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34929 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34929)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34929)]
                                                        if ceil32(_34929) > _34929:
                                                            mem[_34929 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34929) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35195 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35195) > _35195:
                                                            mem[_35195 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35195) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38144 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 224] = 32
                                                    _39004 = mem[_38144]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 256] = mem[_38144]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 288 len ceil32(_39004)] = mem[_38144 + 32 len ceil32(_39004)]
                                                    if ceil32(_39004) > _39004:
                                                        mem[_39004 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 256 len ceil32(_39004) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34687 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34687)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34687)]
                                                        if ceil32(_34687) > _34687:
                                                            mem[_34687 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34687) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34931 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34931) > _34931:
                                                            mem[_34931 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34931) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38145 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39005 = mem[_38145]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 256] = mem[_38145]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39005)] = mem[_38145 + 32 len ceil32(_39005)]
                                                    if ceil32(_39005) > _39005:
                                                        mem[_39005 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39005) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34932 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34932)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34932)]
                                                    if ceil32(_34932) > _34932:
                                                        mem[_34932 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34932) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35197 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35197) > _35197:
                                                        mem[_35197 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35197) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38146 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 224] = 32
                                                _39006 = mem[_38146]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 256] = mem[_38146]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 288 len ceil32(_39006)] = mem[_38146 + 32 len ceil32(_39006)]
                                                if ceil32(_39006) > _39006:
                                                    mem[_39006 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27479 + stor14.length.field_1 + 256 len ceil32(_39006) + 32], 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                            if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                _27480 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34690 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34690)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34690)]
                                                            if ceil32(_34690) > _34690:
                                                                mem[_34690 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34690) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34934 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_34934) > _34934:
                                                                mem[_34934 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34934) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38147 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39007 = mem[_38147]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 256] = mem[_38147]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39007)] = mem[_38147 + 32 len ceil32(_39007)]
                                                        if ceil32(_39007) > _39007:
                                                            mem[_39007 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39007) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34935 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34935)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34935)]
                                                        if ceil32(_34935) > _34935:
                                                            mem[_34935 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34935) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35199 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_35199) > _35199:
                                                            mem[_35199 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35199) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38148 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 224] = 32
                                                    _39008 = mem[_38148]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 256] = mem[_38148]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 288 len ceil32(_39008)] = mem[_38148 + 32 len ceil32(_39008)]
                                                    if ceil32(_39008) > _39008:
                                                        mem[_39008 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 256 len ceil32(_39008) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34693 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34693)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34693)]
                                                        if ceil32(_34693) > _34693:
                                                            mem[_34693 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34693) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34937 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34937) > _34937:
                                                            mem[_34937 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34937) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38149 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39009 = mem[_38149]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 256] = mem[_38149]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39009)] = mem[_38149 + 32 len ceil32(_39009)]
                                                    if ceil32(_39009) > _39009:
                                                        mem[_39009 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39009) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34938 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34938)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34938)]
                                                    if ceil32(_34938) > _34938:
                                                        mem[_34938 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34938) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35201 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35201) > _35201:
                                                        mem[_35201 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35201) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38150 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 224] = 32
                                                _39010 = mem[_38150]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 256] = mem[_38150]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 288 len ceil32(_39010)] = mem[_38150 + 32 len ceil32(_39010)]
                                                if ceil32(_39010) > _39010:
                                                    mem[_39010 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27480 + stor14.length.field_1 + 256 len ceil32(_39010) + 32], 
                                            mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                            _27481 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34696 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34696)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34696)]
                                                        if ceil32(_34696) > _34696:
                                                            mem[_34696 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34696) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34940 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_34940) > _34940:
                                                            mem[_34940 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34940) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38151 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39011 = mem[_38151]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 256] = mem[_38151]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39011)] = mem[_38151 + 32 len ceil32(_39011)]
                                                    if ceil32(_39011) > _39011:
                                                        mem[_39011 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39011) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34941 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34941)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34941)]
                                                    if ceil32(_34941) > _34941:
                                                        mem[_34941 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34941) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35203 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_35203) > _35203:
                                                        mem[_35203 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35203) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38152 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 224] = 32
                                                _39012 = mem[_38152]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 256] = mem[_38152]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 288 len ceil32(_39012)] = mem[_38152 + 32 len ceil32(_39012)]
                                                if ceil32(_39012) > _39012:
                                                    mem[_39012 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 256 len ceil32(_39012) + 32], 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34699 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34699)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34699)]
                                                    if ceil32(_34699) > _34699:
                                                        mem[_34699 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34699) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _34943 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_34943) > _34943:
                                                        mem[_34943 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_34943) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38153 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39013 = mem[_38153]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 256] = mem[_38153]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39013)] = mem[_38153 + 32 len ceil32(_39013)]
                                                if ceil32(_39013) > _39013:
                                                    mem[_39013 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39013) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _34944 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_34944)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_34944)]
                                                if ceil32(_34944) > _34944:
                                                    mem[_34944 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_34944) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35205 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_35205) > _35205:
                                                    mem[_35205 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35205) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38154 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 224] = 32
                                            _39014 = mem[_38154]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 256] = mem[_38154]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 288 len ceil32(_39014)] = mem[_38154 + 32 len ceil32(_39014)]
                                            if ceil32(_39014) > _39014:
                                                mem[_39014 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _27481 + stor14.length.field_1 + 256 len ceil32(_39014) + 32], 
                                        mem[0] = 13
                                        mem[160] = uint256(stor13.field_0)
                                        idx = 160
                                        s = 0
                                        while stor13.length.field_1 + 128 > idx:
                                            mem[idx + 32] = stor13[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if uint255(stor13.length) * 0.5 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 160] = 1
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = 0
                                            if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                if not bool(stor14.length):
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) == 1:
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    mem[64] = 0
                                                    _29058 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    var66001 = ceil32(_29058)
                                                    if ceil32(_29058) > _29058:
                                                        mem[_29058 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_29058) + -mem[64] + 64
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                else:
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _28839 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_28839) > _28839:
                                                            mem[_28839 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28839) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    var68001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])
                                            else:
                                                if not bool(stor14.length):
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor14.length) == 1:
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + stor14.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                                    mem[64] = 0
                                                    _29062 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    var66001 = ceil32(_29062)
                                                    if ceil32(_29062) > _29062:
                                                        mem[_29062 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_29062) + -mem[64] + 64
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                else:
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _28845 = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                        if ceil32(_28845) > _28845:
                                                            mem[_28845 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28845) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(uint255(stor13.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])] = mem[ceil32(uint255(stor13.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]
                                                    var68001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 224]:
                                                return Array(len=mem[ceil32(uint255(stor13.length) * 0.5) + 224], data=mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224])]), 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 224] + ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 321] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + (uint255(stor13.length) * 0.5) + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 224]) + 32], 
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(uint255(stor13.length) * 0.5) + 160] = s
                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                            if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                                _33542 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39583 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39583)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39583)]
                                                            if ceil32(_39583) > _39583:
                                                                mem[_39583 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39583) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39692 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_39692) > _39692:
                                                                mem[_39692 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39692) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _41013 = mem[64]
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _41653 = mem[_41013]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 256] = mem[_41013]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41653)] = mem[_41013 + 32 len ceil32(_41653)]
                                                        if ceil32(_41653) > _41653:
                                                            mem[_41653 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41653) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                        _39693 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39693)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39693)]
                                                        if ceil32(_39693) > _39693:
                                                            mem[_39693 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39693) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39876 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39876) > _39876:
                                                            mem[_39876 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39876) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41014 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 224] = 32
                                                    _41654 = mem[_41014]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 256] = mem[_41014]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 288 len ceil32(_41654)] = mem[_41014 + 32 len ceil32(_41654)]
                                                    if ceil32(_41654) > _41654:
                                                        mem[_41654 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 256 len ceil32(_41654) + 32], 
                                                mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39586 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39586)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39586)]
                                                        if ceil32(_39586) > _39586:
                                                            mem[_39586 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39586) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39695 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39695) > _39695:
                                                            mem[_39695 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39695) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41015 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41655 = mem[_41015]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 256] = mem[_41015]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41655)] = mem[_41015 + 32 len ceil32(_41655)]
                                                    if ceil32(_41655) > _41655:
                                                        mem[_41655 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41655) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39696 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39696)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39696)]
                                                    if ceil32(_39696) > _39696:
                                                        mem[_39696 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39696) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39878 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39878) > _39878:
                                                        mem[_39878 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39878) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41016 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 224] = 32
                                                _41656 = mem[_41016]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 256] = mem[_41016]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 288 len ceil32(_41656)] = mem[_41016 + 32 len ceil32(_41656)]
                                                if ceil32(_41656) > _41656:
                                                    mem[_41656 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33542 + stor14.length.field_1 + 256 len ceil32(_41656) + 32], 
                                            mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                            _33543 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39589 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39589)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39589)]
                                                        if ceil32(_39589) > _39589:
                                                            mem[_39589 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39589) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39698 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39698) > _39698:
                                                            mem[_39698 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39698) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41017 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41657 = mem[_41017]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 256] = mem[_41017]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41657)] = mem[_41017 + 32 len ceil32(_41657)]
                                                    if ceil32(_41657) > _41657:
                                                        mem[_41657 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41657) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39699 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39699)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39699)]
                                                    if ceil32(_39699) > _39699:
                                                        mem[_39699 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39699) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39880 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39880) > _39880:
                                                        mem[_39880 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39880) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41018 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 224] = 32
                                                _41658 = mem[_41018]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 256] = mem[_41018]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 288 len ceil32(_41658)] = mem[_41018 + 32 len ceil32(_41658)]
                                                if ceil32(_41658) > _41658:
                                                    mem[_41658 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 256 len ceil32(_41658) + 32], 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39592 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39592)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39592)]
                                                    if ceil32(_39592) > _39592:
                                                        mem[_39592 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39592) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39701 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39701) > _39701:
                                                        mem[_39701 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39701) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41019 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41659 = mem[_41019]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 256] = mem[_41019]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41659)] = mem[_41019 + 32 len ceil32(_41659)]
                                                if ceil32(_41659) > _41659:
                                                    mem[_41659 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41659) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _39702 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39702)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39702)]
                                                if ceil32(_39702) > _39702:
                                                    mem[_39702 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39702) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39882 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_39882) > _39882:
                                                    mem[_39882 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39882) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41020 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 224] = 32
                                            _41660 = mem[_41020]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 256] = mem[_41020]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 288 len ceil32(_41660)] = mem[_41020 + 32 len ceil32(_41660)]
                                            if ceil32(_41660) > _41660:
                                                mem[_41660 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33543 + stor14.length.field_1 + 256 len ceil32(_41660) + 32], 
                                        mem[ceil32(uint255(stor13.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(uint255(stor13.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                        if ceil32(uint255(stor13.length) * 0.5) <= uint255(stor13.length) * 0.5:
                                            _33544 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                            var58001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])
                                            if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39595 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39595)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39595)]
                                                        if ceil32(_39595) > _39595:
                                                            mem[_39595 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39595) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39704 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_39704) > _39704:
                                                            mem[_39704 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39704) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41021 = mem[64]
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41661 = mem[_41021]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 256] = mem[_41021]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41661)] = mem[_41021 + 32 len ceil32(_41661)]
                                                    if ceil32(_41661) > _41661:
                                                        mem[_41661 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41661) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39705 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39705)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39705)]
                                                    if ceil32(_39705) > _39705:
                                                        mem[_39705 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39705) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39884 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39884) > _39884:
                                                        mem[_39884 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39884) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41022 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 224] = 32
                                                _41662 = mem[_41022]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 256] = mem[_41022]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 288 len ceil32(_41662)] = mem[_41022 + 32 len ceil32(_41662)]
                                                if ceil32(_41662) > _41662:
                                                    mem[_41662 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 256 len ceil32(_41662) + 32], 
                                            mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39598 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39598)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39598)]
                                                    if ceil32(_39598) > _39598:
                                                        mem[_39598 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39598) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39707 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39707) > _39707:
                                                        mem[_39707 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39707) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41023 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41663 = mem[_41023]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 256] = mem[_41023]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41663)] = mem[_41023 + 32 len ceil32(_41663)]
                                                if ceil32(_41663) > _41663:
                                                    mem[_41663 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41663) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _39708 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39708)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39708)]
                                                if ceil32(_39708) > _39708:
                                                    mem[_39708 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39708) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39886 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_39886) > _39886:
                                                    mem[_39886 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39886) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41024 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 224] = 32
                                            _41664 = mem[_41024]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 256] = mem[_41024]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 288 len ceil32(_41664)] = mem[_41024 + 32 len ceil32(_41664)]
                                            if ceil32(_41664) > _41664:
                                                mem[_41664 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33544 + stor14.length.field_1 + 256 len ceil32(_41664) + 32], 
                                        mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224] = 0
                                        _33545 = mem[ceil32(uint255(stor13.length) * 0.5) + 160]
                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])] = mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])]
                                        var58001 = ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160])
                                        if ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor13.length) * 0.5) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39601 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39601)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39601)]
                                                    if ceil32(_39601) > _39601:
                                                        mem[_39601 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39601) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39710 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_39710) > _39710:
                                                        mem[_39710 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39710) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41025 = mem[64]
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41665 = mem[_41025]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 256] = mem[_41025]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41665)] = mem[_41025 + 32 len ceil32(_41665)]
                                                if ceil32(_41665) > _41665:
                                                    mem[_41665 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41665) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                                _39711 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39711)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39711)]
                                                if ceil32(_39711) > _39711:
                                                    mem[_39711 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39711) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39888 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_39888) > _39888:
                                                    mem[_39888 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39888) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41026 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 224] = 32
                                            _41666 = mem[_41026]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 256] = mem[_41026]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 288 len ceil32(_41666)] = mem[_41026 + 32 len ceil32(_41666)]
                                            if ceil32(_41666) > _41666:
                                                mem[_41666 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 256 len ceil32(_41666) + 32], 
                                        mem[mem[ceil32(uint255(stor13.length) * 0.5) + 160] + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39604 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39604)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39604)]
                                                if ceil32(_39604) > _39604:
                                                    mem[_39604 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39604) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39713 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_39713) > _39713:
                                                    mem[_39713 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39713) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41027 = mem[64]
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _41667 = mem[_41027]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 256] = mem[_41027]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41667)] = mem[_41027 + 32 len ceil32(_41667)]
                                            if ceil32(_41667) > _41667:
                                                mem[_41667 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41667) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 224] = 32
                                            _39714 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288 len ceil32(_39714)] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(_39714)]
                                            if ceil32(_39714) > _39714:
                                                mem[_39714 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + stor14.length.field_1 + 256 len ceil32(_39714) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _39890 = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_39890) > _39890:
                                                mem[_39890 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_39890) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + mem[ceil32(uint255(stor13.length) * 0.5) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41028 = mem[64]
                                        mem[64] = ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 224
                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 224] = 32
                                        _41668 = mem[_41028]
                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 256] = mem[_41028]
                                        mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 288 len ceil32(_41668)] = mem[_41028 + 32 len ceil32(_41668)]
                                        if ceil32(_41668) > _41668:
                                            mem[_41668 + ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor13.length) * 0.5) + ceil32(s) + (uint255(stor13.length) * 0.5) + _33545 + stor14.length.field_1 + 256 len ceil32(_41668) + 32], 
                                    if bool(stor13.length) == stor13.length.field_1 < 32:
                                        revert with 0, 34
                                    mem[128] = stor13.length.field_1
                                    if bool(stor13.length):
                                        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not Mask(256, -1, stor13.length):
                                            if stor13.length.field_1 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[64] = ceil32(stor13.length.field_1) + 224
                                                mem[ceil32(stor13.length.field_1) + 160] = 1
                                                mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                                if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                            if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                                return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                            mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20697 = mem[ceil32(stor13.length.field_1) + 224]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                            if ceil32(_20697) > _20697:
                                                                mem[_20697 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20697) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27496 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _28016 = mem[_27496]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27496]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28016)] = mem[_27496 + 32 len ceil32(_28016)]
                                                        if ceil32(_28016) > _28016:
                                                            mem[_28016 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28016) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20839 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20839) > _20839:
                                                            mem[_20839 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20839) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27497 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    _28017 = mem[_27497]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27497]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28017)] = mem[_27497 + 32 len ceil32(_28017)]
                                                    if ceil32(_28017) > _28017:
                                                        mem[_28017 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28017) + 32]
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20703 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20703) > _20703:
                                                            mem[_20703 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20703) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27500 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28020 = mem[_27500]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27500]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28020)] = mem[_27500 + 32 len ceil32(_28020)]
                                                    if ceil32(_28020) > _28020:
                                                        mem[_28020 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28020) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20843 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20843) > _20843:
                                                        mem[_20843 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20843) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27501 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                _28021 = mem[_27501]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27501]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28021)] = mem[_27501 + 32 len ceil32(_28021)]
                                                if ceil32(_28021) > _28021:
                                                    mem[_28021 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28021) + 32]
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(stor13.length.field_1) + 160] = s
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                                if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                    _27490 = mem[ceil32(stor13.length.field_1) + 160]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34702 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34702)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34702)]
                                                                if ceil32(_34702) > _34702:
                                                                    mem[_34702 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34702) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34946 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                                if ceil32(_34946) > _34946:
                                                                    mem[_34946 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34946) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38155 = mem[64]
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39015 = mem[_38155]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 256] = mem[_38155]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39015)] = mem[_38155 + 32 len ceil32(_39015)]
                                                            if ceil32(_39015) > _39015:
                                                                mem[_39015 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39015) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34947 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34947)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34947)]
                                                            if ceil32(_34947) > _34947:
                                                                mem[_34947 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34947) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35207 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_35207) > _35207:
                                                                mem[_35207 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35207) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38156 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 224] = 32
                                                        _39016 = mem[_38156]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 256] = mem[_38156]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 288 len ceil32(_39016)] = mem[_38156 + 32 len ceil32(_39016)]
                                                        if ceil32(_39016) > _39016:
                                                            mem[_39016 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 256 len ceil32(_39016) + 32], 
                                                    mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34705 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34705)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34705)]
                                                            if ceil32(_34705) > _34705:
                                                                mem[_34705 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34705) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34949 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34949) > _34949:
                                                                mem[_34949 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34949) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38157 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39017 = mem[_38157]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 256] = mem[_38157]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39017)] = mem[_38157 + 32 len ceil32(_39017)]
                                                        if ceil32(_39017) > _39017:
                                                            mem[_39017 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39017) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34950 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34950)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34950)]
                                                        if ceil32(_34950) > _34950:
                                                            mem[_34950 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34950) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35209 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35209) > _35209:
                                                            mem[_35209 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35209) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38158 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 224] = 32
                                                    _39018 = mem[_38158]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 256] = mem[_38158]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 288 len ceil32(_39018)] = mem[_38158 + 32 len ceil32(_39018)]
                                                    if ceil32(_39018) > _39018:
                                                        mem[_39018 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27490 + stor14.length.field_1 + 256 len ceil32(_39018) + 32], 
                                                mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                                _27491 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34708 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34708)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34708)]
                                                            if ceil32(_34708) > _34708:
                                                                mem[_34708 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34708) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34952 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34952) > _34952:
                                                                mem[_34952 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34952) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38159 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39019 = mem[_38159]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 256] = mem[_38159]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39019)] = mem[_38159 + 32 len ceil32(_39019)]
                                                        if ceil32(_39019) > _39019:
                                                            mem[_39019 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39019) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34953 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34953)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34953)]
                                                        if ceil32(_34953) > _34953:
                                                            mem[_34953 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34953) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35211 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35211) > _35211:
                                                            mem[_35211 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35211) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38160 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 224] = 32
                                                    _39020 = mem[_38160]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 256] = mem[_38160]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 288 len ceil32(_39020)] = mem[_38160 + 32 len ceil32(_39020)]
                                                    if ceil32(_39020) > _39020:
                                                        mem[_39020 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 256 len ceil32(_39020) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34711 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34711)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34711)]
                                                        if ceil32(_34711) > _34711:
                                                            mem[_34711 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34711) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34955 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_34955) > _34955:
                                                            mem[_34955 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34955) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38161 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39021 = mem[_38161]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 256] = mem[_38161]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39021)] = mem[_38161 + 32 len ceil32(_39021)]
                                                    if ceil32(_39021) > _39021:
                                                        mem[_39021 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39021) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34956 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34956)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34956)]
                                                    if ceil32(_34956) > _34956:
                                                        mem[_34956 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34956) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35213 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35213) > _35213:
                                                        mem[_35213 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35213) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38162 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 224] = 32
                                                _39022 = mem[_38162]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 256] = mem[_38162]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 288 len ceil32(_39022)] = mem[_38162 + 32 len ceil32(_39022)]
                                                if ceil32(_39022) > _39022:
                                                    mem[_39022 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27491 + stor14.length.field_1 + 256 len ceil32(_39022) + 32], 
                                            mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                _27492 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34714 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34714)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34714)]
                                                            if ceil32(_34714) > _34714:
                                                                mem[_34714 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34714) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34958 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34958) > _34958:
                                                                mem[_34958 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34958) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38163 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39023 = mem[_38163]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 256] = mem[_38163]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39023)] = mem[_38163 + 32 len ceil32(_39023)]
                                                        if ceil32(_39023) > _39023:
                                                            mem[_39023 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39023) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34959 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34959)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34959)]
                                                        if ceil32(_34959) > _34959:
                                                            mem[_34959 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34959) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35215 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35215) > _35215:
                                                            mem[_35215 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35215) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38164 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 224] = 32
                                                    _39024 = mem[_38164]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 256] = mem[_38164]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 288 len ceil32(_39024)] = mem[_38164 + 32 len ceil32(_39024)]
                                                    if ceil32(_39024) > _39024:
                                                        mem[_39024 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 256 len ceil32(_39024) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34717 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34717)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34717)]
                                                        if ceil32(_34717) > _34717:
                                                            mem[_34717 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34717) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34961 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_34961) > _34961:
                                                            mem[_34961 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34961) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38165 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39025 = mem[_38165]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 256] = mem[_38165]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39025)] = mem[_38165 + 32 len ceil32(_39025)]
                                                    if ceil32(_39025) > _39025:
                                                        mem[_39025 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39025) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34962 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34962)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34962)]
                                                    if ceil32(_34962) > _34962:
                                                        mem[_34962 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34962) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35217 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35217) > _35217:
                                                        mem[_35217 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35217) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38166 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 224] = 32
                                                _39026 = mem[_38166]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 256] = mem[_38166]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 288 len ceil32(_39026)] = mem[_38166 + 32 len ceil32(_39026)]
                                                if ceil32(_39026) > _39026:
                                                    mem[_39026 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27492 + stor14.length.field_1 + 256 len ceil32(_39026) + 32], 
                                            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                            _27493 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34720 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34720)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34720)]
                                                        if ceil32(_34720) > _34720:
                                                            mem[_34720 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34720) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34964 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_34964) > _34964:
                                                            mem[_34964 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34964) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38167 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39027 = mem[_38167]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 256] = mem[_38167]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39027)] = mem[_38167 + 32 len ceil32(_39027)]
                                                    if ceil32(_39027) > _39027:
                                                        mem[_39027 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39027) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34965 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34965)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34965)]
                                                    if ceil32(_34965) > _34965:
                                                        mem[_34965 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34965) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35219 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35219) > _35219:
                                                        mem[_35219 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35219) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38168 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 224] = 32
                                                _39028 = mem[_38168]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 256] = mem[_38168]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 288 len ceil32(_39028)] = mem[_38168 + 32 len ceil32(_39028)]
                                                if ceil32(_39028) > _39028:
                                                    mem[_39028 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 256 len ceil32(_39028) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34723 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34723)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34723)]
                                                    if ceil32(_34723) > _34723:
                                                        mem[_34723 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34723) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _34967 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_34967) > _34967:
                                                        mem[_34967 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_34967) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38169 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39029 = mem[_38169]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 256] = mem[_38169]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39029)] = mem[_38169 + 32 len ceil32(_39029)]
                                                if ceil32(_39029) > _39029:
                                                    mem[_39029 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39029) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _34968 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34968)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34968)]
                                                if ceil32(_34968) > _34968:
                                                    mem[_34968 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34968) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35221 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35221) > _35221:
                                                    mem[_35221 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35221) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38170 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 224] = 32
                                            _39030 = mem[_38170]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 256] = mem[_38170]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 288 len ceil32(_39030)] = mem[_38170 + 32 len ceil32(_39030)]
                                            if ceil32(_39030) > _39030:
                                                mem[_39030 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27493 + stor14.length.field_1 + 256 len ceil32(_39030) + 32], 
                                        if 31 >= uint255(stor13.length) * 0.5:
                                            mem[160] = 256 * stor13.length.field_8
                                            if stor13.length.field_1 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[64] = ceil32(stor13.length.field_1) + 224
                                                mem[ceil32(stor13.length.field_1) + 160] = 1
                                                mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                                if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                            if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                                return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                            mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _20719 = mem[ceil32(stor13.length.field_1) + 224]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                            if ceil32(_20719) > _20719:
                                                                mem[_20719 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_20719) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        _27510 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        _28028 = mem[_27510]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27510]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28028)] = mem[_27510 + 32 len ceil32(_28028)]
                                                        if ceil32(_28028) > _28028:
                                                            mem[_28028 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28028) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20856 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20856) > _20856:
                                                            mem[_20856 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20856) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27511 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    _28029 = mem[_27511]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27511]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28029)] = mem[_27511 + 32 len ceil32(_28029)]
                                                    if ceil32(_28029) > _28029:
                                                        mem[_28029 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28029) + 32]
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20725 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20725) > _20725:
                                                            mem[_20725 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20725) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27514 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28032 = mem[_27514]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27514]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28032)] = mem[_27514 + 32 len ceil32(_28032)]
                                                    if ceil32(_28032) > _28032:
                                                        mem[_28032 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28032) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20860 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20860) > _20860:
                                                        mem[_20860 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20860) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27515 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                _28033 = mem[_27515]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27515]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28033)] = mem[_27515 + 32 len ceil32(_28033)]
                                                if ceil32(_28033) > _28033:
                                                    mem[_28033 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28033) + 32]
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(stor13.length.field_1) + 160] = s
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                                if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                    _27504 = mem[ceil32(stor13.length.field_1) + 160]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                        if bool(stor14.length):
                                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor14.length):
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                                _34734 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34734)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34734)]
                                                                if ceil32(_34734) > _34734:
                                                                    mem[_34734 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34734) + 32], 
                                                            if bool(stor14.length) != 1:
                                                                mem[64] = 0
                                                                _34986 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                                if ceil32(_34986) > _34986:
                                                                    mem[_34986 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_34986) + -mem[64] + 64
                                                            mem[0] = 14
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor14.length) * 0.5:
                                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            _38171 = mem[64]
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39039 = mem[_38171]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 256] = mem[_38171]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39039)] = mem[_38171 + 32 len ceil32(_39039)]
                                                            if ceil32(_39039) > _39039:
                                                                mem[_39039 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39039) + 32], 
                                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                            _34987 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34987)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34987)]
                                                            if ceil32(_34987) > _34987:
                                                                mem[_34987 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34987) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35255 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_35255) > _35255:
                                                                mem[_35255 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35255) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38172 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 224] = 32
                                                        _39040 = mem[_38172]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 256] = mem[_38172]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 288 len ceil32(_39040)] = mem[_38172 + 32 len ceil32(_39040)]
                                                        if ceil32(_39040) > _39040:
                                                            mem[_39040 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 256 len ceil32(_39040) + 32], 
                                                    mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34737 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34737)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34737)]
                                                            if ceil32(_34737) > _34737:
                                                                mem[_34737 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34737) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34989 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34989) > _34989:
                                                                mem[_34989 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34989) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38173 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39041 = mem[_38173]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 256] = mem[_38173]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39041)] = mem[_38173 + 32 len ceil32(_39041)]
                                                        if ceil32(_39041) > _39041:
                                                            mem[_39041 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39041) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34990 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34990)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34990)]
                                                        if ceil32(_34990) > _34990:
                                                            mem[_34990 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34990) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35257 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35257) > _35257:
                                                            mem[_35257 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35257) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38174 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 224] = 32
                                                    _39042 = mem[_38174]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 256] = mem[_38174]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 288 len ceil32(_39042)] = mem[_38174 + 32 len ceil32(_39042)]
                                                    if ceil32(_39042) > _39042:
                                                        mem[_39042 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27504 + stor14.length.field_1 + 256 len ceil32(_39042) + 32], 
                                                mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                                _27505 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34740 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34740)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34740)]
                                                            if ceil32(_34740) > _34740:
                                                                mem[_34740 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34740) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34992 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34992) > _34992:
                                                                mem[_34992 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34992) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38175 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39043 = mem[_38175]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 256] = mem[_38175]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39043)] = mem[_38175 + 32 len ceil32(_39043)]
                                                        if ceil32(_39043) > _39043:
                                                            mem[_39043 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39043) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34993 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34993)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34993)]
                                                        if ceil32(_34993) > _34993:
                                                            mem[_34993 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34993) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35259 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35259) > _35259:
                                                            mem[_35259 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35259) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38176 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 224] = 32
                                                    _39044 = mem[_38176]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 256] = mem[_38176]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 288 len ceil32(_39044)] = mem[_38176 + 32 len ceil32(_39044)]
                                                    if ceil32(_39044) > _39044:
                                                        mem[_39044 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 256 len ceil32(_39044) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34743 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34743)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34743)]
                                                        if ceil32(_34743) > _34743:
                                                            mem[_34743 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34743) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _34995 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_34995) > _34995:
                                                            mem[_34995 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_34995) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38177 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39045 = mem[_38177]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 256] = mem[_38177]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39045)] = mem[_38177 + 32 len ceil32(_39045)]
                                                    if ceil32(_39045) > _39045:
                                                        mem[_39045 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39045) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _34996 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34996)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34996)]
                                                    if ceil32(_34996) > _34996:
                                                        mem[_34996 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34996) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35261 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35261) > _35261:
                                                        mem[_35261 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35261) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38178 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 224] = 32
                                                _39046 = mem[_38178]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 256] = mem[_38178]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 288 len ceil32(_39046)] = mem[_38178 + 32 len ceil32(_39046)]
                                                if ceil32(_39046) > _39046:
                                                    mem[_39046 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27505 + stor14.length.field_1 + 256 len ceil32(_39046) + 32], 
                                            mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                _27506 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34746 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34746)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34746)]
                                                            if ceil32(_34746) > _34746:
                                                                mem[_34746 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34746) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _34998 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_34998) > _34998:
                                                                mem[_34998 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_34998) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38179 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39047 = mem[_38179]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 256] = mem[_38179]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39047)] = mem[_38179 + 32 len ceil32(_39047)]
                                                        if ceil32(_39047) > _39047:
                                                            mem[_39047 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39047) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _34999 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_34999)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34999)]
                                                        if ceil32(_34999) > _34999:
                                                            mem[_34999 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_34999) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35263 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35263) > _35263:
                                                            mem[_35263 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35263) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38180 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 224] = 32
                                                    _39048 = mem[_38180]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 256] = mem[_38180]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 288 len ceil32(_39048)] = mem[_38180 + 32 len ceil32(_39048)]
                                                    if ceil32(_39048) > _39048:
                                                        mem[_39048 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 256 len ceil32(_39048) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34749 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34749)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34749)]
                                                        if ceil32(_34749) > _34749:
                                                            mem[_34749 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34749) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35001 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35001) > _35001:
                                                            mem[_35001 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35001) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38181 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39049 = mem[_38181]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 256] = mem[_38181]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39049)] = mem[_38181 + 32 len ceil32(_39049)]
                                                    if ceil32(_39049) > _39049:
                                                        mem[_39049 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39049) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35002 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35002)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35002)]
                                                    if ceil32(_35002) > _35002:
                                                        mem[_35002 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35002) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35265 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35265) > _35265:
                                                        mem[_35265 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35265) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38182 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 224] = 32
                                                _39050 = mem[_38182]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 256] = mem[_38182]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 288 len ceil32(_39050)] = mem[_38182 + 32 len ceil32(_39050)]
                                                if ceil32(_39050) > _39050:
                                                    mem[_39050 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27506 + stor14.length.field_1 + 256 len ceil32(_39050) + 32], 
                                            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                            _27507 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34752 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34752)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34752)]
                                                        if ceil32(_34752) > _34752:
                                                            mem[_34752 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34752) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35004 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35004) > _35004:
                                                            mem[_35004 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35004) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38183 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39051 = mem[_38183]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 256] = mem[_38183]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39051)] = mem[_38183 + 32 len ceil32(_39051)]
                                                    if ceil32(_39051) > _39051:
                                                        mem[_39051 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39051) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35005 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35005)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35005)]
                                                    if ceil32(_35005) > _35005:
                                                        mem[_35005 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35005) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35267 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35267) > _35267:
                                                        mem[_35267 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35267) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38184 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 224] = 32
                                                _39052 = mem[_38184]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 256] = mem[_38184]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 288 len ceil32(_39052)] = mem[_38184 + 32 len ceil32(_39052)]
                                                if ceil32(_39052) > _39052:
                                                    mem[_39052 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 256 len ceil32(_39052) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34755 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34755)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34755)]
                                                    if ceil32(_34755) > _34755:
                                                        mem[_34755 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34755) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35007 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35007) > _35007:
                                                        mem[_35007 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35007) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38185 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39053 = mem[_38185]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 256] = mem[_38185]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39053)] = mem[_38185 + 32 len ceil32(_39053)]
                                                if ceil32(_39053) > _39053:
                                                    mem[_39053 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39053) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35008 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35008)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35008)]
                                                if ceil32(_35008) > _35008:
                                                    mem[_35008 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35008) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35269 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35269) > _35269:
                                                    mem[_35269 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35269) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38186 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 224] = 32
                                            _39054 = mem[_38186]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 256] = mem[_38186]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 288 len ceil32(_39054)] = mem[_38186 + 32 len ceil32(_39054)]
                                            if ceil32(_39054) > _39054:
                                                mem[_39054 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27507 + stor14.length.field_1 + 256 len ceil32(_39054) + 32], 
                                        mem[0] = 13
                                        mem[160] = uint256(stor13.field_0)
                                        idx = 160
                                        s = 0
                                        while (uint255(stor13.length) * 0.5) + 128 > idx:
                                            mem[idx + 32] = stor13[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if stor13.length.field_1 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[ceil32(stor13.length.field_1) + 160] = 1
                                            mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                if not bool(stor14.length):
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) == 1:
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    mem[64] = 0
                                                    _29130 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    var66001 = ceil32(_29130)
                                                    if ceil32(_29130) > _29130:
                                                        mem[_29130 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_29130) + -mem[64] + 64
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                else:
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _28883 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_28883) > _28883:
                                                            mem[_28883 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28883) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    var68001 = ceil32(mem[ceil32(stor13.length.field_1) + 224])
                                            else:
                                                if not bool(stor14.length):
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) == 1:
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor14.length.field_1:
                                                            mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    mem[64] = 0
                                                    _29134 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    var66001 = ceil32(_29134)
                                                    if ceil32(_29134) > _29134:
                                                        mem[_29134 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_29134) + -mem[64] + 64
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                else:
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _28889 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_28889) > _28889:
                                                            mem[_28889 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_28889) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    var68001 = ceil32(mem[ceil32(stor13.length.field_1) + 224])
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                            mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(stor13.length.field_1) + 160] = s
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                _33554 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _39607 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39607)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39607)]
                                                            if ceil32(_39607) > _39607:
                                                                mem[_39607 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39607) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _39716 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_39716) > _39716:
                                                                mem[_39716 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_39716) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _41029 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _41669 = mem[_41029]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 256] = mem[_41029]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41669)] = mem[_41029 + 32 len ceil32(_41669)]
                                                        if ceil32(_41669) > _41669:
                                                            mem[_41669 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41669) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _39717 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39717)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39717)]
                                                        if ceil32(_39717) > _39717:
                                                            mem[_39717 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39717) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39956 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_39956) > _39956:
                                                            mem[_39956 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39956) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41030 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 224] = 32
                                                    _41670 = mem[_41030]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 256] = mem[_41030]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 288 len ceil32(_41670)] = mem[_41030 + 32 len ceil32(_41670)]
                                                    if ceil32(_41670) > _41670:
                                                        mem[_41670 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 256 len ceil32(_41670) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39610 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39610)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39610)]
                                                        if ceil32(_39610) > _39610:
                                                            mem[_39610 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39610) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39719 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_39719) > _39719:
                                                            mem[_39719 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39719) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41031 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41671 = mem[_41031]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 256] = mem[_41031]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41671)] = mem[_41031 + 32 len ceil32(_41671)]
                                                    if ceil32(_41671) > _41671:
                                                        mem[_41671 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41671) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39720 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39720)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39720)]
                                                    if ceil32(_39720) > _39720:
                                                        mem[_39720 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39720) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39958 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39958) > _39958:
                                                        mem[_39958 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39958) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41032 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 224] = 32
                                                _41672 = mem[_41032]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 256] = mem[_41032]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 288 len ceil32(_41672)] = mem[_41032 + 32 len ceil32(_41672)]
                                                if ceil32(_41672) > _41672:
                                                    mem[_41672 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33554 + stor14.length.field_1 + 256 len ceil32(_41672) + 32], 
                                            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                            _33555 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39613 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39613)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39613)]
                                                        if ceil32(_39613) > _39613:
                                                            mem[_39613 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39613) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39722 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_39722) > _39722:
                                                            mem[_39722 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39722) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41033 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41673 = mem[_41033]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 256] = mem[_41033]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41673)] = mem[_41033 + 32 len ceil32(_41673)]
                                                    if ceil32(_41673) > _41673:
                                                        mem[_41673 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41673) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39723 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39723)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39723)]
                                                    if ceil32(_39723) > _39723:
                                                        mem[_39723 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39723) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39960 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39960) > _39960:
                                                        mem[_39960 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39960) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41034 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 224] = 32
                                                _41674 = mem[_41034]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 256] = mem[_41034]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 288 len ceil32(_41674)] = mem[_41034 + 32 len ceil32(_41674)]
                                                if ceil32(_41674) > _41674:
                                                    mem[_41674 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 256 len ceil32(_41674) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39616 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39616)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39616)]
                                                    if ceil32(_39616) > _39616:
                                                        mem[_39616 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39616) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39725 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39725) > _39725:
                                                        mem[_39725 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39725) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41035 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41675 = mem[_41035]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 256] = mem[_41035]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41675)] = mem[_41035 + 32 len ceil32(_41675)]
                                                if ceil32(_41675) > _41675:
                                                    mem[_41675 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41675) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39726 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39726)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39726)]
                                                if ceil32(_39726) > _39726:
                                                    mem[_39726 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39726) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39962 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39962) > _39962:
                                                    mem[_39962 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39962) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41036 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 224] = 32
                                            _41676 = mem[_41036]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 256] = mem[_41036]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 288 len ceil32(_41676)] = mem[_41036 + 32 len ceil32(_41676)]
                                            if ceil32(_41676) > _41676:
                                                mem[_41676 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33555 + stor14.length.field_1 + 256 len ceil32(_41676) + 32], 
                                        mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                        if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                            _33556 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            var58001 = ceil32(mem[ceil32(stor13.length.field_1) + 160])
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39619 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39619)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39619)]
                                                        if ceil32(_39619) > _39619:
                                                            mem[_39619 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39619) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39728 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_39728) > _39728:
                                                            mem[_39728 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39728) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41037 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41677 = mem[_41037]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 256] = mem[_41037]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41677)] = mem[_41037 + 32 len ceil32(_41677)]
                                                    if ceil32(_41677) > _41677:
                                                        mem[_41677 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41677) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39729 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39729)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39729)]
                                                    if ceil32(_39729) > _39729:
                                                        mem[_39729 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39729) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39964 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39964) > _39964:
                                                        mem[_39964 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39964) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41038 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 224] = 32
                                                _41678 = mem[_41038]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 256] = mem[_41038]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 288 len ceil32(_41678)] = mem[_41038 + 32 len ceil32(_41678)]
                                                if ceil32(_41678) > _41678:
                                                    mem[_41678 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 256 len ceil32(_41678) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39622 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39622)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39622)]
                                                    if ceil32(_39622) > _39622:
                                                        mem[_39622 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39622) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39731 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39731) > _39731:
                                                        mem[_39731 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39731) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41039 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41679 = mem[_41039]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 256] = mem[_41039]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41679)] = mem[_41039 + 32 len ceil32(_41679)]
                                                if ceil32(_41679) > _41679:
                                                    mem[_41679 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41679) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39732 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39732)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39732)]
                                                if ceil32(_39732) > _39732:
                                                    mem[_39732 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39732) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39966 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39966) > _39966:
                                                    mem[_39966 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39966) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41040 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 224] = 32
                                            _41680 = mem[_41040]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 256] = mem[_41040]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 288 len ceil32(_41680)] = mem[_41040 + 32 len ceil32(_41680)]
                                            if ceil32(_41680) > _41680:
                                                mem[_41680 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33556 + stor14.length.field_1 + 256 len ceil32(_41680) + 32], 
                                        mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                        _33557 = mem[ceil32(stor13.length.field_1) + 160]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                        var58001 = ceil32(mem[ceil32(stor13.length.field_1) + 160])
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39625 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39625)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39625)]
                                                    if ceil32(_39625) > _39625:
                                                        mem[_39625 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39625) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39734 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39734) > _39734:
                                                        mem[_39734 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39734) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41041 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41681 = mem[_41041]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 256] = mem[_41041]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41681)] = mem[_41041 + 32 len ceil32(_41681)]
                                                if ceil32(_41681) > _41681:
                                                    mem[_41681 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41681) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39735 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39735)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39735)]
                                                if ceil32(_39735) > _39735:
                                                    mem[_39735 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39735) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39968 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39968) > _39968:
                                                    mem[_39968 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39968) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41042 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 224] = 32
                                            _41682 = mem[_41042]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 256] = mem[_41042]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 288 len ceil32(_41682)] = mem[_41042 + 32 len ceil32(_41682)]
                                            if ceil32(_41682) > _41682:
                                                mem[_41682 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 256 len ceil32(_41682) + 32], 
                                        mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39628 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39628)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39628)]
                                                if ceil32(_39628) > _39628:
                                                    mem[_39628 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39628) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39737 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39737) > _39737:
                                                    mem[_39737 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39737) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41043 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _41683 = mem[_41043]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 256] = mem[_41043]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41683)] = mem[_41043 + 32 len ceil32(_41683)]
                                            if ceil32(_41683) > _41683:
                                                mem[_41683 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41683) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _39738 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39738)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39738)]
                                            if ceil32(_39738) > _39738:
                                                mem[_39738 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39738) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _39970 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_39970) > _39970:
                                                mem[_39970 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_39970) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41044 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 224] = 32
                                        _41684 = mem[_41044]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 256] = mem[_41044]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 288 len ceil32(_41684)] = mem[_41044 + 32 len ceil32(_41684)]
                                        if ceil32(_41684) > _41684:
                                            mem[_41684 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33557 + stor14.length.field_1 + 256 len ceil32(_41684) + 32], 
                                    if bool(stor13.length) == stor13.length.field_1 < 32:
                                        revert with 0, 34
                                    if not stor13.length.field_1:
                                        if stor13.length.field_1 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[64] = ceil32(stor13.length.field_1) + 224
                                            mem[ceil32(stor13.length.field_1) + 160] = 1
                                            mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20731 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20731) > _20731:
                                                            mem[_20731 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20731) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27522 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28036 = mem[_27522]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27522]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28036)] = mem[_27522 + 32 len ceil32(_28036)]
                                                    if ceil32(_28036) > _28036:
                                                        mem[_28036 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28036) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20864 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20864) > _20864:
                                                        mem[_20864 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20864) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27523 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                _28037 = mem[_27523]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27523]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28037)] = mem[_27523 + 32 len ceil32(_28037)]
                                                if ceil32(_28037) > _28037:
                                                    mem[_28037 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28037) + 32]
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20737 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20737) > _20737:
                                                        mem[_20737 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20737) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27526 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                _28040 = mem[_27526]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27526]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28040)] = mem[_27526 + 32 len ceil32(_28040)]
                                                if ceil32(_28040) > _28040:
                                                    mem[_28040 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28040) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _20868 = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                if ceil32(_20868) > _20868:
                                                    mem[_20868 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_20868) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            s = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _27527 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                            _28041 = mem[_27527]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27527]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28041)] = mem[_27527 + 32 len ceil32(_28041)]
                                            if ceil32(_28041) > _28041:
                                                mem[_28041 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28041) + 32]
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(stor13.length.field_1) + 160] = s
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                _27516 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34758 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34758)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34758)]
                                                            if ceil32(_34758) > _34758:
                                                                mem[_34758 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34758) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35010 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_35010) > _35010:
                                                                mem[_35010 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35010) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38187 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39055 = mem[_38187]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38187]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39055)] = mem[_38187 + 32 len ceil32(_39055)]
                                                        if ceil32(_39055) > _39055:
                                                            mem[_39055 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39055) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _35011 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35011)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35011)]
                                                        if ceil32(_35011) > _35011:
                                                            mem[_35011 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35011) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35271 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35271) > _35271:
                                                            mem[_35271 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35271) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38188 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 224] = 32
                                                    _39056 = mem[_38188]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 256] = mem[_38188]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 288 len ceil32(_39056)] = mem[_38188 + 32 len ceil32(_39056)]
                                                    if ceil32(_39056) > _39056:
                                                        mem[_39056 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 256 len ceil32(_39056) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34761 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34761)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34761)]
                                                        if ceil32(_34761) > _34761:
                                                            mem[_34761 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34761) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35013 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35013) > _35013:
                                                            mem[_35013 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35013) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38189 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39057 = mem[_38189]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38189]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39057)] = mem[_38189 + 32 len ceil32(_39057)]
                                                    if ceil32(_39057) > _39057:
                                                        mem[_39057 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39057) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35014 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35014)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35014)]
                                                    if ceil32(_35014) > _35014:
                                                        mem[_35014 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35014) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35273 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35273) > _35273:
                                                        mem[_35273 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35273) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38190 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 224] = 32
                                                _39058 = mem[_38190]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 256] = mem[_38190]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 288 len ceil32(_39058)] = mem[_38190 + 32 len ceil32(_39058)]
                                                if ceil32(_39058) > _39058:
                                                    mem[_39058 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27516 + stor14.length.field_1 + 256 len ceil32(_39058) + 32], 
                                            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                            _27517 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34764 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34764)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34764)]
                                                        if ceil32(_34764) > _34764:
                                                            mem[_34764 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34764) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35016 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35016) > _35016:
                                                            mem[_35016 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35016) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38191 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39059 = mem[_38191]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38191]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39059)] = mem[_38191 + 32 len ceil32(_39059)]
                                                    if ceil32(_39059) > _39059:
                                                        mem[_39059 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39059) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35017 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35017)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35017)]
                                                    if ceil32(_35017) > _35017:
                                                        mem[_35017 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35017) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35275 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35275) > _35275:
                                                        mem[_35275 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35275) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38192 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 224] = 32
                                                _39060 = mem[_38192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 256] = mem[_38192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 288 len ceil32(_39060)] = mem[_38192 + 32 len ceil32(_39060)]
                                                if ceil32(_39060) > _39060:
                                                    mem[_39060 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 256 len ceil32(_39060) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34767 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34767)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34767)]
                                                    if ceil32(_34767) > _34767:
                                                        mem[_34767 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34767) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35019 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35019) > _35019:
                                                        mem[_35019 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35019) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38193 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39061 = mem[_38193]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38193]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39061)] = mem[_38193 + 32 len ceil32(_39061)]
                                                if ceil32(_39061) > _39061:
                                                    mem[_39061 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39061) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35020 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35020)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35020)]
                                                if ceil32(_35020) > _35020:
                                                    mem[_35020 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35020) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35277 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35277) > _35277:
                                                    mem[_35277 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35277) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38194 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 224] = 32
                                            _39062 = mem[_38194]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 256] = mem[_38194]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 288 len ceil32(_39062)] = mem[_38194 + 32 len ceil32(_39062)]
                                            if ceil32(_39062) > _39062:
                                                mem[_39062 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27517 + stor14.length.field_1 + 256 len ceil32(_39062) + 32], 
                                        mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                        if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                            _27518 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34770 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34770)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34770)]
                                                        if ceil32(_34770) > _34770:
                                                            mem[_34770 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34770) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35022 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35022) > _35022:
                                                            mem[_35022 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35022) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38195 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39063 = mem[_38195]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38195]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39063)] = mem[_38195 + 32 len ceil32(_39063)]
                                                    if ceil32(_39063) > _39063:
                                                        mem[_39063 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39063) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35023 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35023)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35023)]
                                                    if ceil32(_35023) > _35023:
                                                        mem[_35023 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35023) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35279 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35279) > _35279:
                                                        mem[_35279 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35279) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38196 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 224] = 32
                                                _39064 = mem[_38196]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 256] = mem[_38196]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 288 len ceil32(_39064)] = mem[_38196 + 32 len ceil32(_39064)]
                                                if ceil32(_39064) > _39064:
                                                    mem[_39064 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 256 len ceil32(_39064) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34773 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34773)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34773)]
                                                    if ceil32(_34773) > _34773:
                                                        mem[_34773 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34773) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35025 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35025) > _35025:
                                                        mem[_35025 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35025) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38197 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39065 = mem[_38197]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38197]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39065)] = mem[_38197 + 32 len ceil32(_39065)]
                                                if ceil32(_39065) > _39065:
                                                    mem[_39065 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39065) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35026 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35026)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35026)]
                                                if ceil32(_35026) > _35026:
                                                    mem[_35026 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35026) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35281 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35281) > _35281:
                                                    mem[_35281 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35281) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38198 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 224] = 32
                                            _39066 = mem[_38198]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 256] = mem[_38198]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 288 len ceil32(_39066)] = mem[_38198 + 32 len ceil32(_39066)]
                                            if ceil32(_39066) > _39066:
                                                mem[_39066 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27518 + stor14.length.field_1 + 256 len ceil32(_39066) + 32], 
                                        mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                        _27519 = mem[ceil32(stor13.length.field_1) + 160]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34776 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34776)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34776)]
                                                    if ceil32(_34776) > _34776:
                                                        mem[_34776 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34776) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35028 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35028) > _35028:
                                                        mem[_35028 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35028) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38199 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39067 = mem[_38199]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38199]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39067)] = mem[_38199 + 32 len ceil32(_39067)]
                                                if ceil32(_39067) > _39067:
                                                    mem[_39067 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39067) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35029 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35029)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35029)]
                                                if ceil32(_35029) > _35029:
                                                    mem[_35029 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35029) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35283 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35283) > _35283:
                                                    mem[_35283 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35283) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38200 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 224] = 32
                                            _39068 = mem[_38200]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 256] = mem[_38200]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 288 len ceil32(_39068)] = mem[_38200 + 32 len ceil32(_39068)]
                                            if ceil32(_39068) > _39068:
                                                mem[_39068 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 256 len ceil32(_39068) + 32], 
                                        mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _34779 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34779)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34779)]
                                                if ceil32(_34779) > _34779:
                                                    mem[_34779 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34779) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35031 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35031) > _35031:
                                                    mem[_35031 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35031) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38201 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _39069 = mem[_38201]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[_38201]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39069)] = mem[_38201 + 32 len ceil32(_39069)]
                                            if ceil32(_39069) > _39069:
                                                mem[_39069 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39069) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _35032 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35032)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35032)]
                                            if ceil32(_35032) > _35032:
                                                mem[_35032 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35032) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _35285 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_35285) > _35285:
                                                mem[_35285 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_35285) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _38202 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 224] = 32
                                        _39070 = mem[_38202]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 256] = mem[_38202]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 288 len ceil32(_39070)] = mem[_38202 + 32 len ceil32(_39070)]
                                        if ceil32(_39070) > _39070:
                                            mem[_39070 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27519 + stor14.length.field_1 + 256 len ceil32(_39070) + 32], 
                                    if 31 >= stor13.length.field_1:
                                        mem[160] = 256 * stor13.length.field_8
                                        if stor13.length.field_1 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[64] = ceil32(stor13.length.field_1) + 224
                                            mem[ceil32(stor13.length.field_1) + 160] = 1
                                            mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _20753 = mem[ceil32(stor13.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                        if ceil32(_20753) > _20753:
                                                            mem[_20753 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_20753) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _27536 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    _28048 = mem[_27536]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27536]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28048)] = mem[_27536 + 32 len ceil32(_28048)]
                                                    if ceil32(_28048) > _28048:
                                                        mem[_28048 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28048) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20881 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20881) > _20881:
                                                        mem[_20881 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20881) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27537 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                _28049 = mem[_27537]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27537]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28049)] = mem[_27537 + 32 len ceil32(_28049)]
                                                if ceil32(_28049) > _28049:
                                                    mem[_28049 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28049) + 32]
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _20759 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_20759) > _20759:
                                                        mem[_20759 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_20759) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _27540 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                _28052 = mem[_27540]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[_27540]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(_28052)] = mem[_27540 + 32 len ceil32(_28052)]
                                                if ceil32(_28052) > _28052:
                                                    mem[_28052 + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(_28052) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _20885 = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                if ceil32(_20885) > _20885:
                                                    mem[_20885 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_20885) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            s = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 256] = stor14[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _27541 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                            _28053 = mem[_27541]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[_27541]
                                            mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(_28053)] = mem[_27541 + 32 len ceil32(_28053)]
                                            if ceil32(_28053) > _28053:
                                                mem[_28053 + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(_28053) + 32]
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(stor13.length.field_1) + 160] = s
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                            if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                                _27530 = mem[ceil32(stor13.length.field_1) + 160]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                    if bool(stor14.length):
                                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor14.length):
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                            _34790 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34790)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34790)]
                                                            if ceil32(_34790) > _34790:
                                                                mem[_34790 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34790) + 32], 
                                                        if bool(stor14.length) != 1:
                                                            mem[64] = 0
                                                            _35050 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_35050) > _35050:
                                                                mem[_35050 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_35050) + -mem[64] + 64
                                                        mem[0] = 14
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor14.length) * 0.5:
                                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _38203 = mem[64]
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39079 = mem[_38203]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 256] = mem[_38203]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39079)] = mem[_38203 + 32 len ceil32(_39079)]
                                                        if ceil32(_39079) > _39079:
                                                            mem[_39079 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39079) + 32], 
                                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                        _35051 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35051)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35051)]
                                                        if ceil32(_35051) > _35051:
                                                            mem[_35051 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35051) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35319 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35319) > _35319:
                                                            mem[_35319 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35319) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38204 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 224] = 32
                                                    _39080 = mem[_38204]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 256] = mem[_38204]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 288 len ceil32(_39080)] = mem[_38204 + 32 len ceil32(_39080)]
                                                    if ceil32(_39080) > _39080:
                                                        mem[_39080 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 256 len ceil32(_39080) + 32], 
                                                mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34793 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34793)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34793)]
                                                        if ceil32(_34793) > _34793:
                                                            mem[_34793 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34793) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35053 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35053) > _35053:
                                                            mem[_35053 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35053) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38205 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39081 = mem[_38205]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 256] = mem[_38205]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39081)] = mem[_38205 + 32 len ceil32(_39081)]
                                                    if ceil32(_39081) > _39081:
                                                        mem[_39081 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39081) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35054 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35054)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35054)]
                                                    if ceil32(_35054) > _35054:
                                                        mem[_35054 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35054) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35321 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35321) > _35321:
                                                        mem[_35321 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35321) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38206 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 224] = 32
                                                _39082 = mem[_38206]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 256] = mem[_38206]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 288 len ceil32(_39082)] = mem[_38206 + 32 len ceil32(_39082)]
                                                if ceil32(_39082) > _39082:
                                                    mem[_39082 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27530 + stor14.length.field_1 + 256 len ceil32(_39082) + 32], 
                                            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                            _27531 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34796 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34796)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34796)]
                                                        if ceil32(_34796) > _34796:
                                                            mem[_34796 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34796) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35056 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35056) > _35056:
                                                            mem[_35056 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35056) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38207 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39083 = mem[_38207]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 256] = mem[_38207]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39083)] = mem[_38207 + 32 len ceil32(_39083)]
                                                    if ceil32(_39083) > _39083:
                                                        mem[_39083 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39083) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35057 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35057)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35057)]
                                                    if ceil32(_35057) > _35057:
                                                        mem[_35057 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35057) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35323 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35323) > _35323:
                                                        mem[_35323 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35323) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38208 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 224] = 32
                                                _39084 = mem[_38208]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 256] = mem[_38208]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 288 len ceil32(_39084)] = mem[_38208 + 32 len ceil32(_39084)]
                                                if ceil32(_39084) > _39084:
                                                    mem[_39084 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 256 len ceil32(_39084) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34799 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34799)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34799)]
                                                    if ceil32(_34799) > _34799:
                                                        mem[_34799 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34799) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35059 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35059) > _35059:
                                                        mem[_35059 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35059) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38209 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39085 = mem[_38209]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 256] = mem[_38209]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39085)] = mem[_38209 + 32 len ceil32(_39085)]
                                                if ceil32(_39085) > _39085:
                                                    mem[_39085 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39085) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35060 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35060)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35060)]
                                                if ceil32(_35060) > _35060:
                                                    mem[_35060 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35060) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35325 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35325) > _35325:
                                                    mem[_35325 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35325) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38210 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 224] = 32
                                            _39086 = mem[_38210]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 256] = mem[_38210]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 288 len ceil32(_39086)] = mem[_38210 + 32 len ceil32(_39086)]
                                            if ceil32(_39086) > _39086:
                                                mem[_39086 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27531 + stor14.length.field_1 + 256 len ceil32(_39086) + 32], 
                                        mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                        if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                            _27532 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _34802 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34802)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34802)]
                                                        if ceil32(_34802) > _34802:
                                                            mem[_34802 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34802) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _35062 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_35062) > _35062:
                                                            mem[_35062 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_35062) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _38211 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39087 = mem[_38211]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 256] = mem[_38211]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39087)] = mem[_38211 + 32 len ceil32(_39087)]
                                                    if ceil32(_39087) > _39087:
                                                        mem[_39087 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39087) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _35063 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35063)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35063)]
                                                    if ceil32(_35063) > _35063:
                                                        mem[_35063 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35063) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35327 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35327) > _35327:
                                                        mem[_35327 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35327) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38212 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 224] = 32
                                                _39088 = mem[_38212]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 256] = mem[_38212]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 288 len ceil32(_39088)] = mem[_38212 + 32 len ceil32(_39088)]
                                                if ceil32(_39088) > _39088:
                                                    mem[_39088 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 256 len ceil32(_39088) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34805 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34805)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34805)]
                                                    if ceil32(_34805) > _34805:
                                                        mem[_34805 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34805) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35065 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35065) > _35065:
                                                        mem[_35065 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35065) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38213 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39089 = mem[_38213]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 256] = mem[_38213]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39089)] = mem[_38213 + 32 len ceil32(_39089)]
                                                if ceil32(_39089) > _39089:
                                                    mem[_39089 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39089) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35066 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35066)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35066)]
                                                if ceil32(_35066) > _35066:
                                                    mem[_35066 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35066) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35329 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35329) > _35329:
                                                    mem[_35329 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35329) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38214 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 224] = 32
                                            _39090 = mem[_38214]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 256] = mem[_38214]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 288 len ceil32(_39090)] = mem[_38214 + 32 len ceil32(_39090)]
                                            if ceil32(_39090) > _39090:
                                                mem[_39090 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27532 + stor14.length.field_1 + 256 len ceil32(_39090) + 32], 
                                        mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                        _27533 = mem[ceil32(stor13.length.field_1) + 160]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _34808 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34808)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34808)]
                                                    if ceil32(_34808) > _34808:
                                                        mem[_34808 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34808) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _35068 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_35068) > _35068:
                                                        mem[_35068 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_35068) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _38215 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39091 = mem[_38215]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 256] = mem[_38215]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39091)] = mem[_38215 + 32 len ceil32(_39091)]
                                                if ceil32(_39091) > _39091:
                                                    mem[_39091 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39091) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _35069 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35069)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35069)]
                                                if ceil32(_35069) > _35069:
                                                    mem[_35069 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35069) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35331 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35331) > _35331:
                                                    mem[_35331 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35331) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38216 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 224] = 32
                                            _39092 = mem[_38216]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 256] = mem[_38216]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 288 len ceil32(_39092)] = mem[_38216 + 32 len ceil32(_39092)]
                                            if ceil32(_39092) > _39092:
                                                mem[_39092 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 256 len ceil32(_39092) + 32], 
                                        mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _34811 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_34811)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_34811)]
                                                if ceil32(_34811) > _34811:
                                                    mem[_34811 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_34811) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _35071 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_35071) > _35071:
                                                    mem[_35071 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_35071) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _38217 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _39093 = mem[_38217]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 256] = mem[_38217]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39093)] = mem[_38217 + 32 len ceil32(_39093)]
                                            if ceil32(_39093) > _39093:
                                                mem[_39093 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39093) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _35072 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_35072)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_35072)]
                                            if ceil32(_35072) > _35072:
                                                mem[_35072 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_35072) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _35333 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_35333) > _35333:
                                                mem[_35333 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_35333) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _38218 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 224] = 32
                                        _39094 = mem[_38218]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 256] = mem[_38218]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 288 len ceil32(_39094)] = mem[_38218 + 32 len ceil32(_39094)]
                                        if ceil32(_39094) > _39094:
                                            mem[_39094 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _27533 + stor14.length.field_1 + 256 len ceil32(_39094) + 32], 
                                    mem[0] = 13
                                    mem[160] = uint256(stor13.field_0)
                                    idx = 160
                                    s = 0
                                    while stor13.length.field_1 + 128 > idx:
                                        mem[idx + 32] = stor13[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if stor13.length.field_1 <= 0:
                                        return ''
                                    if not cd[4]:
                                        mem[ceil32(stor13.length.field_1) + 160] = 1
                                        mem[ceil32(stor13.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor13.length.field_1) + 256 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = 0
                                        if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                            if not bool(stor14.length):
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                mem[64] = 0
                                                _29202 = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                var67001 = ceil32(_29202)
                                                if ceil32(_29202) > _29202:
                                                    mem[_29202 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_29202) + -mem[64] + 64
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                            else:
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _28927 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_28927) > _28927:
                                                        mem[_28927 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_28927) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                var69001 = ceil32(mem[ceil32(stor13.length.field_1) + 224])
                                        else:
                                            if not bool(stor14.length):
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                if bool(stor14.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor14.length.field_1:
                                                        mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 257] = 32
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + stor14.length.field_1 + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                                mem[64] = 0
                                                _29206 = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                var67001 = ceil32(_29206)
                                                if ceil32(_29206) > _29206:
                                                    mem[_29206 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_29206) + -mem[64] + 64
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = Mask(248, 8, stor14.length)
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                            else:
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _28933 = mem[ceil32(stor13.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                    if ceil32(_28933) > _28933:
                                                        mem[_28933 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_28933) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + stor13.length.field_1 + 257] = stor14[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289] = mem[ceil32(stor13.length.field_1) + 224]
                                                mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])] = mem[ceil32(stor13.length.field_1) + 256 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]
                                                var69001 = ceil32(mem[ceil32(stor13.length.field_1) + 224])
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 224]) <= mem[ceil32(stor13.length.field_1) + 224]:
                                            return Array(len=mem[ceil32(stor13.length.field_1) + 224], data=mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321 len ceil32(mem[ceil32(stor13.length.field_1) + 224])]), 
                                        mem[mem[ceil32(stor13.length.field_1) + 224] + ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 321] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + stor13.length.field_1 + (uint255(stor14.length) * 0.5) + 289 len ceil32(mem[ceil32(stor13.length.field_1) + 224]) + 32], 
                                    s = 0
                                    idx = cd[4]
                                    while idx:
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        idx = idx / 10
                                        continue 
                                    if s > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(stor13.length.field_1) + 160] = s
                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + 192
                                    if not s:
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                        if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                            _33566 = mem[ceil32(stor13.length.field_1) + 160]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                                if bool(stor14.length):
                                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor14.length):
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                        _39631 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39631)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39631)]
                                                        if ceil32(_39631) > _39631:
                                                            mem[_39631 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39631) + 32], 
                                                    if bool(stor14.length) != 1:
                                                        mem[64] = 0
                                                        _39740 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_39740) > _39740:
                                                            mem[_39740 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_39740) + -mem[64] + 64
                                                    mem[0] = 14
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor14.length) * 0.5:
                                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _41045 = mem[64]
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _41685 = mem[_41045]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 256] = mem[_41045]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41685)] = mem[_41045 + 32 len ceil32(_41685)]
                                                    if ceil32(_41685) > _41685:
                                                        mem[_41685 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41685) + 32], 
                                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                    _39741 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39741)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39741)]
                                                    if ceil32(_39741) > _39741:
                                                        mem[_39741 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39741) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _40036 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_40036) > _40036:
                                                        mem[_40036 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_40036) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < stor14.length.field_1:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41046 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 224] = 32
                                                _41686 = mem[_41046]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 256] = mem[_41046]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 288 len ceil32(_41686)] = mem[_41046 + 32 len ceil32(_41686)]
                                                if ceil32(_41686) > _41686:
                                                    mem[_41686 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 256 len ceil32(_41686) + 32], 
                                            mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39634 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39634)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39634)]
                                                    if ceil32(_39634) > _39634:
                                                        mem[_39634 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39634) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39743 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39743) > _39743:
                                                        mem[_39743 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39743) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41047 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41687 = mem[_41047]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 256] = mem[_41047]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41687)] = mem[_41047 + 32 len ceil32(_41687)]
                                                if ceil32(_41687) > _41687:
                                                    mem[_41687 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41687) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39744 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39744)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39744)]
                                                if ceil32(_39744) > _39744:
                                                    mem[_39744 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39744) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _40038 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_40038) > _40038:
                                                    mem[_40038 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_40038) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41048 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 224] = 32
                                            _41688 = mem[_41048]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 256] = mem[_41048]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 288 len ceil32(_41688)] = mem[_41048 + 32 len ceil32(_41688)]
                                            if ceil32(_41688) > _41688:
                                                mem[_41688 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33566 + stor14.length.field_1 + 256 len ceil32(_41688) + 32], 
                                        mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                        _33567 = mem[ceil32(stor13.length.field_1) + 160]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39637 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39637)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39637)]
                                                    if ceil32(_39637) > _39637:
                                                        mem[_39637 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39637) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39746 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39746) > _39746:
                                                        mem[_39746 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39746) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41049 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41689 = mem[_41049]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 256] = mem[_41049]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41689)] = mem[_41049 + 32 len ceil32(_41689)]
                                                if ceil32(_41689) > _41689:
                                                    mem[_41689 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41689) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39747 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39747)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39747)]
                                                if ceil32(_39747) > _39747:
                                                    mem[_39747 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39747) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _40040 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_40040) > _40040:
                                                    mem[_40040 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_40040) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41050 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 224] = 32
                                            _41690 = mem[_41050]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 256] = mem[_41050]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 288 len ceil32(_41690)] = mem[_41050 + 32 len ceil32(_41690)]
                                            if ceil32(_41690) > _41690:
                                                mem[_41690 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 256 len ceil32(_41690) + 32], 
                                        mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39640 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39640)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39640)]
                                                if ceil32(_39640) > _39640:
                                                    mem[_39640 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39640) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39749 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39749) > _39749:
                                                    mem[_39749 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39749) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41051 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _41691 = mem[_41051]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 256] = mem[_41051]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41691)] = mem[_41051 + 32 len ceil32(_41691)]
                                            if ceil32(_41691) > _41691:
                                                mem[_41691 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41691) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _39750 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39750)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39750)]
                                            if ceil32(_39750) > _39750:
                                                mem[_39750 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39750) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _40042 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_40042) > _40042:
                                                mem[_40042 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_40042) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41052 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 224] = 32
                                        _41692 = mem[_41052]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 256] = mem[_41052]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 288 len ceil32(_41692)] = mem[_41052 + 32 len ceil32(_41692)]
                                        if ceil32(_41692) > _41692:
                                            mem[_41692 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33567 + stor14.length.field_1 + 256 len ceil32(_41692) + 32], 
                                    mem[ceil32(stor13.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(stor13.length.field_1) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(stor13.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                    if ceil32(stor13.length.field_1) <= stor13.length.field_1:
                                        _33568 = mem[ceil32(stor13.length.field_1) + 160]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                        var59001 = ceil32(mem[ceil32(stor13.length.field_1) + 160])
                                        if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                            if bool(stor14.length):
                                                if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor14.length):
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                    _39643 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39643)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39643)]
                                                    if ceil32(_39643) > _39643:
                                                        mem[_39643 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39643) + 32], 
                                                if bool(stor14.length) != 1:
                                                    mem[64] = 0
                                                    _39752 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_39752) > _39752:
                                                        mem[_39752 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_39752) + -mem[64] + 64
                                                mem[0] = 14
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor14.length) * 0.5:
                                                    mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _41053 = mem[64]
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _41693 = mem[_41053]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 256] = mem[_41053]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41693)] = mem[_41053 + 32 len ceil32(_41693)]
                                                if ceil32(_41693) > _41693:
                                                    mem[_41693 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41693) + 32], 
                                            if bool(stor14.length) == stor14.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                                _39753 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39753)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39753)]
                                                if ceil32(_39753) > _39753:
                                                    mem[_39753 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39753) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _40044 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_40044) > _40044:
                                                    mem[_40044 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_40044) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < stor14.length.field_1:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41054 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 224] = 32
                                            _41694 = mem[_41054]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 256] = mem[_41054]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 288 len ceil32(_41694)] = mem[_41054 + 32 len ceil32(_41694)]
                                            if ceil32(_41694) > _41694:
                                                mem[_41694 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 256 len ceil32(_41694) + 32], 
                                        mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39646 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39646)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39646)]
                                                if ceil32(_39646) > _39646:
                                                    mem[_39646 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39646) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39755 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39755) > _39755:
                                                    mem[_39755 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39755) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41055 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _41695 = mem[_41055]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 256] = mem[_41055]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41695)] = mem[_41055 + 32 len ceil32(_41695)]
                                            if ceil32(_41695) > _41695:
                                                mem[_41695 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41695) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _39756 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39756)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39756)]
                                            if ceil32(_39756) > _39756:
                                                mem[_39756 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39756) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _40046 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_40046) > _40046:
                                                mem[_40046 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_40046) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41056 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 224] = 32
                                        _41696 = mem[_41056]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 256] = mem[_41056]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 288 len ceil32(_41696)] = mem[_41056 + 32 len ceil32(_41696)]
                                        if ceil32(_41696) > _41696:
                                            mem[_41696 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33568 + stor14.length.field_1 + 256 len ceil32(_41696) + 32], 
                                    mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + ceil32(s) + 224] = 0
                                    _33569 = mem[ceil32(stor13.length.field_1) + 160]
                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224 len ceil32(mem[ceil32(stor13.length.field_1) + 160])] = mem[ceil32(stor13.length.field_1) + 192 len ceil32(mem[ceil32(stor13.length.field_1) + 160])]
                                    var59001 = ceil32(mem[ceil32(stor13.length.field_1) + 160])
                                    if ceil32(mem[ceil32(stor13.length.field_1) + 160]) <= mem[ceil32(stor13.length.field_1) + 160]:
                                        if bool(stor14.length):
                                            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor14.length):
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                                mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                                _39649 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39649)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39649)]
                                                if ceil32(_39649) > _39649:
                                                    mem[_39649 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39649) + 32], 
                                            if bool(stor14.length) != 1:
                                                mem[64] = 0
                                                _39758 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_39758) > _39758:
                                                    mem[_39758 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_39758) + -mem[64] + 64
                                            mem[0] = 14
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor14.length) * 0.5:
                                                mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _41057 = mem[64]
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _41697 = mem[_41057]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 256] = mem[_41057]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41697)] = mem[_41057 + 32 len ceil32(_41697)]
                                            if ceil32(_41697) > _41697:
                                                mem[_41697 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41697) + 32], 
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                            _39759 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39759)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39759)]
                                            if ceil32(_39759) > _39759:
                                                mem[_39759 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39759) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _40048 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_40048) > _40048:
                                                mem[_40048 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_40048) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < stor14.length.field_1:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41058 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 224] = 32
                                        _41698 = mem[_41058]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 256] = mem[_41058]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 288 len ceil32(_41698)] = mem[_41058 + 32 len ceil32(_41698)]
                                        if ceil32(_41698) > _41698:
                                            mem[_41698 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 256 len ceil32(_41698) + 32], 
                                    mem[mem[ceil32(stor13.length.field_1) + 160] + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + 224] = 0
                                    if bool(stor14.length):
                                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor14.length):
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                            mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 224] = 32
                                            _39652 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288 len ceil32(_39652)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39652)]
                                            if ceil32(_39652) > _39652:
                                                mem[_39652 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + (uint255(stor14.length) * 0.5) + 256 len ceil32(_39652) + 32], 
                                        if bool(stor14.length) != 1:
                                            mem[64] = 0
                                            _39761 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_39761) > _39761:
                                                mem[_39761 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_39761) + -mem[64] + 64
                                        mem[0] = 14
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor14.length) * 0.5:
                                            mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _41059 = mem[64]
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 224] = 32
                                        _41699 = mem[_41059]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 256] = mem[_41059]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 288 len ceil32(_41699)] = mem[_41059 + 32 len ceil32(_41699)]
                                        if ceil32(_41699) > _41699:
                                            mem[_41699 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + (uint255(stor14.length) * 0.5) + 256 len ceil32(_41699) + 32], 
                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor14.length):
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = Mask(248, 8, stor14.length)
                                        mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 224] = 32
                                        _39762 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288 len ceil32(_39762)] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(_39762)]
                                        if ceil32(_39762) > _39762:
                                            mem[_39762 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + stor14.length.field_1 + 256 len ceil32(_39762) + 32], 
                                    if bool(stor14.length) != 1:
                                        mem[64] = 0
                                        _40050 = mem[ceil32(stor13.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor13.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor13.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_40050) > _40050:
                                            mem[_40050 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_40050) + -mem[64] + 64
                                    mem[0] = 14
                                    idx = 0
                                    t = 0
                                    while idx < stor14.length.field_1:
                                        mem[idx + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + mem[ceil32(stor13.length.field_1) + 160] + 224] = stor14[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _41060 = mem[64]
                                    mem[64] = ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 224
                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 224] = 32
                                    _41700 = mem[_41060]
                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 256] = mem[_41060]
                                    mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 288 len ceil32(_41700)] = mem[_41060 + 32 len ceil32(_41700)]
                                    if ceil32(_41700) > _41700:
                                        mem[_41700 + ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor13.length.field_1) + ceil32(s) + stor13.length.field_1 + _33569 + stor14.length.field_1 + 256 len ceil32(_41700) + 32], 
                                require not msg.value
                                require calldata.size - 4 >= 128
                                require cd[4] == address(cd[4])
                                require cd[36] == address(cd[36])
                                require cd[100] <= test266151307()
                                require calldata.size > cd[100] + 35
                                if ('cd', 100).length > test266151307():
                                    revert with 0, 65
                                if ceil32(ceil32(('cd', 100).length)) + 129 < 128 or ceil32(ceil32(('cd', 100).length)) + 129 > test266151307():
                                    revert with 0, 65
                                mem[128] = ('cd', 100).length
                                require cd[100] + ('cd', 100).length + 36 <= calldata.size
                                mem[160 len ('cd', 100).length] = call.data[cd[100] + 36 len ('cd', 100).length]
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: operator query for nonexistent token'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != msg.sender:
                                    if not ownerOf[cd[68]]:
                                        revert with 0, 'ERC721: approved query for nonexistent token'
                                    if approved[cd[68]] != msg.sender:
                                        if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                            revert with 0, 'ERC721: transfer caller is not owner nor approved'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != address(cd[4]):
                                    revert with 0, 'ERC721: transfer from incorrect owner'
                                if not address(cd[36]):
                                    revert with 0, 'ERC721: transfer to the zero address'
                                idx = 0
                                while idx < sub_84917f4a.length:
                                    mem[0] = 30
                                    if sub_84917f4a[idx].field_0 == cd[68]:
                                        revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if not address(cd[4]):
                                    stor9[cd[68]] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = cd[68]
                                else:
                                    if address(cd[4]) != address(cd[36]):
                                        if not address(cd[4]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(cd[4])] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                            tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                            stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                        stor7[cd[68]] = 0
                                        tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                                if address(cd[36]):
                                    if address(cd[36]) != address(cd[4]):
                                        if not address(cd[36]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                        stor7[cd[68]] = balanceOf[address(cd[36])]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor9[cd[68]] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                                    stor9[stor8[stor8.length]] = stor9[cd[68]]
                                    stor9[cd[68]] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[cd[68]] = 0
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[cd[68]], 0, cd[68]);
                                if balanceOf[address(cd[4])] < 1:
                                    revert with 0, 17
                                balanceOf[address(cd[4])]--
                                if balanceOf[address(cd[36])] > -2:
                                    revert with 0, 17
                                balanceOf[address(cd[36])]++
                                ownerOf[cd[68]] = address(cd[36])
                                emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
                                if ext_code.size(address(cd[36])):
                                    mem[ceil32(ceil32(('cd', 100).length)) + 133] = msg.sender
                                    mem[ceil32(ceil32(('cd', 100).length)) + 165] = address(cd[4])
                                    mem[ceil32(ceil32(('cd', 100).length)) + 197] = cd[68]
                                    mem[ceil32(ceil32(('cd', 100).length)) + 229] = 128
                                    mem[ceil32(ceil32(('cd', 100).length)) + 261] = ('cd', 100).length
                                    mem[ceil32(ceil32(('cd', 100).length)) + 293 len ceil32(('cd', 100).length)] = call.data[cd[100] + 36 len ('cd', 100).length], Mask(8 * ceil32(('cd', 100).length) - ('cd', 100).length, -(8 * ceil32(('cd', 100).length) + -ceil32(ceil32(('cd', 100).length)) + 27) + 256, msg.sender) >> -(8 * ceil32(('cd', 100).length) + -ceil32(ceil32(('cd', 100).length)) + 27) + 256
                                    if ceil32(('cd', 100).length) > ('cd', 100).length:
                                        mem[('cd', 100).length + ceil32(ceil32(('cd', 100).length)) + 293] = 0
                                    call address(cd[36]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(cd[4]), cd[68], Array(len=('cd', 100).length, data=call.data[cd[100] + 36 len ('cd', 100).length])
                                    mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}



}
